{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\n    to[j] = from[i];\n  }\n\n  return to;\n};\n\nvar Track = require('./');\n\nvar _a = require('../../util/constants'),\n    E = _a.typeErrors,\n    trackPriority = _a.trackPriority;\n/**\n * A {@link RemoteDataTrack} represents data published to a {@link Room} by a\n * {@link RemoteParticipant}.\n * @extends Track\n * @property {boolean} isEnabled - true\n * @property {boolean} isSubscribed - Whether the {@link RemoteDataTrack} is\n *   subscribed to\n * @property {boolean} isSwitchedOff - Whether the {@link RemoteDataTrack} is\n *   switched off\n * @property {Track.Kind} kind - \"data\"\n * @property {?number} maxPacketLifeTime - If non-null, this represents a time\n *   limit (in milliseconds) during which data will be transmitted or\n *   retransmitted if not acknowledged on the underlying RTCDataChannel.\n * @property {?number} maxRetransmits - If non-null, this represents the number\n *   of times the data will be retransmitted if not successfully received on the\n *   underlying RTCDataChannel.\n * @property {boolean} ordered - true if data on the {@link RemoteDataTrack} can\n *   be received out-of-order.\n * @property {?Track.Priority} priority - The subscribe priority of the {@link RemoteDataTrack}\n * @property {boolean} reliable - This is true if both\n *   <code>maxPacketLifeTime</code> and <code>maxRetransmits</code> are set to\n *   null. In other words, if this is true, there is no bound on packet lifetime\n *   or the number of retransmits that will be attempted, ensuring \"reliable\"\n *   transmission.\n * @property {Track.SID} sid - The SID assigned to the {@link RemoteDataTrack}\n * @emits RemoteDataTrack#message\n * @emits RemoteDataTrack#switchedOff\n * @emits RemoteDataTrack#switchedOn\n */\n\n\nvar RemoteDataTrack = function (_super) {\n  __extends(RemoteDataTrack, _super);\n  /**\n   * Construct a {@link RemoteDataTrack} from a {@link DataTrackReceiver}.\n   * @param {Track.SID} sid\n   * @param {DataTrackReceiver} dataTrackReceiver\n   * @param {{log: Log, name: ?string}} options\n   */\n\n\n  function RemoteDataTrack(sid, dataTrackReceiver, options) {\n    var _this = _super.call(this, dataTrackReceiver.id, 'data', options) || this;\n\n    Object.defineProperties(_this, {\n      _isSwitchedOff: {\n        value: false,\n        writable: true\n      },\n      _priority: {\n        value: null,\n        writable: true\n      },\n      isEnabled: {\n        enumerable: true,\n        value: true\n      },\n      isSwitchedOff: {\n        enumerable: true,\n        get: function get() {\n          return this._isSwitchedOff;\n        }\n      },\n      maxPacketLifeTime: {\n        enumerable: true,\n        value: dataTrackReceiver.maxPacketLifeTime\n      },\n      maxRetransmits: {\n        enumerable: true,\n        value: dataTrackReceiver.maxRetransmits\n      },\n      ordered: {\n        enumerable: true,\n        value: dataTrackReceiver.ordered\n      },\n      priority: {\n        enumerable: true,\n        get: function get() {\n          return this._priority;\n        }\n      },\n      reliable: {\n        enumerable: true,\n        value: dataTrackReceiver.maxPacketLifeTime === null && dataTrackReceiver.maxRetransmits === null\n      },\n      sid: {\n        enumerable: true,\n        value: sid\n      }\n    });\n    dataTrackReceiver.on('message', function (data) {\n      _this.emit('message', data, _this);\n    });\n    return _this;\n  }\n  /**\n   * Update the subscriber {@link Track.Priority} of the {@link RemoteDataTrack}.\n   * @param {?Track.Priority} priority - the new {@link Track.priority};\n   *   Currently setPriority has no effect on data tracks.\n   * @returns {this}\n   * @throws {RangeError}\n   */\n\n\n  RemoteDataTrack.prototype.setPriority = function (priority) {\n    var priorityValues = __spreadArray([null], __read(Object.values(trackPriority)));\n\n    if (!priorityValues.includes(priority)) {\n      // eslint-disable-next-line new-cap\n      throw E.INVALID_VALUE('priority', priorityValues);\n    } // Note: priority has no real effect on the data tracks.\n\n\n    this._priority = priority;\n    return this;\n  };\n  /**\n   * @private\n   */\n\n\n  RemoteDataTrack.prototype._setEnabled = function () {// Do nothing.\n  };\n  /**\n   * @private\n   * @param {boolean} isSwitchedOff\n   */\n\n\n  RemoteDataTrack.prototype._setSwitchedOff = function (isSwitchedOff) {\n    if (this._isSwitchedOff !== isSwitchedOff) {\n      this._isSwitchedOff = isSwitchedOff;\n      this.emit(isSwitchedOff ? 'switchedOff' : 'switchedOn', this);\n    }\n  };\n\n  return RemoteDataTrack;\n}(Track);\n/**\n * A message was received over the {@link RemoteDataTrack}.\n * @event RemoteDataTrack#message\n * @param {string|ArrayBuffer} data\n * @param {RemoteDataTrack} track - The {@link RemoteDataTrack} that received\n *   the message\n */\n\n/**\n * A {@link RemoteDataTrack} was switched off.\n * @param {RemoteDataTrack} track - The {@link RemoteDataTrack} that was\n *   switched off\n * @event RemoteDataTrack#switchedOff\n */\n\n/**\n * A {@link RemoteDataTrack} was switched on.\n * @param {RemoteDataTrack} track - The {@link RemoteDataTrack} that was\n *   switched on\n * @event RemoteDataTrack#switchedOn\n */\n\n\nmodule.exports = RemoteDataTrack;","map":{"version":3,"sources":["../../../lib/media/track/remotedatatrack.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nvar Track = require('./');\nvar _a = require('../../util/constants'), E = _a.typeErrors, trackPriority = _a.trackPriority;\n/**\n * A {@link RemoteDataTrack} represents data published to a {@link Room} by a\n * {@link RemoteParticipant}.\n * @extends Track\n * @property {boolean} isEnabled - true\n * @property {boolean} isSubscribed - Whether the {@link RemoteDataTrack} is\n *   subscribed to\n * @property {boolean} isSwitchedOff - Whether the {@link RemoteDataTrack} is\n *   switched off\n * @property {Track.Kind} kind - \"data\"\n * @property {?number} maxPacketLifeTime - If non-null, this represents a time\n *   limit (in milliseconds) during which data will be transmitted or\n *   retransmitted if not acknowledged on the underlying RTCDataChannel.\n * @property {?number} maxRetransmits - If non-null, this represents the number\n *   of times the data will be retransmitted if not successfully received on the\n *   underlying RTCDataChannel.\n * @property {boolean} ordered - true if data on the {@link RemoteDataTrack} can\n *   be received out-of-order.\n * @property {?Track.Priority} priority - The subscribe priority of the {@link RemoteDataTrack}\n * @property {boolean} reliable - This is true if both\n *   <code>maxPacketLifeTime</code> and <code>maxRetransmits</code> are set to\n *   null. In other words, if this is true, there is no bound on packet lifetime\n *   or the number of retransmits that will be attempted, ensuring \"reliable\"\n *   transmission.\n * @property {Track.SID} sid - The SID assigned to the {@link RemoteDataTrack}\n * @emits RemoteDataTrack#message\n * @emits RemoteDataTrack#switchedOff\n * @emits RemoteDataTrack#switchedOn\n */\nvar RemoteDataTrack = /** @class */ (function (_super) {\n    __extends(RemoteDataTrack, _super);\n    /**\n     * Construct a {@link RemoteDataTrack} from a {@link DataTrackReceiver}.\n     * @param {Track.SID} sid\n     * @param {DataTrackReceiver} dataTrackReceiver\n     * @param {{log: Log, name: ?string}} options\n     */\n    function RemoteDataTrack(sid, dataTrackReceiver, options) {\n        var _this = _super.call(this, dataTrackReceiver.id, 'data', options) || this;\n        Object.defineProperties(_this, {\n            _isSwitchedOff: {\n                value: false,\n                writable: true\n            },\n            _priority: {\n                value: null,\n                writable: true\n            },\n            isEnabled: {\n                enumerable: true,\n                value: true\n            },\n            isSwitchedOff: {\n                enumerable: true,\n                get: function () {\n                    return this._isSwitchedOff;\n                }\n            },\n            maxPacketLifeTime: {\n                enumerable: true,\n                value: dataTrackReceiver.maxPacketLifeTime\n            },\n            maxRetransmits: {\n                enumerable: true,\n                value: dataTrackReceiver.maxRetransmits\n            },\n            ordered: {\n                enumerable: true,\n                value: dataTrackReceiver.ordered\n            },\n            priority: {\n                enumerable: true,\n                get: function () {\n                    return this._priority;\n                }\n            },\n            reliable: {\n                enumerable: true,\n                value: dataTrackReceiver.maxPacketLifeTime === null\n                    && dataTrackReceiver.maxRetransmits === null\n            },\n            sid: {\n                enumerable: true,\n                value: sid\n            }\n        });\n        dataTrackReceiver.on('message', function (data) {\n            _this.emit('message', data, _this);\n        });\n        return _this;\n    }\n    /**\n     * Update the subscriber {@link Track.Priority} of the {@link RemoteDataTrack}.\n     * @param {?Track.Priority} priority - the new {@link Track.priority};\n     *   Currently setPriority has no effect on data tracks.\n     * @returns {this}\n     * @throws {RangeError}\n     */\n    RemoteDataTrack.prototype.setPriority = function (priority) {\n        var priorityValues = __spreadArray([null], __read(Object.values(trackPriority)));\n        if (!priorityValues.includes(priority)) {\n            // eslint-disable-next-line new-cap\n            throw E.INVALID_VALUE('priority', priorityValues);\n        }\n        // Note: priority has no real effect on the data tracks.\n        this._priority = priority;\n        return this;\n    };\n    /**\n     * @private\n     */\n    RemoteDataTrack.prototype._setEnabled = function () {\n        // Do nothing.\n    };\n    /**\n     * @private\n     * @param {boolean} isSwitchedOff\n     */\n    RemoteDataTrack.prototype._setSwitchedOff = function (isSwitchedOff) {\n        if (this._isSwitchedOff !== isSwitchedOff) {\n            this._isSwitchedOff = isSwitchedOff;\n            this.emit(isSwitchedOff ? 'switchedOff' : 'switchedOn', this);\n        }\n    };\n    return RemoteDataTrack;\n}(Track));\n/**\n * A message was received over the {@link RemoteDataTrack}.\n * @event RemoteDataTrack#message\n * @param {string|ArrayBuffer} data\n * @param {RemoteDataTrack} track - The {@link RemoteDataTrack} that received\n *   the message\n */\n/**\n * A {@link RemoteDataTrack} was switched off.\n * @param {RemoteDataTrack} track - The {@link RemoteDataTrack} that was\n *   switched off\n * @event RemoteDataTrack#switchedOff\n */\n/**\n * A {@link RemoteDataTrack} was switched on.\n * @param {RemoteDataTrack} track - The {@link RemoteDataTrack} that was\n *   switched on\n * @event RemoteDataTrack#switchedOn\n */\nmodule.exports = RemoteDataTrack;\n//# sourceMappingURL=remotedatatrack.js.map"]},"metadata":{},"sourceType":"script"}