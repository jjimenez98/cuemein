{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar DefaultRecordingSignaling = require('./recording');\n\nvar StateMachine = require('../statemachine');\n\nvar DefaultTimeout = require('../util/timeout');\n\nvar buildLogLevels = require('../util').buildLogLevels;\n\nvar DEFAULT_LOG_LEVEL = require('../util/constants').DEFAULT_LOG_LEVEL;\n\nvar Log = require('../util/log');\n\nvar _a = require('../util/twilio-video-errors'),\n    MediaConnectionError = _a.MediaConnectionError,\n    MediaDTLSTransportFailedError = _a.MediaDTLSTransportFailedError,\n    SignalingConnectionDisconnectedError = _a.SignalingConnectionDisconnectedError;\n\nvar nInstances = 0;\n/*\nRoomSignaling States\n-----------------------\n\n    +-----------+     +--------------+\n    |           |     |              |\n    | connected |---->| disconnected |\n    |           |     |              |\n    +-----------+     +--------------+\n          |  ^               ^\n          |  |               |\n          |  |   +--------------+\n          |  +---|              |\n          |      | reconnecting |\n          +----->|              |\n                 +--------------+\n\n*/\n\nvar states = {\n  connected: ['reconnecting', 'disconnected'],\n  reconnecting: ['connected', 'disconnected'],\n  disconnected: []\n};\n/**\n * A {@link Room} implementation\n * @extends StateMachine\n * @property {RTCPeerConnectionState} connectionState\n * @property {?Participant.SID} dominantSpeakerSid\n * @property {ParticipantSignaling} localParticipant\n * @property {RTCIceConnectionState} iceConnectionState\n * @property {string} name\n * @property {Map<string, RemoteParticipantSignaling>} participants\n * @property {RecordingSignaling} recording\n * @property {Room.SID} sid\n * @property {string} state - \"connected\", \"reconnecting\", or \"disconnected\"\n * @property {string} signalingConnectionState - \"connected\",\n *   \"reconnecting\", or \"disconnected\"\n * @emits RoomSignaling#connectionStateChanged\n * @emits RoomSignaling#dominantSpeakerChanged\n * @emits RoomSignaling#iceConnectionStateChanged\n * @emits RoomSignaling#signalingConnectionStateChanged\n */\n\nvar RoomSignaling = function (_super) {\n  __extends(RoomSignaling, _super);\n  /**\n   * Construct a {@link RoomSignaling}.\n   * @param {ParticipantSignaling} localParticipant\n   * @param {Room.SID} sid\n   * @param {string} name\n   * @param {object} options\n   */\n\n\n  function RoomSignaling(localParticipant, sid, name, options) {\n    var _this = this;\n\n    options = Object.assign({\n      logLevel: DEFAULT_LOG_LEVEL,\n      RecordingSignaling: DefaultRecordingSignaling,\n      Timeout: DefaultTimeout\n    }, options);\n    var logLevels = buildLogLevels(options.logLevel);\n    _this = _super.call(this, 'connected', states) || this;\n    var RecordingSignaling = options.RecordingSignaling;\n    var sessionTimeout = new options.Timeout(function () {\n      _this._disconnect(_this._reconnectingError);\n    }, options.sessionTimeout, false);\n    Object.defineProperties(_this, {\n      _instanceId: {\n        value: nInstances++\n      },\n      _log: {\n        value: options.log ? options.log.createLog('default', _this) : new Log('default', _this, logLevels, options.loggerName)\n      },\n      _mediaConnectionIsReconnecting: {\n        writable: true,\n        value: false\n      },\n      _options: {\n        value: options\n      },\n      _reconnectingError: {\n        value: null,\n        writable: true\n      },\n      _sessionTimeout: {\n        value: sessionTimeout\n      },\n      dominantSpeakerSid: {\n        enumerable: true,\n        value: null,\n        writable: true\n      },\n      localParticipant: {\n        enumerable: true,\n        value: localParticipant\n      },\n      name: {\n        enumerable: true,\n        value: name\n      },\n      participants: {\n        enumerable: true,\n        value: new Map()\n      },\n      recording: {\n        enumerable: true,\n        value: new RecordingSignaling()\n      },\n      sid: {\n        enumerable: true,\n        value: sid\n      }\n    });\n\n    _this.on('connectionStateChanged', function () {\n      if (_this.connectionState === 'failed' && !['disconnected', 'failed'].includes(_this.iceConnectionState)) {\n        _this._disconnect(new MediaDTLSTransportFailedError());\n      }\n    });\n\n    _this.on('iceConnectionStateChanged', function () {\n      return maybeUpdateState(_this);\n    });\n\n    _this.on('signalingConnectionStateChanged', function () {\n      return maybeUpdateState(_this);\n    }); // NOTE(mmalavalli): In case \"iceConnectionState\" is already failed, update\n    // the RoomSignaling state. setTimeout() ensures that the state is updated\n    // after RoomV2's constructor is fully executed, thereby making \"signalingConnectionState\"\n    // available here.\n\n\n    setTimeout(function () {\n      return maybeUpdateState(_this);\n    });\n    return _this;\n  }\n  /**\n   * Disconnect, possibly with an Error.\n   * @private\n   * @param {Error} [error]\n   * @returns {boolean}\n   */\n\n\n  RoomSignaling.prototype._disconnect = function (error) {\n    if (this.state !== 'disconnected') {\n      this.preempt('disconnected', null, [error]);\n      return true;\n    }\n\n    return false;\n  };\n\n  RoomSignaling.prototype.toString = function () {\n    return \"[RoomSignaling #\" + this._instanceId + \": \" + (this.localParticipant ? this.localParticipant.sid : 'null') + \"]\";\n  };\n  /**\n   * Connect {@link RemoteParticipantSignaling} to the {@link RoomSignaling}.\n   * @param {RemoteParticipantSignaling} participant\n   * @returns {boolean}\n   */\n\n\n  RoomSignaling.prototype.connectParticipant = function (participant) {\n    var self = this;\n\n    if (participant.state === 'disconnected') {\n      return false;\n    }\n\n    if (this.participants.has(participant.sid)) {\n      return false;\n    }\n\n    this.participants.set(participant.sid, participant);\n    participant.on('stateChanged', function stateChanged(state) {\n      if (state === 'disconnected') {\n        participant.removeListener('stateChanged', stateChanged);\n        self.participants.delete(participant.sid);\n        self.emit('participantDisconnected', participant);\n      }\n    });\n    this.emit('participantConnected', participant);\n    return true;\n  };\n  /**\n   * Disconnect.\n   * @returns {boolean}\n   */\n\n\n  RoomSignaling.prototype.disconnect = function () {\n    return this._disconnect();\n  };\n  /**\n   * Set (or unset) the Dominant Speaker.\n   * @param {?Participant.SID} dominantSpeakerSid\n   * @returns {void}\n   */\n\n\n  RoomSignaling.prototype.setDominantSpeaker = function (dominantSpeakerSid) {\n    this.dominantSpeakerSid = dominantSpeakerSid;\n    this.emit('dominantSpeakerChanged');\n  };\n\n  return RoomSignaling;\n}(StateMachine);\n/**\n * @event RoomSignaling#event:connectionStateChanged\n */\n\n/**\n * @event RoomSignaling#event:dominantSpeakerChanged\n */\n\n/**\n * {@link RemoteParticipantSignaling} connected to the {@link RoomSignaling}.\n * @event RoomSignaling#event:participantConnected\n * @param {RemoteParticipantSignaling} participantSignaling\n */\n\n/**\n * {@link RemoteParticipantSignaling} disconnected from the {@link RoomSignaling}.\n * @event RoomSignaling#event:participantDisconnected\n * @param {RemoteParticipantSignaling} participantSignaling\n */\n\n/**\n * @event RoomSignaling#event:iceConnectionStateChanged\n */\n\n/**\n * @event RoomSignaling#event:signalingConnectionStateChanged\n */\n\n/**\n * Maybe update the {@link RoomSignaling} state.\n * @param {RoomSignaling} roomSignaling\n */\n\n\nfunction maybeUpdateState(roomSignaling) {\n  if (roomSignaling.state === 'disconnected' || roomSignaling.signalingConnectionState === 'disconnected') {\n    roomSignaling._sessionTimeout.clear();\n\n    return;\n  }\n\n  var newState;\n\n  if (roomSignaling.signalingConnectionState === 'reconnecting') {\n    newState = roomSignaling.signalingConnectionState;\n  } else if (roomSignaling.iceConnectionState === 'failed') {\n    roomSignaling._mediaConnectionIsReconnecting = true;\n    newState = 'reconnecting';\n  } else if (roomSignaling.iceConnectionState === 'new' || roomSignaling.iceConnectionState === 'checking') {\n    newState = roomSignaling._mediaConnectionIsReconnecting ? 'reconnecting' : 'connected';\n  } else {\n    roomSignaling._mediaConnectionIsReconnecting = false;\n    roomSignaling._reconnectingError = null;\n\n    roomSignaling._sessionTimeout.clear();\n\n    newState = 'connected';\n  }\n\n  if (newState === roomSignaling.state) {\n    return;\n  }\n\n  if (newState === 'reconnecting') {\n    roomSignaling._reconnectingError = roomSignaling.signalingConnectionState === 'reconnecting' ? new SignalingConnectionDisconnectedError() : new MediaConnectionError();\n\n    roomSignaling._sessionTimeout.start();\n\n    roomSignaling.preempt(newState, null, [roomSignaling._reconnectingError]);\n  } else {\n    roomSignaling.preempt(newState);\n  }\n}\n\nmodule.exports = RoomSignaling;","map":{"version":3,"sources":["../../lib/signaling/room.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar DefaultRecordingSignaling = require('./recording');\nvar StateMachine = require('../statemachine');\nvar DefaultTimeout = require('../util/timeout');\nvar buildLogLevels = require('../util').buildLogLevels;\nvar DEFAULT_LOG_LEVEL = require('../util/constants').DEFAULT_LOG_LEVEL;\nvar Log = require('../util/log');\nvar _a = require('../util/twilio-video-errors'), MediaConnectionError = _a.MediaConnectionError, MediaDTLSTransportFailedError = _a.MediaDTLSTransportFailedError, SignalingConnectionDisconnectedError = _a.SignalingConnectionDisconnectedError;\nvar nInstances = 0;\n/*\nRoomSignaling States\n-----------------------\n\n    +-----------+     +--------------+\n    |           |     |              |\n    | connected |---->| disconnected |\n    |           |     |              |\n    +-----------+     +--------------+\n          |  ^               ^\n          |  |               |\n          |  |   +--------------+\n          |  +---|              |\n          |      | reconnecting |\n          +----->|              |\n                 +--------------+\n\n*/\nvar states = {\n    connected: [\n        'reconnecting',\n        'disconnected'\n    ],\n    reconnecting: [\n        'connected',\n        'disconnected'\n    ],\n    disconnected: []\n};\n/**\n * A {@link Room} implementation\n * @extends StateMachine\n * @property {RTCPeerConnectionState} connectionState\n * @property {?Participant.SID} dominantSpeakerSid\n * @property {ParticipantSignaling} localParticipant\n * @property {RTCIceConnectionState} iceConnectionState\n * @property {string} name\n * @property {Map<string, RemoteParticipantSignaling>} participants\n * @property {RecordingSignaling} recording\n * @property {Room.SID} sid\n * @property {string} state - \"connected\", \"reconnecting\", or \"disconnected\"\n * @property {string} signalingConnectionState - \"connected\",\n *   \"reconnecting\", or \"disconnected\"\n * @emits RoomSignaling#connectionStateChanged\n * @emits RoomSignaling#dominantSpeakerChanged\n * @emits RoomSignaling#iceConnectionStateChanged\n * @emits RoomSignaling#signalingConnectionStateChanged\n */\nvar RoomSignaling = /** @class */ (function (_super) {\n    __extends(RoomSignaling, _super);\n    /**\n     * Construct a {@link RoomSignaling}.\n     * @param {ParticipantSignaling} localParticipant\n     * @param {Room.SID} sid\n     * @param {string} name\n     * @param {object} options\n     */\n    function RoomSignaling(localParticipant, sid, name, options) {\n        var _this = this;\n        options = Object.assign({\n            logLevel: DEFAULT_LOG_LEVEL,\n            RecordingSignaling: DefaultRecordingSignaling,\n            Timeout: DefaultTimeout\n        }, options);\n        var logLevels = buildLogLevels(options.logLevel);\n        _this = _super.call(this, 'connected', states) || this;\n        var RecordingSignaling = options.RecordingSignaling;\n        var sessionTimeout = new options.Timeout(function () {\n            _this._disconnect(_this._reconnectingError);\n        }, options.sessionTimeout, false);\n        Object.defineProperties(_this, {\n            _instanceId: {\n                value: nInstances++\n            },\n            _log: {\n                value: options.log\n                    ? options.log.createLog('default', _this)\n                    : new Log('default', _this, logLevels, options.loggerName)\n            },\n            _mediaConnectionIsReconnecting: {\n                writable: true,\n                value: false\n            },\n            _options: {\n                value: options\n            },\n            _reconnectingError: {\n                value: null,\n                writable: true\n            },\n            _sessionTimeout: {\n                value: sessionTimeout\n            },\n            dominantSpeakerSid: {\n                enumerable: true,\n                value: null,\n                writable: true\n            },\n            localParticipant: {\n                enumerable: true,\n                value: localParticipant\n            },\n            name: {\n                enumerable: true,\n                value: name\n            },\n            participants: {\n                enumerable: true,\n                value: new Map()\n            },\n            recording: {\n                enumerable: true,\n                value: new RecordingSignaling()\n            },\n            sid: {\n                enumerable: true,\n                value: sid\n            }\n        });\n        _this.on('connectionStateChanged', function () {\n            if (_this.connectionState === 'failed'\n                && !['disconnected', 'failed'].includes(_this.iceConnectionState)) {\n                _this._disconnect(new MediaDTLSTransportFailedError());\n            }\n        });\n        _this.on('iceConnectionStateChanged', function () { return maybeUpdateState(_this); });\n        _this.on('signalingConnectionStateChanged', function () { return maybeUpdateState(_this); });\n        // NOTE(mmalavalli): In case \"iceConnectionState\" is already failed, update\n        // the RoomSignaling state. setTimeout() ensures that the state is updated\n        // after RoomV2's constructor is fully executed, thereby making \"signalingConnectionState\"\n        // available here.\n        setTimeout(function () { return maybeUpdateState(_this); });\n        return _this;\n    }\n    /**\n     * Disconnect, possibly with an Error.\n     * @private\n     * @param {Error} [error]\n     * @returns {boolean}\n     */\n    RoomSignaling.prototype._disconnect = function (error) {\n        if (this.state !== 'disconnected') {\n            this.preempt('disconnected', null, [error]);\n            return true;\n        }\n        return false;\n    };\n    RoomSignaling.prototype.toString = function () {\n        return \"[RoomSignaling #\" + this._instanceId + \": \" + (this.localParticipant ? this.localParticipant.sid : 'null') + \"]\";\n    };\n    /**\n     * Connect {@link RemoteParticipantSignaling} to the {@link RoomSignaling}.\n     * @param {RemoteParticipantSignaling} participant\n     * @returns {boolean}\n     */\n    RoomSignaling.prototype.connectParticipant = function (participant) {\n        var self = this;\n        if (participant.state === 'disconnected') {\n            return false;\n        }\n        if (this.participants.has(participant.sid)) {\n            return false;\n        }\n        this.participants.set(participant.sid, participant);\n        participant.on('stateChanged', function stateChanged(state) {\n            if (state === 'disconnected') {\n                participant.removeListener('stateChanged', stateChanged);\n                self.participants.delete(participant.sid);\n                self.emit('participantDisconnected', participant);\n            }\n        });\n        this.emit('participantConnected', participant);\n        return true;\n    };\n    /**\n     * Disconnect.\n     * @returns {boolean}\n     */\n    RoomSignaling.prototype.disconnect = function () {\n        return this._disconnect();\n    };\n    /**\n     * Set (or unset) the Dominant Speaker.\n     * @param {?Participant.SID} dominantSpeakerSid\n     * @returns {void}\n     */\n    RoomSignaling.prototype.setDominantSpeaker = function (dominantSpeakerSid) {\n        this.dominantSpeakerSid = dominantSpeakerSid;\n        this.emit('dominantSpeakerChanged');\n    };\n    return RoomSignaling;\n}(StateMachine));\n/**\n * @event RoomSignaling#event:connectionStateChanged\n */\n/**\n * @event RoomSignaling#event:dominantSpeakerChanged\n */\n/**\n * {@link RemoteParticipantSignaling} connected to the {@link RoomSignaling}.\n * @event RoomSignaling#event:participantConnected\n * @param {RemoteParticipantSignaling} participantSignaling\n */\n/**\n * {@link RemoteParticipantSignaling} disconnected from the {@link RoomSignaling}.\n * @event RoomSignaling#event:participantDisconnected\n * @param {RemoteParticipantSignaling} participantSignaling\n */\n/**\n * @event RoomSignaling#event:iceConnectionStateChanged\n */\n/**\n * @event RoomSignaling#event:signalingConnectionStateChanged\n */\n/**\n * Maybe update the {@link RoomSignaling} state.\n * @param {RoomSignaling} roomSignaling\n */\nfunction maybeUpdateState(roomSignaling) {\n    if (roomSignaling.state === 'disconnected' || roomSignaling.signalingConnectionState === 'disconnected') {\n        roomSignaling._sessionTimeout.clear();\n        return;\n    }\n    var newState;\n    if (roomSignaling.signalingConnectionState === 'reconnecting') {\n        newState = roomSignaling.signalingConnectionState;\n    }\n    else if (roomSignaling.iceConnectionState === 'failed') {\n        roomSignaling._mediaConnectionIsReconnecting = true;\n        newState = 'reconnecting';\n    }\n    else if (roomSignaling.iceConnectionState === 'new' || roomSignaling.iceConnectionState === 'checking') {\n        newState = roomSignaling._mediaConnectionIsReconnecting ? 'reconnecting' : 'connected';\n    }\n    else {\n        roomSignaling._mediaConnectionIsReconnecting = false;\n        roomSignaling._reconnectingError = null;\n        roomSignaling._sessionTimeout.clear();\n        newState = 'connected';\n    }\n    if (newState === roomSignaling.state) {\n        return;\n    }\n    if (newState === 'reconnecting') {\n        roomSignaling._reconnectingError = roomSignaling.signalingConnectionState === 'reconnecting'\n            ? new SignalingConnectionDisconnectedError()\n            : new MediaConnectionError();\n        roomSignaling._sessionTimeout.start();\n        roomSignaling.preempt(newState, null, [roomSignaling._reconnectingError]);\n    }\n    else {\n        roomSignaling.preempt(newState);\n    }\n}\nmodule.exports = RoomSignaling;\n//# sourceMappingURL=room.js.map"]},"metadata":{},"sourceType":"script"}