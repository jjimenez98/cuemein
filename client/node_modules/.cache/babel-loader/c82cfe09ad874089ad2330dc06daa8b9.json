{"ast":null,"code":"/* eslint callback-return:0 */\n'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar MediaSignaling = require('./mediasignaling');\n\nvar isDeepEqual = require('../../util').isDeepEqual;\n\nvar messageId = 1;\n\nvar RenderHintsSignaling = function (_super) {\n  __extends(RenderHintsSignaling, _super);\n  /**\n   * Construct a {@link RenderHintsSignaling}.\n   */\n\n\n  function RenderHintsSignaling(getReceiver, options) {\n    var _this = _super.call(this, getReceiver, 'render_hints', options) || this;\n\n    Object.defineProperties(_this, {\n      _trackSidsToRenderHints: {\n        value: new Map()\n      },\n      _isResponsePending: {\n        value: false,\n        writable: true\n      }\n    });\n\n    _this.on('ready', function (transport) {\n      transport.on('message', function (message) {\n        _this._log.debug('Incoming: ', message);\n\n        switch (message.type) {\n          case 'render_hints':\n            _this._processHintResults(message && message.subscriber && message.subscriber.hints || []);\n\n            break;\n\n          default:\n            _this._log.warn('Unknown message type: ', message.type);\n\n            break;\n        }\n      }); // NOTE(mpatwardhan): When transport is set (either 1st time of after vms failover)\n      // resend all track states. For this simply mark all tracks as dirty.\n\n      Array.from(_this._trackSidsToRenderHints.keys()).forEach(function (trackSid) {\n        var trackState = _this._trackSidsToRenderHints.get(trackSid);\n\n        if (trackState.renderDimensions) {\n          trackState.isDimensionDirty = true;\n        }\n\n        if ('enabled' in trackState) {\n          trackState.isEnabledDirty = true;\n        }\n      });\n\n      _this._sendHints();\n    });\n\n    return _this;\n  }\n\n  RenderHintsSignaling.prototype._processHintResults = function (hintResults) {\n    var _this = this;\n\n    this._isResponsePending = false;\n    hintResults.forEach(function (hintResult) {\n      if (hintResult.result !== 'OK') {\n        _this._log.debug('Server error processing hint:', hintResult);\n      }\n    });\n\n    this._sendHints();\n  };\n\n  RenderHintsSignaling.prototype._sendHints = function () {\n    var _this = this;\n\n    if (!this._transport || this._isResponsePending) {\n      return;\n    }\n\n    var hints = [];\n    Array.from(this._trackSidsToRenderHints.keys()).forEach(function (trackSid) {\n      var trackState = _this._trackSidsToRenderHints.get(trackSid);\n\n      if (trackState.isEnabledDirty || trackState.isDimensionDirty) {\n        var mspHint = {\n          'track': trackSid\n        };\n\n        if (trackState.isEnabledDirty) {\n          mspHint.enabled = trackState.enabled;\n          trackState.isEnabledDirty = false;\n        }\n\n        if (trackState.isDimensionDirty) {\n          // eslint-disable-next-line camelcase\n          mspHint.render_dimensions = trackState.renderDimensions;\n          trackState.isDimensionDirty = false;\n        }\n\n        hints.push(mspHint);\n      }\n    });\n\n    if (hints.length > 0) {\n      var payLoad = {\n        type: 'render_hints',\n        subscriber: {\n          id: messageId++,\n          hints: hints\n        }\n      };\n\n      this._log.debug('Outgoing: ', payLoad);\n\n      this._transport.publish(payLoad);\n\n      this._isResponsePending = true;\n    }\n  };\n  /**\n   * @param {Track.SID} trackSid\n   * @param {ClientRenderHint} renderHint\n   */\n\n\n  RenderHintsSignaling.prototype.setTrackHint = function (trackSid, renderHint) {\n    var trackState = this._trackSidsToRenderHints.get(trackSid) || {\n      isEnabledDirty: false,\n      isDimensionDirty: false\n    };\n\n    if ('enabled' in renderHint && trackState.enabled !== renderHint.enabled) {\n      trackState.enabled = !!renderHint.enabled;\n      trackState.isEnabledDirty = true;\n    }\n\n    if (renderHint.renderDimensions && !isDeepEqual(renderHint.renderDimensions, trackState.renderDimensions)) {\n      // eslint-disable-next-line camelcase\n      trackState.renderDimensions = renderHint.renderDimensions;\n      trackState.isDimensionDirty = true;\n    }\n\n    this._trackSidsToRenderHints.set(trackSid, trackState);\n\n    this._sendHints();\n  };\n  /**\n   * must be called when track is unsubscribed.\n   * @param {Track.SID} trackSid\n   */\n\n\n  RenderHintsSignaling.prototype.clearTrackHint = function (trackSid) {\n    this._trackSidsToRenderHints.delete(trackSid);\n  };\n\n  return RenderHintsSignaling;\n}(MediaSignaling);\n\nmodule.exports = RenderHintsSignaling;","map":{"version":3,"sources":["../../../lib/signaling/v2/renderhintssignaling.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/* eslint callback-return:0 */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar MediaSignaling = require('./mediasignaling');\nvar isDeepEqual = require('../../util').isDeepEqual;\nvar messageId = 1;\nvar RenderHintsSignaling = /** @class */ (function (_super) {\n    __extends(RenderHintsSignaling, _super);\n    /**\n     * Construct a {@link RenderHintsSignaling}.\n     */\n    function RenderHintsSignaling(getReceiver, options) {\n        var _this = _super.call(this, getReceiver, 'render_hints', options) || this;\n        Object.defineProperties(_this, {\n            _trackSidsToRenderHints: {\n                value: new Map()\n            },\n            _isResponsePending: {\n                value: false,\n                writable: true,\n            }\n        });\n        _this.on('ready', function (transport) {\n            transport.on('message', function (message) {\n                _this._log.debug('Incoming: ', message);\n                switch (message.type) {\n                    case 'render_hints':\n                        _this._processHintResults((message && message.subscriber && message.subscriber.hints) || []);\n                        break;\n                    default:\n                        _this._log.warn('Unknown message type: ', message.type);\n                        break;\n                }\n            });\n            // NOTE(mpatwardhan): When transport is set (either 1st time of after vms failover)\n            // resend all track states. For this simply mark all tracks as dirty.\n            Array.from(_this._trackSidsToRenderHints.keys()).forEach(function (trackSid) {\n                var trackState = _this._trackSidsToRenderHints.get(trackSid);\n                if (trackState.renderDimensions) {\n                    trackState.isDimensionDirty = true;\n                }\n                if ('enabled' in trackState) {\n                    trackState.isEnabledDirty = true;\n                }\n            });\n            _this._sendHints();\n        });\n        return _this;\n    }\n    RenderHintsSignaling.prototype._processHintResults = function (hintResults) {\n        var _this = this;\n        this._isResponsePending = false;\n        hintResults.forEach(function (hintResult) {\n            if (hintResult.result !== 'OK') {\n                _this._log.debug('Server error processing hint:', hintResult);\n            }\n        });\n        this._sendHints();\n    };\n    RenderHintsSignaling.prototype._sendHints = function () {\n        var _this = this;\n        if (!this._transport || this._isResponsePending) {\n            return;\n        }\n        var hints = [];\n        Array.from(this._trackSidsToRenderHints.keys()).forEach(function (trackSid) {\n            var trackState = _this._trackSidsToRenderHints.get(trackSid);\n            if (trackState.isEnabledDirty || trackState.isDimensionDirty) {\n                var mspHint = {\n                    'track': trackSid,\n                };\n                if (trackState.isEnabledDirty) {\n                    mspHint.enabled = trackState.enabled;\n                    trackState.isEnabledDirty = false;\n                }\n                if (trackState.isDimensionDirty) {\n                    // eslint-disable-next-line camelcase\n                    mspHint.render_dimensions = trackState.renderDimensions;\n                    trackState.isDimensionDirty = false;\n                }\n                hints.push(mspHint);\n            }\n        });\n        if (hints.length > 0) {\n            var payLoad = {\n                type: 'render_hints',\n                subscriber: {\n                    id: messageId++,\n                    hints: hints\n                }\n            };\n            this._log.debug('Outgoing: ', payLoad);\n            this._transport.publish(payLoad);\n            this._isResponsePending = true;\n        }\n    };\n    /**\n     * @param {Track.SID} trackSid\n     * @param {ClientRenderHint} renderHint\n     */\n    RenderHintsSignaling.prototype.setTrackHint = function (trackSid, renderHint) {\n        var trackState = this._trackSidsToRenderHints.get(trackSid) || { isEnabledDirty: false, isDimensionDirty: false };\n        if ('enabled' in renderHint && trackState.enabled !== renderHint.enabled) {\n            trackState.enabled = !!renderHint.enabled;\n            trackState.isEnabledDirty = true;\n        }\n        if (renderHint.renderDimensions && !isDeepEqual(renderHint.renderDimensions, trackState.renderDimensions)) {\n            // eslint-disable-next-line camelcase\n            trackState.renderDimensions = renderHint.renderDimensions;\n            trackState.isDimensionDirty = true;\n        }\n        this._trackSidsToRenderHints.set(trackSid, trackState);\n        this._sendHints();\n    };\n    /**\n     * must be called when track is unsubscribed.\n     * @param {Track.SID} trackSid\n     */\n    RenderHintsSignaling.prototype.clearTrackHint = function (trackSid) {\n        this._trackSidsToRenderHints.delete(trackSid);\n    };\n    return RenderHintsSignaling;\n}(MediaSignaling));\nmodule.exports = RenderHintsSignaling;\n//# sourceMappingURL=renderhintssignaling.js.map"]},"metadata":{},"sourceType":"script"}