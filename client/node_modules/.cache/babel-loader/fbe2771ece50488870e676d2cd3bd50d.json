{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar MediaSignaling = require('./mediasignaling');\n\nvar TrackPrioritySignaling = function (_super) {\n  __extends(TrackPrioritySignaling, _super);\n  /**\n   * Construct a {@link TrackPrioritySignaling}.\n   * @param {Promise<DataTrackReceiver>} getReceiver\n   */\n\n\n  function TrackPrioritySignaling(getReceiver, options) {\n    var _this = _super.call(this, getReceiver, 'track_priority', options) || this;\n\n    Object.defineProperties(_this, {\n      _enqueuedPriorityUpdates: {\n        value: new Map()\n      }\n    });\n\n    _this.on('ready', function (transport) {\n      Array.from(_this._enqueuedPriorityUpdates.keys()).forEach(function (trackSid) {\n        transport.publish({\n          type: 'track_priority',\n          track: trackSid,\n          subscribe: _this._enqueuedPriorityUpdates.get(trackSid)\n        }); // NOTE(mpatwardhan)- we do not clear _enqueuedPriorityUpdates intentionally,\n        // this cache will is used to re-send the priorities in case of VMS-FailOver.\n      });\n    });\n\n    return _this;\n  }\n  /**\n   * @param {Track.SID} trackSid\n   * @param {'publish'|'subscribe'} publishOrSubscribe\n   * @param {Track.Priority} priority\n   */\n\n\n  TrackPrioritySignaling.prototype.sendTrackPriorityUpdate = function (trackSid, publishOrSubscribe, priority) {\n    if (publishOrSubscribe !== 'subscribe') {\n      throw new Error('only subscribe priorities are supported, found: ' + publishOrSubscribe);\n    }\n\n    this._enqueuedPriorityUpdates.set(trackSid, priority);\n\n    if (this._transport) {\n      this._transport.publish({\n        type: 'track_priority',\n        track: trackSid,\n        subscribe: priority\n      });\n    }\n  };\n\n  return TrackPrioritySignaling;\n}(MediaSignaling);\n\nmodule.exports = TrackPrioritySignaling;","map":{"version":3,"sources":["../../../lib/signaling/v2/trackprioritysignaling.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAM,cAAc,GAAG,OAAO,CAAC,kBAAD,CAA9B;;AACA,IAAA,sBAAA,GAAA,UAAA,MAAA,EAAA;AAAqC,EAAA,SAAA,CAAA,sBAAA,EAAA,MAAA,CAAA;AACnC;;;AAGG;;;AACH,WAAA,sBAAA,CAAY,WAAZ,EAAyB,OAAzB,EAAgC;AAAhC,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,WAAN,EAAmB,gBAAnB,EAAqC,OAArC,KAA6C,IAD/C;;AAGE,IAAA,MAAM,CAAC,gBAAP,CAAwB,KAAxB,EAA8B;AAC5B,MAAA,wBAAwB,EAAE;AACxB,QAAA,KAAK,EAAE,IAAI,GAAJ;AADiB;AADE,KAA9B;;AAMA,IAAA,KAAI,CAAC,EAAL,CAAQ,OAAR,EAAiB,UAAA,SAAA,EAAS;AACxB,MAAA,KAAK,CAAC,IAAN,CAAW,KAAI,CAAC,wBAAL,CAA8B,IAA9B,EAAX,EAAiD,OAAjD,CAAyD,UAAA,QAAA,EAAQ;AAC/D,QAAA,SAAS,CAAC,OAAV,CAAkB;AAChB,UAAA,IAAI,EAAE,gBADU;AAEhB,UAAA,KAAK,EAAE,QAFS;AAGhB,UAAA,SAAS,EAAE,KAAI,CAAC,wBAAL,CAA8B,GAA9B,CAAkC,QAAlC;AAHK,SAAlB,EAD+D,CAM/D;AACA;AACD,OARD;AASD,KAVD;;;AAWD;AAED;;;;AAIG;;;AACH,EAAA,sBAAA,CAAA,SAAA,CAAA,uBAAA,GAAA,UAAwB,QAAxB,EAAkC,kBAAlC,EAAsD,QAAtD,EAA8D;AAC5D,QAAI,kBAAkB,KAAK,WAA3B,EAAwC;AACtC,YAAM,IAAI,KAAJ,CAAU,qDAAqD,kBAA/D,CAAN;AACD;;AACD,SAAK,wBAAL,CAA8B,GAA9B,CAAkC,QAAlC,EAA4C,QAA5C;;AACA,QAAI,KAAK,UAAT,EAAqB;AACnB,WAAK,UAAL,CAAgB,OAAhB,CAAwB;AACtB,QAAA,IAAI,EAAE,gBADgB;AAEtB,QAAA,KAAK,EAAE,QAFe;AAGtB,QAAA,SAAS,EAAE;AAHW,OAAxB;AAKD;AACF,GAZD;;AAaF,SAAA,sBAAA;AAAC,CA7CD,CAAqC,cAArC,CAAA;;AA+CA,MAAM,CAAC,OAAP,GAAiB,sBAAjB","sourceRoot":"","sourcesContent":["'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar MediaSignaling = require('./mediasignaling');\nvar TrackPrioritySignaling = /** @class */ (function (_super) {\n    __extends(TrackPrioritySignaling, _super);\n    /**\n     * Construct a {@link TrackPrioritySignaling}.\n     * @param {Promise<DataTrackReceiver>} getReceiver\n     */\n    function TrackPrioritySignaling(getReceiver, options) {\n        var _this = _super.call(this, getReceiver, 'track_priority', options) || this;\n        Object.defineProperties(_this, {\n            _enqueuedPriorityUpdates: {\n                value: new Map()\n            },\n        });\n        _this.on('ready', function (transport) {\n            Array.from(_this._enqueuedPriorityUpdates.keys()).forEach(function (trackSid) {\n                transport.publish({\n                    type: 'track_priority',\n                    track: trackSid,\n                    subscribe: _this._enqueuedPriorityUpdates.get(trackSid)\n                });\n                // NOTE(mpatwardhan)- we do not clear _enqueuedPriorityUpdates intentionally,\n                // this cache will is used to re-send the priorities in case of VMS-FailOver.\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {Track.SID} trackSid\n     * @param {'publish'|'subscribe'} publishOrSubscribe\n     * @param {Track.Priority} priority\n     */\n    TrackPrioritySignaling.prototype.sendTrackPriorityUpdate = function (trackSid, publishOrSubscribe, priority) {\n        if (publishOrSubscribe !== 'subscribe') {\n            throw new Error('only subscribe priorities are supported, found: ' + publishOrSubscribe);\n        }\n        this._enqueuedPriorityUpdates.set(trackSid, priority);\n        if (this._transport) {\n            this._transport.publish({\n                type: 'track_priority',\n                track: trackSid,\n                subscribe: priority\n            });\n        }\n    };\n    return TrackPrioritySignaling;\n}(MediaSignaling));\nmodule.exports = TrackPrioritySignaling;\n//# sourceMappingURL=trackprioritysignaling.js.map"]},"metadata":{},"sourceType":"script"}