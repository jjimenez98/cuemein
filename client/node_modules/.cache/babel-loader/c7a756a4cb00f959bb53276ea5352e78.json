{"ast":null,"code":"'use strict';\n\nvar detectSilence = require('../webaudio/detectsilence');\n\nvar N_ATTEMPTS = 3;\nvar ATTEMPT_DURATION_MS = 250;\n/**\n * Detect whether the audio stream rendered by the given HTMLVideoElement is silent.\n * @param {HTMLAudioElement} el\n * @returns {Promise<boolean>} true if silent, false if not.\n */\n\nfunction detectSilentAudio(el) {\n  // NOTE(mmalavalli): We have to delay require-ing AudioContextFactory, because\n  // it exports a default instance whose constructor calls Object.assign.\n  var AudioContextFactory = require('../webaudio/audiocontext');\n\n  var holder = {};\n  var audioContext = AudioContextFactory.getOrCreate(holder);\n  var attemptsLeft = N_ATTEMPTS;\n\n  function doCheckSilence() {\n    attemptsLeft--;\n    return detectSilence(audioContext, el.srcObject, ATTEMPT_DURATION_MS).then(function (isSilent) {\n      if (!isSilent) {\n        return false;\n      }\n\n      if (attemptsLeft > 0) {\n        return doCheckSilence();\n      }\n\n      return true;\n    }).catch(function () {\n      // NOTE(mmalavalli): If an error is thrown while detect silence, the audio\n      // stream is assumed to be silent.\n      return true;\n    });\n  } // Resolve the returned Promise with true if 3 consecutive attempts\n  // to detect silent audio are successful.\n\n\n  return doCheckSilence().finally(function () {\n    AudioContextFactory.release(holder);\n  });\n}\n\nmodule.exports = detectSilentAudio;","map":{"version":3,"sources":["../../lib/util/detectsilentaudio.js"],"names":[],"mappings":"AAAA;;AAEA,IAAM,aAAa,GAAG,OAAO,CAAC,2BAAD,CAA7B;;AAEA,IAAM,UAAU,GAAG,CAAnB;AACA,IAAM,mBAAmB,GAAG,GAA5B;AAEA;;;;AAIG;;AACH,SAAS,iBAAT,CAA2B,EAA3B,EAA6B;AAC3B;AACA;AACA,MAAM,mBAAmB,GAAG,OAAO,CAAC,0BAAD,CAAnC;;AACA,MAAM,MAAM,GAAG,EAAf;AACA,MAAM,YAAY,GAAG,mBAAmB,CAAC,WAApB,CAAgC,MAAhC,CAArB;AAEA,MAAI,YAAY,GAAG,UAAnB;;AAEA,WAAS,cAAT,GAAuB;AACrB,IAAA,YAAY;AACZ,WAAO,aAAa,CAAC,YAAD,EAAe,EAAE,CAAC,SAAlB,EAA6B,mBAA7B,CAAb,CAA+D,IAA/D,CAAoE,UAAA,QAAA,EAAQ;AACjF,UAAI,CAAC,QAAL,EAAe;AACb,eAAO,KAAP;AACD;;AACD,UAAI,YAAY,GAAG,CAAnB,EAAsB;AACpB,eAAO,cAAc,EAArB;AACD;;AACD,aAAO,IAAP;AACD,KARM,EAQJ,KARI,CAQE,YAAA;AACP;AACA;AACA,aAAO,IAAP;AACD,KAZM,CAAP;AAaD,GAxB0B,CA0B3B;AACA;;;AACA,SAAO,cAAc,GAAG,OAAjB,CAAyB,YAAA;AAC9B,IAAA,mBAAmB,CAAC,OAApB,CAA4B,MAA5B;AACD,GAFM,CAAP;AAGD;;AAED,MAAM,CAAC,OAAP,GAAiB,iBAAjB","sourceRoot":"","sourcesContent":["'use strict';\nvar detectSilence = require('../webaudio/detectsilence');\nvar N_ATTEMPTS = 3;\nvar ATTEMPT_DURATION_MS = 250;\n/**\n * Detect whether the audio stream rendered by the given HTMLVideoElement is silent.\n * @param {HTMLAudioElement} el\n * @returns {Promise<boolean>} true if silent, false if not.\n */\nfunction detectSilentAudio(el) {\n    // NOTE(mmalavalli): We have to delay require-ing AudioContextFactory, because\n    // it exports a default instance whose constructor calls Object.assign.\n    var AudioContextFactory = require('../webaudio/audiocontext');\n    var holder = {};\n    var audioContext = AudioContextFactory.getOrCreate(holder);\n    var attemptsLeft = N_ATTEMPTS;\n    function doCheckSilence() {\n        attemptsLeft--;\n        return detectSilence(audioContext, el.srcObject, ATTEMPT_DURATION_MS).then(function (isSilent) {\n            if (!isSilent) {\n                return false;\n            }\n            if (attemptsLeft > 0) {\n                return doCheckSilence();\n            }\n            return true;\n        }).catch(function () {\n            // NOTE(mmalavalli): If an error is thrown while detect silence, the audio\n            // stream is assumed to be silent.\n            return true;\n        });\n    }\n    // Resolve the returned Promise with true if 3 consecutive attempts\n    // to detect silent audio are successful.\n    return doCheckSilence().finally(function () {\n        AudioContextFactory.release(holder);\n    });\n}\nmodule.exports = detectSilentAudio;\n//# sourceMappingURL=detectsilentaudio.js.map"]},"metadata":{},"sourceType":"script"}