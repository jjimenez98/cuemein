{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar LocalParticipantSignaling = require('../localparticipant');\n\nvar LocalTrackPublicationV2 = require('./localtrackpublication');\n\nvar isDeepEqual = require('../../util').isDeepEqual;\n/**\n * @extends ParticipantSignaling\n * @property {BandwidthProfileOptions} bandwidthProfile\n * @property {NetworkQualityConfigurationImpl} networkQualityConfiguration\n * @property {number} revision\n * @emits LocalParticipantV2#updated\n */\n\n\nvar LocalParticipantV2 = function (_super) {\n  __extends(LocalParticipantV2, _super);\n  /**\n   * Construct a {@link LocalParticipantV2}.\n   * @param {EncodingParametersImpl} encodingParameters\n   * @param {NetworkQualityConfigurationImpl} networkQualityConfiguration\n   * @param {object} [options]\n   */\n\n\n  function LocalParticipantV2(encodingParameters, networkQualityConfiguration, options) {\n    var _this = this;\n\n    options = Object.assign({\n      LocalTrackPublicationV2: LocalTrackPublicationV2\n    }, options);\n    _this = _super.call(this) || this;\n    Object.defineProperties(_this, {\n      _bandwidthProfile: {\n        value: null,\n        writable: true\n      },\n      _bandwidthProfileRevision: {\n        value: 0,\n        writable: true\n      },\n      _encodingParameters: {\n        value: encodingParameters\n      },\n      _removeListeners: {\n        value: new Map()\n      },\n      _LocalTrackPublicationV2: {\n        value: options.LocalTrackPublicationV2\n      },\n      _publishedRevision: {\n        writable: true,\n        value: 0\n      },\n      _revision: {\n        writable: true,\n        value: 1\n      },\n      _signalingRegion: {\n        value: null,\n        writable: true\n      },\n      bandwidthProfile: {\n        enumerable: true,\n        get: function get() {\n          return this._bandwidthProfile;\n        }\n      },\n      bandwidthProfileRevision: {\n        enumerable: true,\n        get: function get() {\n          return this._bandwidthProfileRevision;\n        }\n      },\n      networkQualityConfiguration: {\n        enumerable: true,\n        value: networkQualityConfiguration\n      },\n      revision: {\n        enumerable: true,\n        get: function get() {\n          return this._revision;\n        }\n      },\n      signalingRegion: {\n        enumerable: true,\n        get: function get() {\n          return this._signalingRegion;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * Set the signalingRegion.\n   * @param {string} signalingRegion.\n   */\n\n\n  LocalParticipantV2.prototype.setSignalingRegion = function (signalingRegion) {\n    if (!this._signalingRegion) {\n      this._signalingRegion = signalingRegion;\n    }\n  };\n  /**\n   * Update the {@link BandwidthProfileOptions}.\n   * @param {BandwidthProfileOptions} bandwidthProfile\n   */\n\n\n  LocalParticipantV2.prototype.setBandwidthProfile = function (bandwidthProfile) {\n    if (!isDeepEqual(this._bandwidthProfile, bandwidthProfile)) {\n      // NOTE(mmalavalli): Object.assign() copies the values of only\n      // the top level properties. In order to deep copy the object, we\n      // stringify and parse the object.\n      this._bandwidthProfile = JSON.parse(JSON.stringify(bandwidthProfile));\n      this._bandwidthProfileRevision++;\n      this.didUpdate();\n    }\n  };\n  /**\n   * Set the {@link EncodingParameters}.\n   * @param {?EncodingParameters} encodingParameters\n   * @returns {this}\n   */\n\n\n  LocalParticipantV2.prototype.setParameters = function (encodingParameters) {\n    this._encodingParameters.update(encodingParameters);\n\n    return this;\n  };\n  /**\n   * Update the {@link LocalParticipantV2} with the new state.\n   * @param {Published} published\n   * @returns {this}\n   */\n\n\n  LocalParticipantV2.prototype.update = function (published) {\n    if (this._publishedRevision >= published.revision) {\n      return this;\n    }\n\n    this._publishedRevision = published.revision;\n    published.tracks.forEach(function (publicationState) {\n      var localTrackPublicationV2 = this.tracks.get(publicationState.id);\n\n      if (localTrackPublicationV2) {\n        localTrackPublicationV2.update(publicationState);\n      }\n    }, this);\n    return this;\n  };\n  /**\n   * @protected\n   * @param {DataTrackSender|MediaTrackSender} trackSender\n   * @param {string} name\n   * @param {Track.Priority} priority\n   * @returns {LocalTrackPublicationV2}\n   */\n\n\n  LocalParticipantV2.prototype._createLocalTrackPublicationSignaling = function (trackSender, name, priority) {\n    return new this._LocalTrackPublicationV2(trackSender, name, priority);\n  };\n  /**\n   * Add a {@link LocalTrackPublicationV2} for the given {@link DataTrackSender}\n   * or {@link MediaTrackSender} to the {@link LocalParticipantV2}.\n   * @param {DataTrackSender|MediaTrackSender} trackSender\n   * @param {string} name\n   * @param {Track.Priority} priority\n   * @returns {this}\n   */\n\n\n  LocalParticipantV2.prototype.addTrack = function (trackSender, name, priority) {\n    var _this = this;\n\n    _super.prototype.addTrack.call(this, trackSender, name, priority);\n\n    var publication = this.getPublication(trackSender);\n    var isEnabled = publication.isEnabled,\n        updatedPriority = publication.updatedPriority;\n\n    var updated = function updated() {\n      // NOTE(mmalavalli): The LocalParticipantV2's state is only published if\n      // the \"updated\" event is emitted due to LocalTrackPublicationV2's\n      // .isEnabled or .updatedPriority being changed. We do not publish if it is fired due to the\n      // LocalTrackPublicationV2's .sid being set.\n      if (isEnabled !== publication.isEnabled || updatedPriority !== publication.updatedPriority) {\n        _this.didUpdate();\n\n        isEnabled = publication.isEnabled;\n        updatedPriority = publication.updatedPriority;\n      }\n    };\n\n    publication.on('updated', updated);\n\n    this._removeListener(publication);\n\n    this._removeListeners.set(publication, function () {\n      return publication.removeListener('updated', updated);\n    });\n\n    this.didUpdate();\n    return this;\n  };\n  /**\n   * @private\n   * @param {LocalTrackPublicationV2} publication\n   * @returns {void}\n   */\n\n\n  LocalParticipantV2.prototype._removeListener = function (publication) {\n    var removeListener = this._removeListeners.get(publication);\n\n    if (removeListener) {\n      removeListener();\n    }\n  };\n  /**\n   * Get the current state of the {@link LocalParticipantV2}.\n   * @returns {object}\n   */\n\n\n  LocalParticipantV2.prototype.getState = function () {\n    return {\n      revision: this.revision,\n      tracks: Array.from(this.tracks.values()).map(function (track) {\n        return track.getState();\n      })\n    };\n  };\n  /**\n   * Increment the revision for the {@link LocalParticipantV2}.\n   * @private\n   * @returns {void}\n   */\n\n\n  LocalParticipantV2.prototype.didUpdate = function () {\n    this._revision++;\n    this.emit('updated');\n  };\n  /**\n   * Remove the {@link LocalTrackPublicationV2} for the given {@link DataTrackSender}\n   * or {@link MediaTrackSender} from the {@link LocalParticipantV2}.\n   * @param {DataTrackSender|MediaTrackSender} trackSender\n   * @returns {?LocalTrackPublicationV2}\n   */\n\n\n  LocalParticipantV2.prototype.removeTrack = function (trackSender) {\n    var publication = _super.prototype.removeTrack.call(this, trackSender);\n\n    if (publication) {\n      trackSender.removeClone(publication.trackTransceiver);\n\n      this._removeListener(publication);\n\n      this.didUpdate();\n    }\n\n    return publication;\n  };\n  /**\n   * Updates the verbosity of network quality information.\n   * @param {NetworkQualityConfiguration} networkQualityConfiguration\n   * @returns {void}\n   */\n\n\n  LocalParticipantV2.prototype.setNetworkQualityConfiguration = function (networkQualityConfiguration) {\n    this.networkQualityConfiguration.update(networkQualityConfiguration);\n  };\n\n  return LocalParticipantV2;\n}(LocalParticipantSignaling);\n/**\n * @interface Published\n * @property {number} revision\n * @property {Array<PublishedTrack>} tracks\n */\n\n/**\n * @typedef {CreatedTrack|ReadyTrack|FailedTrack} PublishedTrack\n */\n\n/**\n * @interface CreatedTrack\n * @property {Track.ID} id\n * @property {string} state - \"created\"\n */\n\n/**\n * @interface ReadyTrack\n * @property {Track.ID} id\n * @property {Track.SID} sid\n * @property {string} state - \"ready\"\n */\n\n/**\n * @interface FailedTrack\n * @property {Track.ID} id\n * @property {TrackError} error\n * @property {string} state - \"failed\"\n */\n\n/**\n * @interface TrackError\n * @property {number} code\n * @property {string} message\n */\n\n/**\n * @event LocalParticipantV2#updated\n */\n\n\nmodule.exports = LocalParticipantV2;","map":{"version":3,"sources":["../../../lib/signaling/v2/localparticipant.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar LocalParticipantSignaling = require('../localparticipant');\nvar LocalTrackPublicationV2 = require('./localtrackpublication');\nvar isDeepEqual = require('../../util').isDeepEqual;\n/**\n * @extends ParticipantSignaling\n * @property {BandwidthProfileOptions} bandwidthProfile\n * @property {NetworkQualityConfigurationImpl} networkQualityConfiguration\n * @property {number} revision\n * @emits LocalParticipantV2#updated\n */\nvar LocalParticipantV2 = /** @class */ (function (_super) {\n    __extends(LocalParticipantV2, _super);\n    /**\n     * Construct a {@link LocalParticipantV2}.\n     * @param {EncodingParametersImpl} encodingParameters\n     * @param {NetworkQualityConfigurationImpl} networkQualityConfiguration\n     * @param {object} [options]\n     */\n    function LocalParticipantV2(encodingParameters, networkQualityConfiguration, options) {\n        var _this = this;\n        options = Object.assign({\n            LocalTrackPublicationV2: LocalTrackPublicationV2\n        }, options);\n        _this = _super.call(this) || this;\n        Object.defineProperties(_this, {\n            _bandwidthProfile: {\n                value: null,\n                writable: true\n            },\n            _bandwidthProfileRevision: {\n                value: 0,\n                writable: true\n            },\n            _encodingParameters: {\n                value: encodingParameters\n            },\n            _removeListeners: {\n                value: new Map()\n            },\n            _LocalTrackPublicationV2: {\n                value: options.LocalTrackPublicationV2\n            },\n            _publishedRevision: {\n                writable: true,\n                value: 0\n            },\n            _revision: {\n                writable: true,\n                value: 1\n            },\n            _signalingRegion: {\n                value: null,\n                writable: true\n            },\n            bandwidthProfile: {\n                enumerable: true,\n                get: function () {\n                    return this._bandwidthProfile;\n                }\n            },\n            bandwidthProfileRevision: {\n                enumerable: true,\n                get: function () {\n                    return this._bandwidthProfileRevision;\n                }\n            },\n            networkQualityConfiguration: {\n                enumerable: true,\n                value: networkQualityConfiguration\n            },\n            revision: {\n                enumerable: true,\n                get: function () {\n                    return this._revision;\n                }\n            },\n            signalingRegion: {\n                enumerable: true,\n                get: function () {\n                    return this._signalingRegion;\n                }\n            }\n        });\n        return _this;\n    }\n    /**\n     * Set the signalingRegion.\n     * @param {string} signalingRegion.\n     */\n    LocalParticipantV2.prototype.setSignalingRegion = function (signalingRegion) {\n        if (!this._signalingRegion) {\n            this._signalingRegion = signalingRegion;\n        }\n    };\n    /**\n     * Update the {@link BandwidthProfileOptions}.\n     * @param {BandwidthProfileOptions} bandwidthProfile\n     */\n    LocalParticipantV2.prototype.setBandwidthProfile = function (bandwidthProfile) {\n        if (!isDeepEqual(this._bandwidthProfile, bandwidthProfile)) {\n            // NOTE(mmalavalli): Object.assign() copies the values of only\n            // the top level properties. In order to deep copy the object, we\n            // stringify and parse the object.\n            this._bandwidthProfile = JSON.parse(JSON.stringify(bandwidthProfile));\n            this._bandwidthProfileRevision++;\n            this.didUpdate();\n        }\n    };\n    /**\n     * Set the {@link EncodingParameters}.\n     * @param {?EncodingParameters} encodingParameters\n     * @returns {this}\n     */\n    LocalParticipantV2.prototype.setParameters = function (encodingParameters) {\n        this._encodingParameters.update(encodingParameters);\n        return this;\n    };\n    /**\n     * Update the {@link LocalParticipantV2} with the new state.\n     * @param {Published} published\n     * @returns {this}\n     */\n    LocalParticipantV2.prototype.update = function (published) {\n        if (this._publishedRevision >= published.revision) {\n            return this;\n        }\n        this._publishedRevision = published.revision;\n        published.tracks.forEach(function (publicationState) {\n            var localTrackPublicationV2 = this.tracks.get(publicationState.id);\n            if (localTrackPublicationV2) {\n                localTrackPublicationV2.update(publicationState);\n            }\n        }, this);\n        return this;\n    };\n    /**\n     * @protected\n     * @param {DataTrackSender|MediaTrackSender} trackSender\n     * @param {string} name\n     * @param {Track.Priority} priority\n     * @returns {LocalTrackPublicationV2}\n     */\n    LocalParticipantV2.prototype._createLocalTrackPublicationSignaling = function (trackSender, name, priority) {\n        return new this._LocalTrackPublicationV2(trackSender, name, priority);\n    };\n    /**\n     * Add a {@link LocalTrackPublicationV2} for the given {@link DataTrackSender}\n     * or {@link MediaTrackSender} to the {@link LocalParticipantV2}.\n     * @param {DataTrackSender|MediaTrackSender} trackSender\n     * @param {string} name\n     * @param {Track.Priority} priority\n     * @returns {this}\n     */\n    LocalParticipantV2.prototype.addTrack = function (trackSender, name, priority) {\n        var _this = this;\n        _super.prototype.addTrack.call(this, trackSender, name, priority);\n        var publication = this.getPublication(trackSender);\n        var isEnabled = publication.isEnabled, updatedPriority = publication.updatedPriority;\n        var updated = function () {\n            // NOTE(mmalavalli): The LocalParticipantV2's state is only published if\n            // the \"updated\" event is emitted due to LocalTrackPublicationV2's\n            // .isEnabled or .updatedPriority being changed. We do not publish if it is fired due to the\n            // LocalTrackPublicationV2's .sid being set.\n            if (isEnabled !== publication.isEnabled || updatedPriority !== publication.updatedPriority) {\n                _this.didUpdate();\n                isEnabled = publication.isEnabled;\n                updatedPriority = publication.updatedPriority;\n            }\n        };\n        publication.on('updated', updated);\n        this._removeListener(publication);\n        this._removeListeners.set(publication, function () { return publication.removeListener('updated', updated); });\n        this.didUpdate();\n        return this;\n    };\n    /**\n     * @private\n     * @param {LocalTrackPublicationV2} publication\n     * @returns {void}\n     */\n    LocalParticipantV2.prototype._removeListener = function (publication) {\n        var removeListener = this._removeListeners.get(publication);\n        if (removeListener) {\n            removeListener();\n        }\n    };\n    /**\n     * Get the current state of the {@link LocalParticipantV2}.\n     * @returns {object}\n     */\n    LocalParticipantV2.prototype.getState = function () {\n        return {\n            revision: this.revision,\n            tracks: Array.from(this.tracks.values()).map(function (track) { return track.getState(); })\n        };\n    };\n    /**\n     * Increment the revision for the {@link LocalParticipantV2}.\n     * @private\n     * @returns {void}\n     */\n    LocalParticipantV2.prototype.didUpdate = function () {\n        this._revision++;\n        this.emit('updated');\n    };\n    /**\n     * Remove the {@link LocalTrackPublicationV2} for the given {@link DataTrackSender}\n     * or {@link MediaTrackSender} from the {@link LocalParticipantV2}.\n     * @param {DataTrackSender|MediaTrackSender} trackSender\n     * @returns {?LocalTrackPublicationV2}\n     */\n    LocalParticipantV2.prototype.removeTrack = function (trackSender) {\n        var publication = _super.prototype.removeTrack.call(this, trackSender);\n        if (publication) {\n            trackSender.removeClone(publication.trackTransceiver);\n            this._removeListener(publication);\n            this.didUpdate();\n        }\n        return publication;\n    };\n    /**\n     * Updates the verbosity of network quality information.\n     * @param {NetworkQualityConfiguration} networkQualityConfiguration\n     * @returns {void}\n     */\n    LocalParticipantV2.prototype.setNetworkQualityConfiguration = function (networkQualityConfiguration) {\n        this.networkQualityConfiguration.update(networkQualityConfiguration);\n    };\n    return LocalParticipantV2;\n}(LocalParticipantSignaling));\n/**\n * @interface Published\n * @property {number} revision\n * @property {Array<PublishedTrack>} tracks\n */\n/**\n * @typedef {CreatedTrack|ReadyTrack|FailedTrack} PublishedTrack\n */\n/**\n * @interface CreatedTrack\n * @property {Track.ID} id\n * @property {string} state - \"created\"\n */\n/**\n * @interface ReadyTrack\n * @property {Track.ID} id\n * @property {Track.SID} sid\n * @property {string} state - \"ready\"\n */\n/**\n * @interface FailedTrack\n * @property {Track.ID} id\n * @property {TrackError} error\n * @property {string} state - \"failed\"\n */\n/**\n * @interface TrackError\n * @property {number} code\n * @property {string} message\n */\n/**\n * @event LocalParticipantV2#updated\n */\nmodule.exports = LocalParticipantV2;\n//# sourceMappingURL=localparticipant.js.map"]},"metadata":{},"sourceType":"script"}