{"ast":null,"code":"'use strict';\n\nvar CancelablePromise = require('./util/cancelablepromise');\n/**\n * Create a {@link CancelablePromise<Room>}.\n * @param {function(function(Array<LocalTrack>): CancelablePromise<RoomSignaling>):\n *   Promise<function(): CancelablePromise<RoomSignaling>>} getLocalTracks\n * @param {function(Array<LocalTrack>): LocalParticipant} createLocalParticipant\n * @param {function(Array<LocalTrack>): CancelablePromise<RoomSignaling>} createRoomSignaling\n * @param {function(LocalParticipant, RoomSignaling): Room} createRoom\n * @returns CancelablePromise<Room>\n */\n\n\nfunction createCancelableRoomPromise(getLocalTracks, createLocalParticipant, createRoomSignaling, createRoom) {\n  var cancelableRoomSignalingPromise;\n  var cancellationError = new Error('Canceled');\n  return new CancelablePromise(function onCreate(resolve, reject, isCanceled) {\n    var localParticipant;\n    getLocalTracks(function getLocalTracksSucceeded(localTracks) {\n      if (isCanceled()) {\n        return CancelablePromise.reject(cancellationError);\n      }\n\n      localParticipant = createLocalParticipant(localTracks);\n      return createRoomSignaling(localParticipant).then(function createRoomSignalingSucceeded(getCancelableRoomSignalingPromise) {\n        if (isCanceled()) {\n          throw cancellationError;\n        }\n\n        cancelableRoomSignalingPromise = getCancelableRoomSignalingPromise();\n        return cancelableRoomSignalingPromise;\n      });\n    }).then(function roomSignalingConnected(roomSignaling) {\n      if (isCanceled()) {\n        roomSignaling.disconnect();\n        throw cancellationError;\n      }\n\n      resolve(createRoom(localParticipant, roomSignaling));\n    }).catch(function onError(error) {\n      reject(error);\n    });\n  }, function onCancel() {\n    if (cancelableRoomSignalingPromise) {\n      cancelableRoomSignalingPromise.cancel();\n    }\n  });\n}\n\nmodule.exports = createCancelableRoomPromise;","map":{"version":3,"sources":["../lib/cancelableroompromise.js"],"names":[],"mappings":"AAAA;;AAEA,IAAM,iBAAiB,GAAG,OAAO,CAAC,0BAAD,CAAjC;AAEA;;;;;;;;AAQG;;;AACH,SAAS,2BAAT,CAAqC,cAArC,EAAqD,sBAArD,EAA6E,mBAA7E,EAAkG,UAAlG,EAA4G;AAC1G,MAAI,8BAAJ;AACA,MAAM,iBAAiB,GAAG,IAAI,KAAJ,CAAU,UAAV,CAA1B;AAEA,SAAO,IAAI,iBAAJ,CAAsB,SAAS,QAAT,CAAkB,OAAlB,EAA2B,MAA3B,EAAmC,UAAnC,EAA6C;AACxE,QAAI,gBAAJ;AACA,IAAA,cAAc,CAAC,SAAS,uBAAT,CAAiC,WAAjC,EAA4C;AACzD,UAAI,UAAU,EAAd,EAAkB;AAChB,eAAO,iBAAiB,CAAC,MAAlB,CAAyB,iBAAzB,CAAP;AACD;;AACD,MAAA,gBAAgB,GAAG,sBAAsB,CAAC,WAAD,CAAzC;AACA,aAAO,mBAAmB,CAAC,gBAAD,CAAnB,CAAsC,IAAtC,CAA2C,SAAS,4BAAT,CAAsC,iCAAtC,EAAuE;AACvH,YAAI,UAAU,EAAd,EAAkB;AAChB,gBAAM,iBAAN;AACD;;AACD,QAAA,8BAA8B,GAAG,iCAAiC,EAAlE;AACA,eAAO,8BAAP;AACD,OANM,CAAP;AAOD,KAZa,CAAd,CAYG,IAZH,CAYQ,SAAS,sBAAT,CAAgC,aAAhC,EAA6C;AACnD,UAAI,UAAU,EAAd,EAAkB;AAChB,QAAA,aAAa,CAAC,UAAd;AACA,cAAM,iBAAN;AACD;;AACD,MAAA,OAAO,CAAC,UAAU,CAAC,gBAAD,EAAmB,aAAnB,CAAX,CAAP;AACD,KAlBD,EAkBG,KAlBH,CAkBS,SAAS,OAAT,CAAiB,KAAjB,EAAsB;AAC7B,MAAA,MAAM,CAAC,KAAD,CAAN;AACD,KApBD;AAqBD,GAvBM,EAuBJ,SAAS,QAAT,GAAiB;AAClB,QAAI,8BAAJ,EAAoC;AAClC,MAAA,8BAA8B,CAAC,MAA/B;AACD;AACF,GA3BM,CAAP;AA4BD;;AAED,MAAM,CAAC,OAAP,GAAiB,2BAAjB","sourceRoot":"","sourcesContent":["'use strict';\nvar CancelablePromise = require('./util/cancelablepromise');\n/**\n * Create a {@link CancelablePromise<Room>}.\n * @param {function(function(Array<LocalTrack>): CancelablePromise<RoomSignaling>):\n *   Promise<function(): CancelablePromise<RoomSignaling>>} getLocalTracks\n * @param {function(Array<LocalTrack>): LocalParticipant} createLocalParticipant\n * @param {function(Array<LocalTrack>): CancelablePromise<RoomSignaling>} createRoomSignaling\n * @param {function(LocalParticipant, RoomSignaling): Room} createRoom\n * @returns CancelablePromise<Room>\n */\nfunction createCancelableRoomPromise(getLocalTracks, createLocalParticipant, createRoomSignaling, createRoom) {\n    var cancelableRoomSignalingPromise;\n    var cancellationError = new Error('Canceled');\n    return new CancelablePromise(function onCreate(resolve, reject, isCanceled) {\n        var localParticipant;\n        getLocalTracks(function getLocalTracksSucceeded(localTracks) {\n            if (isCanceled()) {\n                return CancelablePromise.reject(cancellationError);\n            }\n            localParticipant = createLocalParticipant(localTracks);\n            return createRoomSignaling(localParticipant).then(function createRoomSignalingSucceeded(getCancelableRoomSignalingPromise) {\n                if (isCanceled()) {\n                    throw cancellationError;\n                }\n                cancelableRoomSignalingPromise = getCancelableRoomSignalingPromise();\n                return cancelableRoomSignalingPromise;\n            });\n        }).then(function roomSignalingConnected(roomSignaling) {\n            if (isCanceled()) {\n                roomSignaling.disconnect();\n                throw cancellationError;\n            }\n            resolve(createRoom(localParticipant, roomSignaling));\n        }).catch(function onError(error) {\n            reject(error);\n        });\n    }, function onCancel() {\n        if (cancelableRoomSignalingPromise) {\n            cancelableRoomSignalingPromise.cancel();\n        }\n    });\n}\nmodule.exports = createCancelableRoomPromise;\n//# sourceMappingURL=cancelableroompromise.js.map"]},"metadata":{},"sourceType":"script"}