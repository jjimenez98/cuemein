{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar MediaSignaling = require('./mediasignaling');\n\nvar AsyncVar = require('../../util/asyncvar');\n/**\n * @interface MediaSignalingTransport\n * @property {function(object): boolean} send\n * @emits MediaSignalingTransport#message\n */\n\n/**\n * The {@link MediaSignalingTransport} received a message.\n * @event MediaSignalingTransport#message\n * @param {object} message\n */\n\n/**\n * @interface LatencyStats\n * @property {number} jitter\n * @property {number} rtt\n * @property {number} level\n */\n\n/**\n * @interface FractionLostStats\n * @property {number} fractionLost\n * @property {number} level\n */\n\n/**\n * @interface BandwidthStats\n * @property {number} actual\n * @property {number} available\n * @property {number} level\n */\n\n/**\n * @interface SendOrRecvStats\n * @property {BandwidthStats} bandwidth\n * @property {FractionLostStats} fractionLost\n * @property {LatencyStats} latency\n */\n\n/**\n * @interface MediaLevels\n * @property {number} send\n * @property {SendOrRecvStats} sendStats\n * @property {number} recv\n * @property {SendOrRecvStats} recvStats\n */\n\n/**\n * @interface NetworkQualityLevels\n * @property {number} level\n * @property {MediaLevels} audio\n * @property {MediaLevels} video\n */\n\n/**\n * @typedef {PeerConnectionSummary} NetworkQualityInputs\n */\n\n/**\n * @classdesc The {@link NetworkQualitySignaling} class allows submitting\n *   {@link NetworkQualityInputs} for computing {@link NetworkQualityLevel}. It\n *   does so by sending and receiving messages over a\n *   {@link MediaSignalingTransport}. The exact transport used depends on the\n *   topology of the {@link Room} that {@link NetworkQualitySignaling} is being\n *   used within: for P2P Rooms, we re-use the {@link TransportV2}; and for\n *   Group Rooms, we use a {@link DataTransport}.\n * @emits NetworkQualitySignaling#updated\n */\n\n\nvar NetworkQualitySignaling = function (_super) {\n  __extends(NetworkQualitySignaling, _super);\n  /**\n   * Construct a {@link NetworkQualitySignaling}.\n   * @param {Promise<DataTrackReceiver>} getReceiver\n   * @param {NetworkQualityConfigurationImpl} networkQualityConfiguration\n   */\n\n\n  function NetworkQualitySignaling(getReceiver, networkQualityConfiguration, options) {\n    var _this = _super.call(this, getReceiver, 'network_quality', options) || this;\n\n    Object.defineProperties(_this, {\n      _level: {\n        value: null,\n        writable: true\n      },\n      _levels: {\n        value: null,\n        writable: true\n      },\n      _remoteLevels: {\n        value: new Map(),\n        writable: true\n      },\n      _networkQualityInputs: {\n        value: new AsyncVar()\n      },\n      _networkQualityReportLevels: {\n        get: function get() {\n          return {\n            reportLevel: networkQualityConfiguration.local,\n            remoteReportLevel: networkQualityConfiguration.remote\n          };\n        }\n      }\n    });\n\n    _this.on('ready', function (transport) {\n      transport.on('message', function (message) {\n        switch (message.type) {\n          case 'network_quality':\n            _this._handleNetworkQualityMessage(message);\n\n            break;\n\n          default:\n            break;\n        }\n      });\n    });\n\n    _this._sendNetworkQualityInputs();\n\n    return _this;\n  }\n\n  Object.defineProperty(NetworkQualitySignaling.prototype, \"level\", {\n    /**\n     * Get the current {@link NetworkQualityLevel}, if any.\n     * @returns {?NetworkQualityLevel} level - initially null\n     */\n    get: function get() {\n      return this._level;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(NetworkQualitySignaling.prototype, \"levels\", {\n    /**\n     * Get the current {@link NetworkQualityLevels}, if any.\n     * @returns {?NetworkQualityLevels} levels - initially null\n     */\n    get: function get() {\n      return this._levels;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(NetworkQualitySignaling.prototype, \"remoteLevels\", {\n    /**\n     * Get the current {@link NetworkQualityLevels} of remote participants, if any.\n     * @returns {Map<String, NetworkQualityLevels>} remoteLevels\n     */\n    get: function get() {\n      return this._remoteLevels;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Check to see if the {@link NetworkQualityLevel} is new, and raise an\n   * event if necessary.\n   * @private\n   * @param {object} message\n   * @returns {void}\n   */\n\n  NetworkQualitySignaling.prototype._handleNetworkQualityMessage = function (message) {\n    var _this = this;\n\n    var updated = false;\n    var level = null;\n    var local = message ? message.local : null;\n\n    if (typeof local === 'number') {\n      // NOTE(mroberts): In prod, we plan to only send the level.\n      level = local;\n      this._levels = null;\n    } else if (typeof local === 'object' && local) {\n      // NOTE(mroberts): In dev, we plan to send the decomposed levels. An early\n      // VMS version does not compute `level` for us, so we fallback to taking\n      // the minimum ourselves.\n      this._levels = local;\n      level = typeof local.level === 'number' ? local.level : Math.min(local.audio.send, local.audio.recv, local.video.send, local.video.recv);\n    }\n\n    if (level !== null && this.level !== level) {\n      this._level = level;\n      updated = true;\n    }\n\n    this._remoteLevels = message && message.remotes ? message.remotes.reduce(function (levels, obj) {\n      var oldObj = _this._remoteLevels.get(obj.sid) || {};\n\n      if (oldObj.level !== obj.level) {\n        updated = true;\n      }\n\n      return levels.set(obj.sid, obj);\n    }, new Map()) : this._remoteLevels;\n\n    if (updated) {\n      this.emit('updated');\n    }\n\n    setTimeout(function () {\n      return _this._sendNetworkQualityInputs();\n    }, 1000);\n  };\n  /**\n   * Start sending {@link NetworkQualityInputs}.\n   * @private\n   * @returns {Promise<void>}\n   */\n\n\n  NetworkQualitySignaling.prototype._sendNetworkQualityInputs = function () {\n    var _this = this;\n\n    return this._networkQualityInputs.take().then(function (networkQualityInputs) {\n      if (_this._transport) {\n        _this._transport.publish(createNetworkQualityInputsMessage(networkQualityInputs, _this._networkQualityReportLevels));\n      }\n    });\n  };\n  /**\n   * Put {@link NetworkQualityInputs} to be used for computing\n   * {@link NetworkQualityLevel}.\n   * @param {NetworkQualityInputs} networkQualityInputs\n   * @returns {void}\n   */\n\n\n  NetworkQualitySignaling.prototype.put = function (networkQualityInputs) {\n    this._networkQualityInputs.put(networkQualityInputs);\n  };\n\n  return NetworkQualitySignaling;\n}(MediaSignaling);\n/**\n * The {@link NetworkQualityLevel} changed.\n * @event NetworkQualitySignaling#updated\n */\n\n/**\n * @typedef {object} NetworkQualityReportLevels\n * @param {number} reportLevel\n * @param {number} remoteReportLevel\n */\n\n/**\n * @param {NetworkQualityInputs} networkQualityInputs\n * @param {NetworkQualityReportLevels} networkQualityReportLevels\n * @returns {object} message\n */\n\n\nfunction createNetworkQualityInputsMessage(networkQualityInputs, networkQualityReportLevels) {\n  return Object.assign({\n    type: 'network_quality'\n  }, networkQualityInputs, networkQualityReportLevels);\n}\n\nmodule.exports = NetworkQualitySignaling;","map":{"version":3,"sources":["../../../lib/signaling/v2/networkqualitysignaling.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar MediaSignaling = require('./mediasignaling');\nvar AsyncVar = require('../../util/asyncvar');\n/**\n * @interface MediaSignalingTransport\n * @property {function(object): boolean} send\n * @emits MediaSignalingTransport#message\n */\n/**\n * The {@link MediaSignalingTransport} received a message.\n * @event MediaSignalingTransport#message\n * @param {object} message\n */\n/**\n * @interface LatencyStats\n * @property {number} jitter\n * @property {number} rtt\n * @property {number} level\n */\n/**\n * @interface FractionLostStats\n * @property {number} fractionLost\n * @property {number} level\n */\n/**\n * @interface BandwidthStats\n * @property {number} actual\n * @property {number} available\n * @property {number} level\n */\n/**\n * @interface SendOrRecvStats\n * @property {BandwidthStats} bandwidth\n * @property {FractionLostStats} fractionLost\n * @property {LatencyStats} latency\n */\n/**\n * @interface MediaLevels\n * @property {number} send\n * @property {SendOrRecvStats} sendStats\n * @property {number} recv\n * @property {SendOrRecvStats} recvStats\n */\n/**\n * @interface NetworkQualityLevels\n * @property {number} level\n * @property {MediaLevels} audio\n * @property {MediaLevels} video\n */\n/**\n * @typedef {PeerConnectionSummary} NetworkQualityInputs\n */\n/**\n * @classdesc The {@link NetworkQualitySignaling} class allows submitting\n *   {@link NetworkQualityInputs} for computing {@link NetworkQualityLevel}. It\n *   does so by sending and receiving messages over a\n *   {@link MediaSignalingTransport}. The exact transport used depends on the\n *   topology of the {@link Room} that {@link NetworkQualitySignaling} is being\n *   used within: for P2P Rooms, we re-use the {@link TransportV2}; and for\n *   Group Rooms, we use a {@link DataTransport}.\n * @emits NetworkQualitySignaling#updated\n */\nvar NetworkQualitySignaling = /** @class */ (function (_super) {\n    __extends(NetworkQualitySignaling, _super);\n    /**\n     * Construct a {@link NetworkQualitySignaling}.\n     * @param {Promise<DataTrackReceiver>} getReceiver\n     * @param {NetworkQualityConfigurationImpl} networkQualityConfiguration\n     */\n    function NetworkQualitySignaling(getReceiver, networkQualityConfiguration, options) {\n        var _this = _super.call(this, getReceiver, 'network_quality', options) || this;\n        Object.defineProperties(_this, {\n            _level: {\n                value: null,\n                writable: true\n            },\n            _levels: {\n                value: null,\n                writable: true\n            },\n            _remoteLevels: {\n                value: new Map(),\n                writable: true\n            },\n            _networkQualityInputs: {\n                value: new AsyncVar()\n            },\n            _networkQualityReportLevels: {\n                get: function () {\n                    return {\n                        reportLevel: networkQualityConfiguration.local,\n                        remoteReportLevel: networkQualityConfiguration.remote\n                    };\n                }\n            }\n        });\n        _this.on('ready', function (transport) {\n            transport.on('message', function (message) {\n                switch (message.type) {\n                    case 'network_quality':\n                        _this._handleNetworkQualityMessage(message);\n                        break;\n                    default:\n                        break;\n                }\n            });\n        });\n        _this._sendNetworkQualityInputs();\n        return _this;\n    }\n    Object.defineProperty(NetworkQualitySignaling.prototype, \"level\", {\n        /**\n         * Get the current {@link NetworkQualityLevel}, if any.\n         * @returns {?NetworkQualityLevel} level - initially null\n         */\n        get: function () {\n            return this._level;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NetworkQualitySignaling.prototype, \"levels\", {\n        /**\n         * Get the current {@link NetworkQualityLevels}, if any.\n         * @returns {?NetworkQualityLevels} levels - initially null\n         */\n        get: function () {\n            return this._levels;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NetworkQualitySignaling.prototype, \"remoteLevels\", {\n        /**\n         * Get the current {@link NetworkQualityLevels} of remote participants, if any.\n         * @returns {Map<String, NetworkQualityLevels>} remoteLevels\n         */\n        get: function () {\n            return this._remoteLevels;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Check to see if the {@link NetworkQualityLevel} is new, and raise an\n     * event if necessary.\n     * @private\n     * @param {object} message\n     * @returns {void}\n     */\n    NetworkQualitySignaling.prototype._handleNetworkQualityMessage = function (message) {\n        var _this = this;\n        var updated = false;\n        var level = null;\n        var local = message ? message.local : null;\n        if (typeof local === 'number') {\n            // NOTE(mroberts): In prod, we plan to only send the level.\n            level = local;\n            this._levels = null;\n        }\n        else if (typeof local === 'object' && local) {\n            // NOTE(mroberts): In dev, we plan to send the decomposed levels. An early\n            // VMS version does not compute `level` for us, so we fallback to taking\n            // the minimum ourselves.\n            this._levels = local;\n            level = typeof local.level === 'number'\n                ? local.level\n                : Math.min(local.audio.send, local.audio.recv, local.video.send, local.video.recv);\n        }\n        if (level !== null && this.level !== level) {\n            this._level = level;\n            updated = true;\n        }\n        this._remoteLevels = message && message.remotes\n            ? message.remotes.reduce(function (levels, obj) {\n                var oldObj = _this._remoteLevels.get(obj.sid) || {};\n                if (oldObj.level !== obj.level) {\n                    updated = true;\n                }\n                return levels.set(obj.sid, obj);\n            }, new Map())\n            : this._remoteLevels;\n        if (updated) {\n            this.emit('updated');\n        }\n        setTimeout(function () { return _this._sendNetworkQualityInputs(); }, 1000);\n    };\n    /**\n     * Start sending {@link NetworkQualityInputs}.\n     * @private\n     * @returns {Promise<void>}\n     */\n    NetworkQualitySignaling.prototype._sendNetworkQualityInputs = function () {\n        var _this = this;\n        return this._networkQualityInputs.take().then(function (networkQualityInputs) {\n            if (_this._transport) {\n                _this._transport.publish(createNetworkQualityInputsMessage(networkQualityInputs, _this._networkQualityReportLevels));\n            }\n        });\n    };\n    /**\n     * Put {@link NetworkQualityInputs} to be used for computing\n     * {@link NetworkQualityLevel}.\n     * @param {NetworkQualityInputs} networkQualityInputs\n     * @returns {void}\n     */\n    NetworkQualitySignaling.prototype.put = function (networkQualityInputs) {\n        this._networkQualityInputs.put(networkQualityInputs);\n    };\n    return NetworkQualitySignaling;\n}(MediaSignaling));\n/**\n * The {@link NetworkQualityLevel} changed.\n * @event NetworkQualitySignaling#updated\n */\n/**\n * @typedef {object} NetworkQualityReportLevels\n * @param {number} reportLevel\n * @param {number} remoteReportLevel\n */\n/**\n * @param {NetworkQualityInputs} networkQualityInputs\n * @param {NetworkQualityReportLevels} networkQualityReportLevels\n * @returns {object} message\n */\nfunction createNetworkQualityInputsMessage(networkQualityInputs, networkQualityReportLevels) {\n    return Object.assign({ type: 'network_quality' }, networkQualityInputs, networkQualityReportLevels);\n}\nmodule.exports = NetworkQualitySignaling;\n//# sourceMappingURL=networkqualitysignaling.js.map"]},"metadata":{},"sourceType":"script"}