{"ast":null,"code":"'use strict';\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\n    to[j] = from[i];\n  }\n\n  return to;\n};\n/**\n * A Promise that can be canceled with {@link CancelablePromise#cancel}.\n * @extends Promise\n*/\n\n\nvar CancelablePromise = function () {\n  /**\n   * Construct a new {@link CancelablePromise}.\n   * @param {CancelablePromise.OnCreate} onCreate\n   * @param {CancelablePromise.OnCancel} onCancel\n  */\n\n  /**\n  * A function to be called on {@link CancelablePromise} creation\n  * @typedef {function} CancelablePromise.OnCreate\n  * @param {function(*)} resolve\n  * @param {function(*)} reject\n  * @param {function(): boolean} isCanceled\n  */\n\n  /**\n  * A function to be called when {@link CancelablePromise#cancel} is called\n  * @typedef {function} CancelablePromise.OnCancel\n  */\n  function CancelablePromise(onCreate, onCancel) {\n    var _this = this;\n    /* istanbul ignore next */\n\n\n    Object.defineProperties(this, {\n      _isCancelable: {\n        writable: true,\n        value: true\n      },\n      _isCanceled: {\n        writable: true,\n        value: false\n      },\n      _onCancel: {\n        value: onCancel\n      }\n    });\n    Object.defineProperty(this, '_promise', {\n      value: new Promise(function (resolve, reject) {\n        onCreate(function (value) {\n          _this._isCancelable = false;\n          resolve(value);\n        }, function (reason) {\n          _this._isCancelable = false;\n          reject(reason);\n        }, function () {\n          return _this._isCanceled;\n        });\n      })\n    });\n  }\n  /**\n   * Create a synchronously-rejected {@link CancelablePromise}.\n   * @param {*} reason\n   * @returns {Promise<*>}\n   */\n\n\n  CancelablePromise.reject = function (reason) {\n    return new CancelablePromise(function rejected(resolve, reject) {\n      reject(reason);\n    }, function onCancel() {// Do nothing.\n    });\n  };\n  /**\n   * Create a synchronously-resolved {@link CancelablePromise}.\n   * @param {*|Promise<*>|Thenable<*>} result\n   * @returns {CancelablePromise<*>}\n   */\n\n\n  CancelablePromise.resolve = function (result) {\n    return new CancelablePromise(function resolved(resolve) {\n      resolve(result);\n    }, function onCancel() {// Do nothing.\n    });\n  };\n  /**\n   * Attempt to cancel the {@link CancelablePromise}.\n   * @returns {this}\n   */\n\n\n  CancelablePromise.prototype.cancel = function () {\n    if (this._isCancelable) {\n      this._isCanceled = true;\n\n      this._onCancel();\n    }\n\n    return this;\n  };\n  /**\n   * @param {function} onRejected\n   * @returns {CancelablePromise}\n   */\n\n\n  CancelablePromise.prototype.catch = function () {\n    var args = [].slice.call(arguments);\n    var promise = this._promise;\n    return new CancelablePromise(function onCreate(resolve, reject) {\n      promise.catch.apply(promise, __spreadArray([], __read(args))).then(resolve, reject);\n    }, this._onCancel);\n  };\n  /**\n   * @param {?function} onResolved\n   * @param {function} [onRejected]\n   * @returns {CancelablePromise}\n   */\n\n\n  CancelablePromise.prototype.then = function () {\n    var args = [].slice.call(arguments);\n    var promise = this._promise;\n    return new CancelablePromise(function onCreate(resolve, reject) {\n      promise.then.apply(promise, __spreadArray([], __read(args))).then(resolve, reject);\n    }, this._onCancel);\n  };\n\n  return CancelablePromise;\n}();\n\nmodule.exports = CancelablePromise;","map":{"version":3,"sources":["../../lib/util/cancelablepromise.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["'use strict';\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\n/**\n * A Promise that can be canceled with {@link CancelablePromise#cancel}.\n * @extends Promise\n*/\nvar CancelablePromise = /** @class */ (function () {\n    /**\n     * Construct a new {@link CancelablePromise}.\n     * @param {CancelablePromise.OnCreate} onCreate\n     * @param {CancelablePromise.OnCancel} onCancel\n    */ /**\n     * A function to be called on {@link CancelablePromise} creation\n     * @typedef {function} CancelablePromise.OnCreate\n     * @param {function(*)} resolve\n     * @param {function(*)} reject\n     * @param {function(): boolean} isCanceled\n    */ /**\n     * A function to be called when {@link CancelablePromise#cancel} is called\n     * @typedef {function} CancelablePromise.OnCancel\n     */\n    function CancelablePromise(onCreate, onCancel) {\n        var _this = this;\n        /* istanbul ignore next */\n        Object.defineProperties(this, {\n            _isCancelable: {\n                writable: true,\n                value: true\n            },\n            _isCanceled: {\n                writable: true,\n                value: false\n            },\n            _onCancel: {\n                value: onCancel\n            }\n        });\n        Object.defineProperty(this, '_promise', {\n            value: new Promise(function (resolve, reject) {\n                onCreate(function (value) {\n                    _this._isCancelable = false;\n                    resolve(value);\n                }, function (reason) {\n                    _this._isCancelable = false;\n                    reject(reason);\n                }, function () { return _this._isCanceled; });\n            })\n        });\n    }\n    /**\n     * Create a synchronously-rejected {@link CancelablePromise}.\n     * @param {*} reason\n     * @returns {Promise<*>}\n     */\n    CancelablePromise.reject = function (reason) {\n        return new CancelablePromise(function rejected(resolve, reject) {\n            reject(reason);\n        }, function onCancel() {\n            // Do nothing.\n        });\n    };\n    /**\n     * Create a synchronously-resolved {@link CancelablePromise}.\n     * @param {*|Promise<*>|Thenable<*>} result\n     * @returns {CancelablePromise<*>}\n     */\n    CancelablePromise.resolve = function (result) {\n        return new CancelablePromise(function resolved(resolve) {\n            resolve(result);\n        }, function onCancel() {\n            // Do nothing.\n        });\n    };\n    /**\n     * Attempt to cancel the {@link CancelablePromise}.\n     * @returns {this}\n     */\n    CancelablePromise.prototype.cancel = function () {\n        if (this._isCancelable) {\n            this._isCanceled = true;\n            this._onCancel();\n        }\n        return this;\n    };\n    /**\n     * @param {function} onRejected\n     * @returns {CancelablePromise}\n     */\n    CancelablePromise.prototype.catch = function () {\n        var args = [].slice.call(arguments);\n        var promise = this._promise;\n        return new CancelablePromise(function onCreate(resolve, reject) {\n            promise.catch.apply(promise, __spreadArray([], __read(args))).then(resolve, reject);\n        }, this._onCancel);\n    };\n    /**\n     * @param {?function} onResolved\n     * @param {function} [onRejected]\n     * @returns {CancelablePromise}\n     */\n    CancelablePromise.prototype.then = function () {\n        var args = [].slice.call(arguments);\n        var promise = this._promise;\n        return new CancelablePromise(function onCreate(resolve, reject) {\n            promise.then.apply(promise, __spreadArray([], __read(args))).then(resolve, reject);\n        }, this._onCancel);\n    };\n    return CancelablePromise;\n}());\nmodule.exports = CancelablePromise;\n//# sourceMappingURL=cancelablepromise.js.map"]},"metadata":{},"sourceType":"script"}