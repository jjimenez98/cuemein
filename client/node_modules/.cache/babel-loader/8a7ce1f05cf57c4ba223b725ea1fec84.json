{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar StateMachine = require('../statemachine');\n\nvar NetworkQualityStats = require('../stats/networkqualitystats');\n/*\nParticipantSignaling States\n----------------------\n\n    +------------+     +-----------+     +--------------+\n    |            |     |           |     |              |\n    | connecting |---->| connected |---->| disconnected |\n    |            |     |           |     |              |\n    +------------+     +-----------+     +--------------+\n                           | ^                    ^\n                           | |  +--------------+  |\n                           | |--|              |  |\n                           |--->| reconnecting |--|\n                                |              |\n                                +--------------+\n*/\n\n\nvar states = {\n  connecting: ['connected'],\n  connected: ['disconnected', 'reconnecting'],\n  reconnecting: ['connected', 'disconnected'],\n  disconnected: []\n};\n/**\n * A {@link Participant} implementation\n * @extends StateMachine\n * @property {?string} identity\n * @property {?Participant.SID} sid\n * @property {string} state - \"connecting\", \"connected\", or \"disconnected\"\n * @property {Map<Track.ID | Track.SID, TrackSignaling>} tracks\n * @emits ParticipantSignaling#networkQualityLevelChanged\n * @emits ParticipantSignaling#trackAdded\n * @emits ParticipantSignaling#trackRemoved\n */\n\nvar ParticipantSignaling = function (_super) {\n  __extends(ParticipantSignaling, _super);\n  /**\n   * Construct a {@link ParticipantSignaling}.\n   */\n\n\n  function ParticipantSignaling() {\n    var _this = _super.call(this, 'connecting', states) || this;\n\n    Object.defineProperties(_this, {\n      _identity: {\n        writable: true,\n        value: null\n      },\n      _networkQualityLevel: {\n        value: null,\n        writable: true\n      },\n      _networkQualityStats: {\n        value: null,\n        writable: true\n      },\n      _sid: {\n        writable: true,\n        value: null\n      },\n      identity: {\n        enumerable: true,\n        get: function get() {\n          return this._identity;\n        }\n      },\n      sid: {\n        enumerable: true,\n        get: function get() {\n          return this._sid;\n        }\n      },\n      tracks: {\n        enumerable: true,\n        value: new Map()\n      }\n    });\n    return _this;\n  }\n\n  Object.defineProperty(ParticipantSignaling.prototype, \"networkQualityLevel\", {\n    /**\n     * Get the current {@link NetworkQualityLevel}, if any.\n     * @returns {?NetworkQualityLevel} networkQualityLevel - initially null\n     */\n    get: function get() {\n      return this._networkQualityLevel;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ParticipantSignaling.prototype, \"networkQualityStats\", {\n    /**\n     * Get the current {@link NetworkQualityStats}\n     * @returns {?NetworkQualityStats} networkQualityStats - initially null\n     */\n    get: function get() {\n      return this._networkQualityStats;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Add the {@link TrackSignaling}, MediaStreamTrack, or\n   * {@link DataTrackSender} to the {@link ParticipantSignaling}.\n   * @param {TrackSignaling|DataTrackSender|MediaTrackSender} track\n   * @returns {this}\n   * @fires ParticipantSignaling#trackAdded\n   */\n\n  ParticipantSignaling.prototype.addTrack = function (track) {\n    this.tracks.set(track.id || track.sid, track);\n    this.emit('trackAdded', track);\n    return this;\n  };\n  /**\n   * Disconnect the {@link ParticipantSignaling}.\n   * @returns {boolean}\n   */\n\n\n  ParticipantSignaling.prototype.disconnect = function () {\n    if (this.state !== 'disconnected') {\n      this.preempt('disconnected');\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Remove the {@link TrackSignaling}, MediaStreamTrack, or\n   * {@link DataTrackSender} from the {@link ParticipantSignaling}.\n   * @param {TrackSignaling|DataTrackSender|MediaTrackSender} track\n   * @returns {?TrackSignaling}\n   * @fires ParticipantSignaling#trackRemoved\n   */\n\n\n  ParticipantSignaling.prototype.removeTrack = function (track) {\n    var signaling = this.tracks.get(track.id || track.sid);\n    this.tracks.delete(track.id || track.sid);\n\n    if (signaling) {\n      this.emit('trackRemoved', track);\n    }\n\n    return signaling || null;\n  };\n  /**\n   * @param {NetworkQualityLevel} networkQualityLevel\n   * @param {?NetworkQualityLevels} [networkQualityLevels=null]\n   * @returns {void}\n   */\n\n\n  ParticipantSignaling.prototype.setNetworkQualityLevel = function (networkQualityLevel, networkQualityLevels) {\n    if (this._networkQualityLevel !== networkQualityLevel) {\n      this._networkQualityLevel = networkQualityLevel;\n      this._networkQualityStats = networkQualityLevels && (networkQualityLevels.audio || networkQualityLevels.video) ? new NetworkQualityStats(networkQualityLevels) : null;\n      this.emit('networkQualityLevelChanged');\n    }\n  };\n  /**\n   * Connect the {@link ParticipantSignaling}.\n   * @param {Participant.SID} sid\n   * @param {string} identity\n   * @returns {boolean}\n   */\n\n\n  ParticipantSignaling.prototype.connect = function (sid, identity) {\n    if (this.state === 'connecting' || this.state === 'reconnecting') {\n      if (!this._sid) {\n        this._sid = sid;\n      }\n\n      if (!this._identity) {\n        this._identity = identity;\n      }\n\n      this.preempt('connected');\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Transition to \"reconnecting\" state.\n   * @returns {boolean}\n   */\n\n\n  ParticipantSignaling.prototype.reconnecting = function () {\n    if (this.state === 'connecting' || this.state === 'connected') {\n      this.preempt('reconnecting');\n      return true;\n    }\n\n    return false;\n  };\n\n  return ParticipantSignaling;\n}(StateMachine);\n/**\n * @event ParticipantSignaling#event:networkQualityLevelChanged\n */\n\n/**\n * {@link TrackSignaling} was added to the {@link ParticipantSignaling}.\n * @event ParticipantSignaling#trackAdded\n * @param {TrackSignaling} track\n */\n\n/**\n * {@link TrackSignaling} was removed from the {@link ParticipantSignaling}.\n * @event ParticipantSignaling#trackRemoved\n * @param {TrackSignaling} track\n */\n\n\nmodule.exports = ParticipantSignaling;","map":{"version":3,"sources":["../../lib/signaling/participant.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar StateMachine = require('../statemachine');\nvar NetworkQualityStats = require('../stats/networkqualitystats');\n/*\nParticipantSignaling States\n----------------------\n\n    +------------+     +-----------+     +--------------+\n    |            |     |           |     |              |\n    | connecting |---->| connected |---->| disconnected |\n    |            |     |           |     |              |\n    +------------+     +-----------+     +--------------+\n                           | ^                    ^\n                           | |  +--------------+  |\n                           | |--|              |  |\n                           |--->| reconnecting |--|\n                                |              |\n                                +--------------+\n*/\nvar states = {\n    connecting: [\n        'connected'\n    ],\n    connected: [\n        'disconnected',\n        'reconnecting'\n    ],\n    reconnecting: [\n        'connected',\n        'disconnected'\n    ],\n    disconnected: []\n};\n/**\n * A {@link Participant} implementation\n * @extends StateMachine\n * @property {?string} identity\n * @property {?Participant.SID} sid\n * @property {string} state - \"connecting\", \"connected\", or \"disconnected\"\n * @property {Map<Track.ID | Track.SID, TrackSignaling>} tracks\n * @emits ParticipantSignaling#networkQualityLevelChanged\n * @emits ParticipantSignaling#trackAdded\n * @emits ParticipantSignaling#trackRemoved\n */\nvar ParticipantSignaling = /** @class */ (function (_super) {\n    __extends(ParticipantSignaling, _super);\n    /**\n     * Construct a {@link ParticipantSignaling}.\n     */\n    function ParticipantSignaling() {\n        var _this = _super.call(this, 'connecting', states) || this;\n        Object.defineProperties(_this, {\n            _identity: {\n                writable: true,\n                value: null\n            },\n            _networkQualityLevel: {\n                value: null,\n                writable: true\n            },\n            _networkQualityStats: {\n                value: null,\n                writable: true\n            },\n            _sid: {\n                writable: true,\n                value: null\n            },\n            identity: {\n                enumerable: true,\n                get: function () {\n                    return this._identity;\n                }\n            },\n            sid: {\n                enumerable: true,\n                get: function () {\n                    return this._sid;\n                }\n            },\n            tracks: {\n                enumerable: true,\n                value: new Map()\n            }\n        });\n        return _this;\n    }\n    Object.defineProperty(ParticipantSignaling.prototype, \"networkQualityLevel\", {\n        /**\n         * Get the current {@link NetworkQualityLevel}, if any.\n         * @returns {?NetworkQualityLevel} networkQualityLevel - initially null\n         */\n        get: function () {\n            return this._networkQualityLevel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ParticipantSignaling.prototype, \"networkQualityStats\", {\n        /**\n         * Get the current {@link NetworkQualityStats}\n         * @returns {?NetworkQualityStats} networkQualityStats - initially null\n         */\n        get: function () {\n            return this._networkQualityStats;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Add the {@link TrackSignaling}, MediaStreamTrack, or\n     * {@link DataTrackSender} to the {@link ParticipantSignaling}.\n     * @param {TrackSignaling|DataTrackSender|MediaTrackSender} track\n     * @returns {this}\n     * @fires ParticipantSignaling#trackAdded\n     */\n    ParticipantSignaling.prototype.addTrack = function (track) {\n        this.tracks.set(track.id || track.sid, track);\n        this.emit('trackAdded', track);\n        return this;\n    };\n    /**\n     * Disconnect the {@link ParticipantSignaling}.\n     * @returns {boolean}\n     */\n    ParticipantSignaling.prototype.disconnect = function () {\n        if (this.state !== 'disconnected') {\n            this.preempt('disconnected');\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Remove the {@link TrackSignaling}, MediaStreamTrack, or\n     * {@link DataTrackSender} from the {@link ParticipantSignaling}.\n     * @param {TrackSignaling|DataTrackSender|MediaTrackSender} track\n     * @returns {?TrackSignaling}\n     * @fires ParticipantSignaling#trackRemoved\n     */\n    ParticipantSignaling.prototype.removeTrack = function (track) {\n        var signaling = this.tracks.get(track.id || track.sid);\n        this.tracks.delete(track.id || track.sid);\n        if (signaling) {\n            this.emit('trackRemoved', track);\n        }\n        return signaling || null;\n    };\n    /**\n     * @param {NetworkQualityLevel} networkQualityLevel\n     * @param {?NetworkQualityLevels} [networkQualityLevels=null]\n     * @returns {void}\n     */\n    ParticipantSignaling.prototype.setNetworkQualityLevel = function (networkQualityLevel, networkQualityLevels) {\n        if (this._networkQualityLevel !== networkQualityLevel) {\n            this._networkQualityLevel = networkQualityLevel;\n            this._networkQualityStats = networkQualityLevels\n                && (networkQualityLevels.audio || networkQualityLevels.video)\n                ? new NetworkQualityStats(networkQualityLevels)\n                : null;\n            this.emit('networkQualityLevelChanged');\n        }\n    };\n    /**\n     * Connect the {@link ParticipantSignaling}.\n     * @param {Participant.SID} sid\n     * @param {string} identity\n     * @returns {boolean}\n     */\n    ParticipantSignaling.prototype.connect = function (sid, identity) {\n        if (this.state === 'connecting' || this.state === 'reconnecting') {\n            if (!this._sid) {\n                this._sid = sid;\n            }\n            if (!this._identity) {\n                this._identity = identity;\n            }\n            this.preempt('connected');\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Transition to \"reconnecting\" state.\n     * @returns {boolean}\n     */\n    ParticipantSignaling.prototype.reconnecting = function () {\n        if (this.state === 'connecting' || this.state === 'connected') {\n            this.preempt('reconnecting');\n            return true;\n        }\n        return false;\n    };\n    return ParticipantSignaling;\n}(StateMachine));\n/**\n * @event ParticipantSignaling#event:networkQualityLevelChanged\n */\n/**\n * {@link TrackSignaling} was added to the {@link ParticipantSignaling}.\n * @event ParticipantSignaling#trackAdded\n * @param {TrackSignaling} track\n */\n/**\n * {@link TrackSignaling} was removed from the {@link ParticipantSignaling}.\n * @event ParticipantSignaling#trackRemoved\n * @param {TrackSignaling} track\n */\nmodule.exports = ParticipantSignaling;\n//# sourceMappingURL=participant.js.map"]},"metadata":{},"sourceType":"script"}