{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\n    to[j] = from[i];\n  }\n\n  return to;\n};\n\nvar _a = require('../../util/constants'),\n    E = _a.typeErrors,\n    trackPriority = _a.trackPriority;\n\nvar _b = require('@twilio/webrtc/lib/util'),\n    guessBrowser = _b.guessBrowser,\n    isIOSChrome = _b.isIOSChrome;\n\nvar documentVisibilityMonitor = require('../../util/documentvisibilitymonitor.js');\n\nfunction mixinRemoteMediaTrack(AudioOrVideoTrack) {\n  /**\n   * A {@link RemoteMediaTrack} represents a {@link MediaTrack} published to a\n   * {@link Room} by a {@link RemoteParticipant}.\n   * @property {boolean} isEnabled - Whether the {@link RemoteMediaTrack} is enabled\n   * @property {boolean} isSwitchedOff - Whether the {@link RemoteMediaTrack} is switched off\n   * @property {Track.SID} sid - The SID assigned to the {@link RemoteMediaTrack}\n   * @property {?Track.Priority} priority - The subscribe priority of the {@link RemoteMediaTrack}\n   * @emits RemoteMediaTrack#disabled\n   * @emits RemoteMediaTrack#enabled\n   * @emits RemoteMediaTrack#switchedOff\n   * @emits RemoteMediaTrack#switchedOn\n   */\n  return function (_super) {\n    __extends(RemoteMediaTrack, _super);\n    /**\n     * Construct a {@link RemoteMediaTrack}.\n     * @param {Track.SID} sid\n     * @param {MediaTrackReceiver} mediaTrackReceiver\n     * @param {boolean} isEnabled\n      @param {boolean} isSwitchedOff\n     * @param {function(?Track.Priority): void} setPriority - Set or clear the subscribe\n     *  {@link Track.Priority} of the {@link RemoteMediaTrack}\n     * @param {function(ClientRenderHint): void} setRenderHint - Set render hints.\n     * @param {{log: Log, name: ?string}} options\n     */\n\n\n    function RemoteMediaTrack(sid, mediaTrackReceiver, isEnabled, isSwitchedOff, setPriority, setRenderHint, options) {\n      var _this = this;\n\n      options = Object.assign({\n        // NOTE(mpatwardhan): WebKit bug: 212780 sometimes causes the audio/video elements to stay paused when safari\n        // regains foreground. To workaround it, when safari gains foreground - we will play any elements that were\n        // playing before safari lost foreground.\n        workaroundWebKitBug212780: (guessBrowser() === 'safari' || isIOSChrome()) && typeof document === 'object' && typeof document.addEventListener === 'function' && typeof document.visibilityState === 'string'\n      }, options);\n      _this = _super.call(this, mediaTrackReceiver, options) || this;\n      Object.defineProperties(_this, {\n        _isEnabled: {\n          value: isEnabled,\n          writable: true\n        },\n        _isSwitchedOff: {\n          value: isSwitchedOff,\n          writable: true\n        },\n        _priority: {\n          value: null,\n          writable: true\n        },\n        _setPriority: {\n          value: setPriority\n        },\n        _setRenderHint: {\n          value: function value(renderHint) {\n            _this._log.debug('updating render hint:', renderHint);\n\n            setRenderHint(renderHint);\n          }\n        },\n        isEnabled: {\n          enumerable: true,\n          get: function get() {\n            return this._isEnabled;\n          }\n        },\n        isSwitchedOff: {\n          enumerable: true,\n          get: function get() {\n            return this._isSwitchedOff;\n          }\n        },\n        priority: {\n          enumerable: true,\n          get: function get() {\n            return this._priority;\n          }\n        },\n        sid: {\n          enumerable: true,\n          value: sid\n        },\n        _workaroundWebKitBug212780: {\n          value: options.workaroundWebKitBug212780\n        },\n        _workaroundWebKitBug212780Cleanup: {\n          value: null,\n          writable: true\n        }\n      });\n      return _this;\n    }\n    /**\n     * Update the subscribe {@link Track.Priority} of the {@link RemoteMediaTrack}.\n     * @param {?Track.Priority} priority - the new subscribe {@link Track.Priority};\n     *   If <code>null</code>, then the subscribe {@link Track.Priority} is cleared, which\n     *   means the {@link Track.Priority} set by the publisher is now the effective priority.\n     * @returns {this}\n     * @throws {RangeError}\n     */\n\n\n    RemoteMediaTrack.prototype.setPriority = function (priority) {\n      var priorityValues = __spreadArray([null], __read(Object.values(trackPriority)));\n\n      if (!priorityValues.includes(priority)) {\n        // eslint-disable-next-line new-cap\n        throw E.INVALID_VALUE('priority', priorityValues);\n      }\n\n      if (this._priority !== priority) {\n        this._priority = priority;\n\n        this._setPriority(priority);\n      }\n\n      return this;\n    };\n    /**\n     * @private\n     * @param {boolean} isEnabled\n     */\n\n\n    RemoteMediaTrack.prototype._setEnabled = function (isEnabled) {\n      if (this._isEnabled !== isEnabled) {\n        this._isEnabled = isEnabled;\n        this.emit(this._isEnabled ? 'enabled' : 'disabled', this);\n      }\n    };\n    /**\n     * @private\n     * @param {boolean} isSwitchedOff\n     */\n\n\n    RemoteMediaTrack.prototype._setSwitchedOff = function (isSwitchedOff) {\n      if (this._isSwitchedOff !== isSwitchedOff) {\n        this._isSwitchedOff = isSwitchedOff;\n        this.emit(isSwitchedOff ? 'switchedOff' : 'switchedOn', this);\n      }\n    };\n\n    RemoteMediaTrack.prototype.attach = function (el) {\n      var result = _super.prototype.attach.call(this, el);\n\n      if (this.mediaStreamTrack.enabled !== true) {\n        // NOTE(mpatwardhan): we disable mediaStreamTrack when there\n        // are no attachments to it (see notes below). Now that there\n        // are attachments re-enable the track.\n        this.mediaStreamTrack.enabled = true;\n\n        if (this.processedTrack) {\n          this.processedTrack.enabled = true;\n        } // NOTE(csantos): since remote tracks disables/enables the mediaStreamTrack,\n        // captureFrames stops along with it. We need to start it again after re-enabling.\n        // See attach/detach methods in this class and in VideoTrack class.\n\n\n        if (this.processor) {\n          this._captureFrames();\n        }\n      }\n\n      if (this._workaroundWebKitBug212780) {\n        this._workaroundWebKitBug212780Cleanup = this._workaroundWebKitBug212780Cleanup || playIfPausedWhileInBackground(this);\n      }\n\n      return result;\n    };\n\n    RemoteMediaTrack.prototype.detach = function (el) {\n      var result = _super.prototype.detach.call(this, el);\n\n      if (this._attachments.size === 0) {\n        // NOTE(mpatwardhan): chrome continues playing webrtc audio\n        // track even after audio element is removed from the DOM.\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=749928\n        // to workaround: here disable the track when\n        // there are no elements attached to it.\n        this.mediaStreamTrack.enabled = false;\n\n        if (this.processedTrack) {\n          this.processedTrack.enabled = false;\n        }\n\n        if (this._workaroundWebKitBug212780Cleanup) {\n          // unhook visibility change\n          this._workaroundWebKitBug212780Cleanup();\n\n          this._workaroundWebKitBug212780Cleanup = null;\n        }\n      }\n\n      return result;\n    };\n\n    return RemoteMediaTrack;\n  }(AudioOrVideoTrack);\n}\n\nfunction playIfPausedWhileInBackground(remoteMediaTrack) {\n  var log = remoteMediaTrack._log,\n      kind = remoteMediaTrack.kind;\n\n  function onVisibilityChanged(isVisible) {\n    if (!isVisible) {\n      return;\n    }\n\n    remoteMediaTrack._attachments.forEach(function (el) {\n      var shim = remoteMediaTrack._elShims.get(el);\n\n      var isInadvertentlyPaused = el.paused && shim && !shim.pausedIntentionally();\n\n      if (isInadvertentlyPaused) {\n        log.info(\"Playing inadvertently paused <\" + kind + \"> element\");\n        log.debug('Element:', el);\n        log.debug('RemoteMediaTrack:', remoteMediaTrack);\n        el.play().then(function () {\n          log.info(\"Successfully played inadvertently paused <\" + kind + \"> element\");\n          log.debug('Element:', el);\n          log.debug('RemoteMediaTrack:', remoteMediaTrack);\n        }).catch(function (err) {\n          log.warn(\"Error while playing inadvertently paused <\" + kind + \"> element:\", {\n            err: err,\n            el: el,\n            remoteMediaTrack: remoteMediaTrack\n          });\n        });\n      }\n    });\n  } // NOTE(mpatwardhan): listen for document visibility callback on phase 2.\n  // this ensures that any LocalMediaTrack's restart (which listen on phase 1) gets executed\n  // first. This order is important because we `play` tracks in the callback, and\n  // play can fail on safari if audio is not being captured.\n\n\n  documentVisibilityMonitor.onVisibilityChange(2, onVisibilityChanged);\n  return function () {\n    documentVisibilityMonitor.offVisibilityChange(2, onVisibilityChanged);\n  };\n}\n/**\n * A {@link RemoteMediaTrack} was disabled.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   disabled\n * @event RemoteMediaTrack#disabled\n */\n\n/**\n * A {@link RemoteMediaTrack} was enabled.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   enabled\n * @event RemoteMediaTrack#enabled\n */\n\n/**\n * A {@link RemoteMediaTrack} was switched off.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   switched off\n * @event RemoteMediaTrack#switchedOff\n */\n\n/**\n * A {@link RemoteMediaTrack} was switched on.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   switched on\n * @event RemoteMediaTrack#switchedOn\n */\n\n/**\n * A {@link ClientRenderHint} object specifies track dimensions and /enabled disable state.\n * This state will be used by the server(SFU) to determine bandwidth allocation for the track,\n * and turn it on or off as needed.\n * @typedef {object} ClientRenderHint\n * @property {boolean} [enabled] - track is enabled or disabled. defaults to disabled.\n * @property {VideoTrack.Dimensions} [renderDimensions] - Optional parameter to specify the desired\n *   render dimensions of {@link RemoteVideoTrack}s. This property must be specified if enabled=true\n */\n\n\nmodule.exports = mixinRemoteMediaTrack;","map":{"version":3,"sources":["../../../lib/media/track/remotemediatrack.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEM,IAAA,EAAA,GAAmC,OAAO,CAAC,sBAAD,CAA1C;AAAA,IAAc,CAAC,GAAA,EAAA,CAAA,UAAf;AAAA,IAAiB,aAAa,GAAA,EAAA,CAAA,aAA9B;;AACA,IAAA,EAAA,GAAgC,OAAO,CAAC,yBAAD,CAAvC;AAAA,IAAE,YAAY,GAAA,EAAA,CAAA,YAAd;AAAA,IAAgB,WAAW,GAAA,EAAA,CAAA,WAA3B;;AACN,IAAM,yBAAyB,GAAG,OAAO,CAAC,yCAAD,CAAzC;;AAEA,SAAS,qBAAT,CAA+B,iBAA/B,EAAgD;AAC9C;;;;;;;;;;;AAWG;AACH,SAAA,UAAA,MAAA,EAAA;AAAsC,IAAA,SAAA,CAAA,gBAAA,EAAA,MAAA,CAAA;AACpC;;;;;;;;;;AAUG;;;AACH,aAAA,gBAAA,CAAY,GAAZ,EAAiB,kBAAjB,EAAqC,SAArC,EAAgD,aAAhD,EAA+D,WAA/D,EAA4E,aAA5E,EAA2F,OAA3F,EAAkG;AAAlG,UAAA,KAAA,GAAA,IAAA;;AACE,MAAA,OAAO,GAAG,MAAM,CAAC,MAAP,CAAc;AACtB;AACA;AACA;AACA,QAAA,yBAAyB,EAAE,CAAC,YAAY,OAAO,QAAnB,IAA+B,WAAW,EAA3C,KACtB,OAAO,QAAP,KAAoB,QADE,IAEtB,OAAO,QAAQ,CAAC,gBAAhB,KAAqC,UAFf,IAGtB,OAAO,QAAQ,CAAC,eAAhB,KAAoC;AAPnB,OAAd,EAQP,OARO,CAAV;AAUA,MAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,kBAAN,EAA0B,OAA1B,KAAkC,IAAlC;AAEA,MAAA,MAAM,CAAC,gBAAP,CAAwB,KAAxB,EAA8B;AAC5B,QAAA,UAAU,EAAE;AACV,UAAA,KAAK,EAAE,SADG;AAEV,UAAA,QAAQ,EAAE;AAFA,SADgB;AAK5B,QAAA,cAAc,EAAE;AACd,UAAA,KAAK,EAAE,aADO;AAEd,UAAA,QAAQ,EAAE;AAFI,SALY;AAS5B,QAAA,SAAS,EAAE;AACT,UAAA,KAAK,EAAE,IADE;AAET,UAAA,QAAQ,EAAE;AAFD,SATiB;AAa5B,QAAA,YAAY,EAAE;AACZ,UAAA,KAAK,EAAE;AADK,SAbc;AAgB5B,QAAA,cAAc,EAAE;AACd,UAAA,KAAK,EAAE,eAAA,UAAA,EAAU;AACf,YAAA,KAAI,CAAC,IAAL,CAAU,KAAV,CAAgB,uBAAhB,EAAyC,UAAzC;;AACA,YAAA,aAAa,CAAC,UAAD,CAAb;AACD;AAJa,SAhBY;AAsB5B,QAAA,SAAS,EAAE;AACT,UAAA,UAAU,EAAE,IADH;AAET,UAAA,GAAG,EAAA,eAAA;AACD,mBAAO,KAAK,UAAZ;AACD;AAJQ,SAtBiB;AA4B5B,QAAA,aAAa,EAAE;AACb,UAAA,UAAU,EAAE,IADC;AAEb,UAAA,GAAG,EAAA,eAAA;AACD,mBAAO,KAAK,cAAZ;AACD;AAJY,SA5Ba;AAkC5B,QAAA,QAAQ,EAAE;AACR,UAAA,UAAU,EAAE,IADJ;AAER,UAAA,GAAG,EAAA,eAAA;AACD,mBAAO,KAAK,SAAZ;AACD;AAJO,SAlCkB;AAwC5B,QAAA,GAAG,EAAE;AACH,UAAA,UAAU,EAAE,IADT;AAEH,UAAA,KAAK,EAAE;AAFJ,SAxCuB;AA4C5B,QAAA,0BAA0B,EAAE;AAC1B,UAAA,KAAK,EAAE,OAAO,CAAC;AADW,SA5CA;AA+C5B,QAAA,iCAAiC,EAAE;AACjC,UAAA,KAAK,EAAE,IAD0B;AAEjC,UAAA,QAAQ,EAAE;AAFuB;AA/CP,OAA9B;;AAoDD;AAED;;;;;;;AAOG;;;AACH,IAAA,gBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,QAAZ,EAAoB;AAClB,UAAM,cAAc,GAAA,aAAA,CAAA,CAAI,IAAJ,CAAA,EAAQ,MAAA,CAAK,MAAM,CAAC,MAAP,CAAc,aAAd,CAAL,CAAR,CAApB;;AACA,UAAI,CAAC,cAAc,CAAC,QAAf,CAAwB,QAAxB,CAAL,EAAwC;AACtC;AACA,cAAM,CAAC,CAAC,aAAF,CAAgB,UAAhB,EAA4B,cAA5B,CAAN;AACD;;AACD,UAAI,KAAK,SAAL,KAAmB,QAAvB,EAAiC;AAC/B,aAAK,SAAL,GAAiB,QAAjB;;AACA,aAAK,YAAL,CAAkB,QAAlB;AACD;;AACD,aAAO,IAAP;AACD,KAXD;AAaA;;;AAGG;;;AACH,IAAA,gBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,SAAZ,EAAqB;AACnB,UAAI,KAAK,UAAL,KAAoB,SAAxB,EAAmC;AACjC,aAAK,UAAL,GAAkB,SAAlB;AACA,aAAK,IAAL,CAAU,KAAK,UAAL,GAAkB,SAAlB,GAA8B,UAAxC,EAAoD,IAApD;AACD;AACF,KALD;AAOA;;;AAGG;;;AACH,IAAA,gBAAA,CAAA,SAAA,CAAA,eAAA,GAAA,UAAgB,aAAhB,EAA6B;AAC3B,UAAI,KAAK,cAAL,KAAwB,aAA5B,EAA2C;AACzC,aAAK,cAAL,GAAsB,aAAtB;AACA,aAAK,IAAL,CAAU,aAAa,GAAG,aAAH,GAAmB,YAA1C,EAAwD,IAAxD;AACD;AACF,KALD;;AAOA,IAAA,gBAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,EAAP,EAAS;AACP,UAAM,MAAM,GAAG,MAAA,CAAA,SAAA,CAAM,MAAN,CAAY,IAAZ,CAAY,IAAZ,EAAa,EAAb,CAAf;;AACA,UAAI,KAAK,gBAAL,CAAsB,OAAtB,KAAkC,IAAtC,EAA4C;AAC1C;AACA;AACA;AACA,aAAK,gBAAL,CAAsB,OAAtB,GAAgC,IAAhC;;AACA,YAAI,KAAK,cAAT,EAAyB;AACvB,eAAK,cAAL,CAAoB,OAApB,GAA8B,IAA9B;AACD,SAPyC,CAS1C;AACA;AACA;;;AACA,YAAI,KAAK,SAAT,EAAoB;AAClB,eAAK,cAAL;AACD;AACF;;AACD,UAAI,KAAK,0BAAT,EAAqC;AACnC,aAAK,iCAAL,GAAyC,KAAK,iCAAL,IACpC,6BAA6B,CAAC,IAAD,CADlC;AAED;;AAED,aAAO,MAAP;AACD,KAxBD;;AA0BA,IAAA,gBAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,EAAP,EAAS;AACP,UAAM,MAAM,GAAG,MAAA,CAAA,SAAA,CAAM,MAAN,CAAY,IAAZ,CAAY,IAAZ,EAAa,EAAb,CAAf;;AACA,UAAI,KAAK,YAAL,CAAkB,IAAlB,KAA2B,CAA/B,EAAkC;AAChC;AACA;AACA;AACA;AACA;AACA,aAAK,gBAAL,CAAsB,OAAtB,GAAgC,KAAhC;;AACA,YAAI,KAAK,cAAT,EAAyB;AACvB,eAAK,cAAL,CAAoB,OAApB,GAA8B,KAA9B;AACD;;AAED,YAAI,KAAK,iCAAT,EAA4C;AAC1C;AACA,eAAK,iCAAL;;AACA,eAAK,iCAAL,GAAyC,IAAzC;AACD;AACF;;AACD,aAAO,MAAP;AACD,KApBD;;AAqBF,WAAA,gBAAA;AAAC,GAzKD,CAAsC,iBAAtC,CAAA;AA0KD;;AAED,SAAS,6BAAT,CAAuC,gBAAvC,EAAuD;AAC7C,MAAM,GAAG,GAAW,gBAAgB,CAA3B,IAAT;AAAA,MAAW,IAAI,GAAK,gBAAgB,CAArB,IAAf;;AAER,WAAS,mBAAT,CAA6B,SAA7B,EAAsC;AACpC,QAAI,CAAC,SAAL,EAAgB;AACd;AACD;;AACD,IAAA,gBAAgB,CAAC,YAAjB,CAA8B,OAA9B,CAAsC,UAAA,EAAA,EAAE;AACtC,UAAM,IAAI,GAAG,gBAAgB,CAAC,QAAjB,CAA0B,GAA1B,CAA8B,EAA9B,CAAb;;AACA,UAAM,qBAAqB,GAAG,EAAE,CAAC,MAAH,IAAa,IAAb,IAAqB,CAAC,IAAI,CAAC,mBAAL,EAApD;;AACA,UAAI,qBAAJ,EAA2B;AACzB,QAAA,GAAG,CAAC,IAAJ,CAAS,mCAAiC,IAAjC,GAAqC,WAA9C;AACA,QAAA,GAAG,CAAC,KAAJ,CAAU,UAAV,EAAsB,EAAtB;AACA,QAAA,GAAG,CAAC,KAAJ,CAAU,mBAAV,EAA+B,gBAA/B;AACA,QAAA,EAAE,CAAC,IAAH,GAAU,IAAV,CAAe,YAAA;AACb,UAAA,GAAG,CAAC,IAAJ,CAAS,+CAA6C,IAA7C,GAAiD,WAA1D;AACA,UAAA,GAAG,CAAC,KAAJ,CAAU,UAAV,EAAsB,EAAtB;AACA,UAAA,GAAG,CAAC,KAAJ,CAAU,mBAAV,EAA+B,gBAA/B;AACD,SAJD,EAIG,KAJH,CAIS,UAAA,GAAA,EAAG;AACV,UAAA,GAAG,CAAC,IAAJ,CAAS,+CAA6C,IAA7C,GAAiD,YAA1D,EAAwE;AAAE,YAAA,GAAG,EAAA,GAAL;AAAO,YAAA,EAAE,EAAA,EAAT;AAAW,YAAA,gBAAgB,EAAA;AAA3B,WAAxE;AACD,SAND;AAOD;AACF,KAfD;AAgBD,GAvBoD,CAyBrD;AACA;AACA;AACA;;;AACA,EAAA,yBAAyB,CAAC,kBAA1B,CAA6C,CAA7C,EAAgD,mBAAhD;AACA,SAAO,YAAA;AACL,IAAA,yBAAyB,CAAC,mBAA1B,CAA8C,CAA9C,EAAiD,mBAAjD;AACD,GAFD;AAGD;AAED;;;;;AAKG;;AAEH;;;;;AAKG;;AAEH;;;;;AAKG;;AAEH;;;;;AAKG;;AAEH;;;;;;;;AAQG;;;AAEH,MAAM,CAAC,OAAP,GAAiB,qBAAjB","sourceRoot":"","sourcesContent":["'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nvar _a = require('../../util/constants'), E = _a.typeErrors, trackPriority = _a.trackPriority;\nvar _b = require('@twilio/webrtc/lib/util'), guessBrowser = _b.guessBrowser, isIOSChrome = _b.isIOSChrome;\nvar documentVisibilityMonitor = require('../../util/documentvisibilitymonitor.js');\nfunction mixinRemoteMediaTrack(AudioOrVideoTrack) {\n    /**\n     * A {@link RemoteMediaTrack} represents a {@link MediaTrack} published to a\n     * {@link Room} by a {@link RemoteParticipant}.\n     * @property {boolean} isEnabled - Whether the {@link RemoteMediaTrack} is enabled\n     * @property {boolean} isSwitchedOff - Whether the {@link RemoteMediaTrack} is switched off\n     * @property {Track.SID} sid - The SID assigned to the {@link RemoteMediaTrack}\n     * @property {?Track.Priority} priority - The subscribe priority of the {@link RemoteMediaTrack}\n     * @emits RemoteMediaTrack#disabled\n     * @emits RemoteMediaTrack#enabled\n     * @emits RemoteMediaTrack#switchedOff\n     * @emits RemoteMediaTrack#switchedOn\n     */\n    return /** @class */ (function (_super) {\n        __extends(RemoteMediaTrack, _super);\n        /**\n         * Construct a {@link RemoteMediaTrack}.\n         * @param {Track.SID} sid\n         * @param {MediaTrackReceiver} mediaTrackReceiver\n         * @param {boolean} isEnabled\n          @param {boolean} isSwitchedOff\n         * @param {function(?Track.Priority): void} setPriority - Set or clear the subscribe\n         *  {@link Track.Priority} of the {@link RemoteMediaTrack}\n         * @param {function(ClientRenderHint): void} setRenderHint - Set render hints.\n         * @param {{log: Log, name: ?string}} options\n         */\n        function RemoteMediaTrack(sid, mediaTrackReceiver, isEnabled, isSwitchedOff, setPriority, setRenderHint, options) {\n            var _this = this;\n            options = Object.assign({\n                // NOTE(mpatwardhan): WebKit bug: 212780 sometimes causes the audio/video elements to stay paused when safari\n                // regains foreground. To workaround it, when safari gains foreground - we will play any elements that were\n                // playing before safari lost foreground.\n                workaroundWebKitBug212780: (guessBrowser() === 'safari' || isIOSChrome())\n                    && typeof document === 'object'\n                    && typeof document.addEventListener === 'function'\n                    && typeof document.visibilityState === 'string'\n            }, options);\n            _this = _super.call(this, mediaTrackReceiver, options) || this;\n            Object.defineProperties(_this, {\n                _isEnabled: {\n                    value: isEnabled,\n                    writable: true\n                },\n                _isSwitchedOff: {\n                    value: isSwitchedOff,\n                    writable: true\n                },\n                _priority: {\n                    value: null,\n                    writable: true\n                },\n                _setPriority: {\n                    value: setPriority\n                },\n                _setRenderHint: {\n                    value: function (renderHint) {\n                        _this._log.debug('updating render hint:', renderHint);\n                        setRenderHint(renderHint);\n                    }\n                },\n                isEnabled: {\n                    enumerable: true,\n                    get: function () {\n                        return this._isEnabled;\n                    }\n                },\n                isSwitchedOff: {\n                    enumerable: true,\n                    get: function () {\n                        return this._isSwitchedOff;\n                    }\n                },\n                priority: {\n                    enumerable: true,\n                    get: function () {\n                        return this._priority;\n                    }\n                },\n                sid: {\n                    enumerable: true,\n                    value: sid\n                },\n                _workaroundWebKitBug212780: {\n                    value: options.workaroundWebKitBug212780\n                },\n                _workaroundWebKitBug212780Cleanup: {\n                    value: null,\n                    writable: true\n                }\n            });\n            return _this;\n        }\n        /**\n         * Update the subscribe {@link Track.Priority} of the {@link RemoteMediaTrack}.\n         * @param {?Track.Priority} priority - the new subscribe {@link Track.Priority};\n         *   If <code>null</code>, then the subscribe {@link Track.Priority} is cleared, which\n         *   means the {@link Track.Priority} set by the publisher is now the effective priority.\n         * @returns {this}\n         * @throws {RangeError}\n         */\n        RemoteMediaTrack.prototype.setPriority = function (priority) {\n            var priorityValues = __spreadArray([null], __read(Object.values(trackPriority)));\n            if (!priorityValues.includes(priority)) {\n                // eslint-disable-next-line new-cap\n                throw E.INVALID_VALUE('priority', priorityValues);\n            }\n            if (this._priority !== priority) {\n                this._priority = priority;\n                this._setPriority(priority);\n            }\n            return this;\n        };\n        /**\n         * @private\n         * @param {boolean} isEnabled\n         */\n        RemoteMediaTrack.prototype._setEnabled = function (isEnabled) {\n            if (this._isEnabled !== isEnabled) {\n                this._isEnabled = isEnabled;\n                this.emit(this._isEnabled ? 'enabled' : 'disabled', this);\n            }\n        };\n        /**\n         * @private\n         * @param {boolean} isSwitchedOff\n         */\n        RemoteMediaTrack.prototype._setSwitchedOff = function (isSwitchedOff) {\n            if (this._isSwitchedOff !== isSwitchedOff) {\n                this._isSwitchedOff = isSwitchedOff;\n                this.emit(isSwitchedOff ? 'switchedOff' : 'switchedOn', this);\n            }\n        };\n        RemoteMediaTrack.prototype.attach = function (el) {\n            var result = _super.prototype.attach.call(this, el);\n            if (this.mediaStreamTrack.enabled !== true) {\n                // NOTE(mpatwardhan): we disable mediaStreamTrack when there\n                // are no attachments to it (see notes below). Now that there\n                // are attachments re-enable the track.\n                this.mediaStreamTrack.enabled = true;\n                if (this.processedTrack) {\n                    this.processedTrack.enabled = true;\n                }\n                // NOTE(csantos): since remote tracks disables/enables the mediaStreamTrack,\n                // captureFrames stops along with it. We need to start it again after re-enabling.\n                // See attach/detach methods in this class and in VideoTrack class.\n                if (this.processor) {\n                    this._captureFrames();\n                }\n            }\n            if (this._workaroundWebKitBug212780) {\n                this._workaroundWebKitBug212780Cleanup = this._workaroundWebKitBug212780Cleanup\n                    || playIfPausedWhileInBackground(this);\n            }\n            return result;\n        };\n        RemoteMediaTrack.prototype.detach = function (el) {\n            var result = _super.prototype.detach.call(this, el);\n            if (this._attachments.size === 0) {\n                // NOTE(mpatwardhan): chrome continues playing webrtc audio\n                // track even after audio element is removed from the DOM.\n                // https://bugs.chromium.org/p/chromium/issues/detail?id=749928\n                // to workaround: here disable the track when\n                // there are no elements attached to it.\n                this.mediaStreamTrack.enabled = false;\n                if (this.processedTrack) {\n                    this.processedTrack.enabled = false;\n                }\n                if (this._workaroundWebKitBug212780Cleanup) {\n                    // unhook visibility change\n                    this._workaroundWebKitBug212780Cleanup();\n                    this._workaroundWebKitBug212780Cleanup = null;\n                }\n            }\n            return result;\n        };\n        return RemoteMediaTrack;\n    }(AudioOrVideoTrack));\n}\nfunction playIfPausedWhileInBackground(remoteMediaTrack) {\n    var log = remoteMediaTrack._log, kind = remoteMediaTrack.kind;\n    function onVisibilityChanged(isVisible) {\n        if (!isVisible) {\n            return;\n        }\n        remoteMediaTrack._attachments.forEach(function (el) {\n            var shim = remoteMediaTrack._elShims.get(el);\n            var isInadvertentlyPaused = el.paused && shim && !shim.pausedIntentionally();\n            if (isInadvertentlyPaused) {\n                log.info(\"Playing inadvertently paused <\" + kind + \"> element\");\n                log.debug('Element:', el);\n                log.debug('RemoteMediaTrack:', remoteMediaTrack);\n                el.play().then(function () {\n                    log.info(\"Successfully played inadvertently paused <\" + kind + \"> element\");\n                    log.debug('Element:', el);\n                    log.debug('RemoteMediaTrack:', remoteMediaTrack);\n                }).catch(function (err) {\n                    log.warn(\"Error while playing inadvertently paused <\" + kind + \"> element:\", { err: err, el: el, remoteMediaTrack: remoteMediaTrack });\n                });\n            }\n        });\n    }\n    // NOTE(mpatwardhan): listen for document visibility callback on phase 2.\n    // this ensures that any LocalMediaTrack's restart (which listen on phase 1) gets executed\n    // first. This order is important because we `play` tracks in the callback, and\n    // play can fail on safari if audio is not being captured.\n    documentVisibilityMonitor.onVisibilityChange(2, onVisibilityChanged);\n    return function () {\n        documentVisibilityMonitor.offVisibilityChange(2, onVisibilityChanged);\n    };\n}\n/**\n * A {@link RemoteMediaTrack} was disabled.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   disabled\n * @event RemoteMediaTrack#disabled\n */\n/**\n * A {@link RemoteMediaTrack} was enabled.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   enabled\n * @event RemoteMediaTrack#enabled\n */\n/**\n * A {@link RemoteMediaTrack} was switched off.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   switched off\n * @event RemoteMediaTrack#switchedOff\n */\n/**\n * A {@link RemoteMediaTrack} was switched on.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   switched on\n * @event RemoteMediaTrack#switchedOn\n */\n/**\n * A {@link ClientRenderHint} object specifies track dimensions and /enabled disable state.\n * This state will be used by the server(SFU) to determine bandwidth allocation for the track,\n * and turn it on or off as needed.\n * @typedef {object} ClientRenderHint\n * @property {boolean} [enabled] - track is enabled or disabled. defaults to disabled.\n * @property {VideoTrack.Dimensions} [renderDimensions] - Optional parameter to specify the desired\n *   render dimensions of {@link RemoteVideoTrack}s. This property must be specified if enabled=true\n */\nmodule.exports = mixinRemoteMediaTrack;\n//# sourceMappingURL=remotemediatrack.js.map"]},"metadata":{},"sourceType":"script"}