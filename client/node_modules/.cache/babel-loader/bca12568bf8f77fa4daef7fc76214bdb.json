{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar DEFAULT_VIDEO_PROCESSOR_STATS_INTERVAL_MS = require('../../util/constants').DEFAULT_VIDEO_PROCESSOR_STATS_INTERVAL_MS;\n/**\n * VideoProcessorEventObserver listens to {@link VideoProcessor} related events\n * and re-emits them as a generic event with some additional information.\n * @extends EventEmitter\n * @emits VideoProcessorEventObserver#event\n */\n\n\nvar VideoProcessorEventObserver = function (_super) {\n  __extends(VideoProcessorEventObserver, _super);\n  /**\n   * Constructor.\n   * @param {Log} log\n   */\n\n\n  function VideoProcessorEventObserver(log) {\n    var _this = _super.call(this) || this;\n\n    Object.defineProperties(_this, {\n      _lastStatsSaveTime: {\n        value: null,\n        writable: true\n      },\n      _lastStatsPublishTime: {\n        value: null,\n        writable: true\n      },\n      _log: {\n        value: log\n      },\n      _processorInfo: {\n        value: null,\n        writable: true\n      },\n      _stats: {\n        value: null,\n        writable: true\n      }\n    });\n\n    _this.on('add', function (info) {\n      _this._lastStatsSaveTime = Date.now();\n      _this._lastStatsPublishTime = Date.now();\n      _this._processorInfo = info;\n      _this._stats = [];\n\n      _this._reemitEvent('add', _this._getEventData());\n    });\n\n    _this.on('remove', function () {\n      var data = _this._getEventData();\n\n      _this._lastStatsSaveTime = null;\n      _this._lastStatsPublishTime = null;\n      _this._processorInfo = null;\n      _this._stats = null;\n\n      _this._reemitEvent('remove', data);\n    });\n\n    _this.on('start', function () {\n      _this._reemitEvent('start', _this._getEventData());\n    });\n\n    _this.on('stop', function (message) {\n      _this._reemitEvent('stop', Object.assign({\n        message: message\n      }, _this._getEventData()));\n    });\n\n    _this.on('stats', function () {\n      return _this._maybeEmitStats();\n    });\n\n    return _this;\n  }\n  /**\n   * @private\n   */\n\n\n  VideoProcessorEventObserver.prototype._getEventData = function () {\n    if (!this._processorInfo) {\n      return {};\n    }\n\n    var _a = this._processorInfo,\n        processor = _a.processor,\n        captureHeight = _a.captureHeight,\n        captureWidth = _a.captureWidth,\n        inputFrameRate = _a.inputFrameRate,\n        isRemoteVideoTrack = _a.isRemoteVideoTrack;\n    var data = {\n      captureHeight: captureHeight,\n      captureWidth: captureWidth,\n      inputFrameRate: inputFrameRate,\n      isRemoteVideoTrack: isRemoteVideoTrack\n    };\n    data.name = processor._name || 'VideoProcessor';\n    ['assetsPath', 'blurFilterRadius', 'fitType', 'isSimdEnabled', 'maskBlurRadius', 'version'].forEach(function (prop) {\n      var val = processor[\"_\" + prop];\n\n      if (typeof val !== 'undefined') {\n        data[prop] = val;\n      }\n    });\n    Object.keys(data).forEach(function (prop) {\n      var val = data[prop];\n\n      if (typeof val === 'boolean') {\n        data[prop] = val ? 'true' : 'false';\n      }\n    });\n    return data;\n  };\n  /**\n   * Save stats every second. If a specific time interval has elapsed,\n   * the stats event will be emitted\n   * @private\n   */\n\n\n  VideoProcessorEventObserver.prototype._maybeEmitStats = function () {\n    if (!this._stats || !this._processorInfo) {\n      return;\n    }\n\n    var benchmark = this._processorInfo.processor._benchmark;\n\n    if (!benchmark) {\n      return;\n    }\n\n    var now = Date.now();\n\n    if (now - this._lastStatsSaveTime < 1000) {\n      return;\n    }\n\n    var entry = {\n      outputFrameRate: benchmark.getRate('totalProcessingDelay')\n    };\n    ['captureFrameDelay', 'imageCompositionDelay', 'inputImageResizeDelay', 'processFrameDelay', 'segmentationDelay'].forEach(function (name) {\n      entry[name] = benchmark.getAverageDelay(name);\n    });\n    this._lastStatsSaveTime = now;\n\n    this._stats.push(entry);\n\n    if (now - this._lastStatsPublishTime < DEFAULT_VIDEO_PROCESSOR_STATS_INTERVAL_MS) {\n      return;\n    }\n\n    this._lastStatsPublishTime = now;\n\n    var stats = this._stats.splice(0);\n\n    var averages = stats.reduce(function (averages, current, n) {\n      Object.keys(entry).forEach(function (name) {\n        if (!averages[name]) {\n          averages[name] = 0;\n        }\n\n        averages[name] = (averages[name] * n + current[name]) / (n + 1);\n      });\n      return averages;\n    }, {});\n    Object.keys(averages).forEach(function (name) {\n      averages[name] = parseFloat(averages[name].toFixed(2));\n    });\n\n    this._reemitEvent('stats', Object.assign({}, averages, this._getEventData()));\n  };\n  /**\n   * @private\n   */\n\n\n  VideoProcessorEventObserver.prototype._reemitEvent = function (name, data) {\n    this._log.debug(\"VideoProcessor:\" + name, data);\n\n    this.emit('event', {\n      name: name,\n      data: data\n    });\n  };\n\n  return VideoProcessorEventObserver;\n}(EventEmitter);\n\nmodule.exports = VideoProcessorEventObserver;","map":{"version":3,"sources":["../../../lib/media/track/videoprocessoreventobserver.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar EventEmitter = require('events').EventEmitter;\nvar DEFAULT_VIDEO_PROCESSOR_STATS_INTERVAL_MS = require('../../util/constants').DEFAULT_VIDEO_PROCESSOR_STATS_INTERVAL_MS;\n/**\n * VideoProcessorEventObserver listens to {@link VideoProcessor} related events\n * and re-emits them as a generic event with some additional information.\n * @extends EventEmitter\n * @emits VideoProcessorEventObserver#event\n */\nvar VideoProcessorEventObserver = /** @class */ (function (_super) {\n    __extends(VideoProcessorEventObserver, _super);\n    /**\n     * Constructor.\n     * @param {Log} log\n     */\n    function VideoProcessorEventObserver(log) {\n        var _this = _super.call(this) || this;\n        Object.defineProperties(_this, {\n            _lastStatsSaveTime: {\n                value: null,\n                writable: true\n            },\n            _lastStatsPublishTime: {\n                value: null,\n                writable: true\n            },\n            _log: {\n                value: log\n            },\n            _processorInfo: {\n                value: null,\n                writable: true\n            },\n            _stats: {\n                value: null,\n                writable: true\n            }\n        });\n        _this.on('add', function (info) {\n            _this._lastStatsSaveTime = Date.now();\n            _this._lastStatsPublishTime = Date.now();\n            _this._processorInfo = info;\n            _this._stats = [];\n            _this._reemitEvent('add', _this._getEventData());\n        });\n        _this.on('remove', function () {\n            var data = _this._getEventData();\n            _this._lastStatsSaveTime = null;\n            _this._lastStatsPublishTime = null;\n            _this._processorInfo = null;\n            _this._stats = null;\n            _this._reemitEvent('remove', data);\n        });\n        _this.on('start', function () {\n            _this._reemitEvent('start', _this._getEventData());\n        });\n        _this.on('stop', function (message) {\n            _this._reemitEvent('stop', Object.assign({ message: message }, _this._getEventData()));\n        });\n        _this.on('stats', function () { return _this._maybeEmitStats(); });\n        return _this;\n    }\n    /**\n     * @private\n     */\n    VideoProcessorEventObserver.prototype._getEventData = function () {\n        if (!this._processorInfo) {\n            return {};\n        }\n        var _a = this._processorInfo, processor = _a.processor, captureHeight = _a.captureHeight, captureWidth = _a.captureWidth, inputFrameRate = _a.inputFrameRate, isRemoteVideoTrack = _a.isRemoteVideoTrack;\n        var data = { captureHeight: captureHeight, captureWidth: captureWidth, inputFrameRate: inputFrameRate, isRemoteVideoTrack: isRemoteVideoTrack };\n        data.name = processor._name || 'VideoProcessor';\n        ['assetsPath', 'blurFilterRadius', 'fitType', 'isSimdEnabled', 'maskBlurRadius', 'version'].forEach(function (prop) {\n            var val = processor[\"_\" + prop];\n            if (typeof val !== 'undefined') {\n                data[prop] = val;\n            }\n        });\n        Object.keys(data).forEach(function (prop) {\n            var val = data[prop];\n            if (typeof val === 'boolean') {\n                data[prop] = val ? 'true' : 'false';\n            }\n        });\n        return data;\n    };\n    /**\n     * Save stats every second. If a specific time interval has elapsed,\n     * the stats event will be emitted\n     * @private\n     */\n    VideoProcessorEventObserver.prototype._maybeEmitStats = function () {\n        if (!this._stats || !this._processorInfo) {\n            return;\n        }\n        var benchmark = this._processorInfo.processor._benchmark;\n        if (!benchmark) {\n            return;\n        }\n        var now = Date.now();\n        if (now - this._lastStatsSaveTime < 1000) {\n            return;\n        }\n        var entry = { outputFrameRate: benchmark.getRate('totalProcessingDelay') };\n        ['captureFrameDelay', 'imageCompositionDelay', 'inputImageResizeDelay', 'processFrameDelay', 'segmentationDelay'].forEach(function (name) {\n            entry[name] = benchmark.getAverageDelay(name);\n        });\n        this._lastStatsSaveTime = now;\n        this._stats.push(entry);\n        if (now - this._lastStatsPublishTime < DEFAULT_VIDEO_PROCESSOR_STATS_INTERVAL_MS) {\n            return;\n        }\n        this._lastStatsPublishTime = now;\n        var stats = this._stats.splice(0);\n        var averages = stats.reduce(function (averages, current, n) {\n            Object.keys(entry).forEach(function (name) {\n                if (!averages[name]) {\n                    averages[name] = 0;\n                }\n                averages[name] = ((averages[name] * n) + current[name]) / (n + 1);\n            });\n            return averages;\n        }, {});\n        Object.keys(averages).forEach(function (name) {\n            averages[name] = parseFloat(averages[name].toFixed(2));\n        });\n        this._reemitEvent('stats', Object.assign({}, averages, this._getEventData()));\n    };\n    /**\n     * @private\n     */\n    VideoProcessorEventObserver.prototype._reemitEvent = function (name, data) {\n        this._log.debug(\"VideoProcessor:\" + name, data);\n        this.emit('event', { name: name, data: data });\n    };\n    return VideoProcessorEventObserver;\n}(EventEmitter));\nmodule.exports = VideoProcessorEventObserver;\n//# sourceMappingURL=videoprocessoreventobserver.js.map"]},"metadata":{},"sourceType":"script"}