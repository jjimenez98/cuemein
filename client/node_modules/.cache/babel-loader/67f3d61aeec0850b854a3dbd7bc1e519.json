{"ast":null,"code":"'use strict';\n/**\n * @property {number} [availableSend] - bps (undefined in Firefox)\n * @property {number} recv - bps\n * @property {number} [rtt] - s (undefined in Firefox)\n * @property {number} send - bps\n */\n\nvar IceReport = function () {\n  /**\n   * Construct an {@link IceReport}.\n   * @param {number} send - bps\n   * @param {number} recv - bps\n   * @param {number} [rtt] - s\n   * @param {number} [availableSend] - bps\n   */\n  function IceReport(send, recv, availableSend, rtt) {\n    Object.defineProperties(this, {\n      availableSend: {\n        enumerable: true,\n        value: availableSend\n      },\n      recv: {\n        enumerable: true,\n        value: recv\n      },\n      rtt: {\n        enumerable: true,\n        value: rtt\n      },\n      send: {\n        enumerable: true,\n        value: send\n      }\n    });\n  }\n  /**\n   * @param {RTCStats} olderStats\n   * @param {RTCStats} newerStats\n   * @returns {IceReport}\n   */\n\n\n  IceReport.of = function (olderStats, newerStats) {\n    var secondsElapsed = (newerStats.timestamp - olderStats.timestamp) / 1000;\n    var deltaBytesSent = newerStats.bytesSent - olderStats.bytesSent;\n    var deltaBytesReceived = newerStats.bytesReceived - olderStats.bytesReceived;\n    var send = secondsElapsed > 0 ? deltaBytesSent / secondsElapsed * 8 : 0;\n    var recv = secondsElapsed > 0 ? deltaBytesReceived / secondsElapsed * 8 : 0;\n    var availableSend = newerStats.availableOutgoingBitrate,\n        rtt = newerStats.currentRoundTripTime;\n    return new IceReport(send, recv, availableSend, rtt);\n  };\n\n  return IceReport;\n}();\n\nmodule.exports = IceReport;","map":{"version":3,"sources":["../../lib/stats/icereport.js"],"names":[],"mappings":"AAAA;AAEA;;;;;AAKG;;AACH,IAAA,SAAA,GAAA,YAAA;AACE;;;;;;AAMG;AACH,WAAA,SAAA,CAAY,IAAZ,EAAkB,IAAlB,EAAwB,aAAxB,EAAuC,GAAvC,EAA0C;AACxC,IAAA,MAAM,CAAC,gBAAP,CAAwB,IAAxB,EAA8B;AAC5B,MAAA,aAAa,EAAE;AACb,QAAA,UAAU,EAAE,IADC;AAEb,QAAA,KAAK,EAAE;AAFM,OADa;AAK5B,MAAA,IAAI,EAAE;AACJ,QAAA,UAAU,EAAE,IADR;AAEJ,QAAA,KAAK,EAAE;AAFH,OALsB;AAS5B,MAAA,GAAG,EAAE;AACH,QAAA,UAAU,EAAE,IADT;AAEH,QAAA,KAAK,EAAE;AAFJ,OATuB;AAa5B,MAAA,IAAI,EAAE;AACJ,QAAA,UAAU,EAAE,IADR;AAEJ,QAAA,KAAK,EAAE;AAFH;AAbsB,KAA9B;AAkBD;AAED;;;;AAIG;;;AACI,EAAA,SAAA,CAAA,EAAA,GAAP,UAAU,UAAV,EAAsB,UAAtB,EAAgC;AAC9B,QAAM,cAAc,GAAG,CAAC,UAAU,CAAC,SAAX,GAAuB,UAAU,CAAC,SAAnC,IAAgD,IAAvE;AACA,QAAM,cAAc,GAAG,UAAU,CAAC,SAAX,GAAuB,UAAU,CAAC,SAAzD;AACA,QAAM,kBAAkB,GAAG,UAAU,CAAC,aAAX,GAA2B,UAAU,CAAC,aAAjE;AACA,QAAM,IAAI,GAAG,cAAc,GAAG,CAAjB,GACR,cAAc,GAAG,cAAlB,GAAoC,CAD3B,GAET,CAFJ;AAGA,QAAM,IAAI,GAAG,cAAc,GAAG,CAAjB,GACR,kBAAkB,GAAG,cAAtB,GAAwC,CAD/B,GAET,CAFJ;AAGQ,QAA0B,aAAa,GAAgC,UAAU,CAA1C,wBAAvC;AAAA,QAA+D,GAAG,GAAK,UAAU,CAAf,oBAAlE;AACR,WAAO,IAAI,SAAJ,CAAc,IAAd,EAAoB,IAApB,EAA0B,aAA1B,EAAyC,GAAzC,CAAP;AACD,GAZM;;AAaT,SAAA,SAAA;AAAC,CA/CD,EAAA;;AAiDA,MAAM,CAAC,OAAP,GAAiB,SAAjB","sourceRoot":"","sourcesContent":["'use strict';\n/**\n * @property {number} [availableSend] - bps (undefined in Firefox)\n * @property {number} recv - bps\n * @property {number} [rtt] - s (undefined in Firefox)\n * @property {number} send - bps\n */\nvar IceReport = /** @class */ (function () {\n    /**\n     * Construct an {@link IceReport}.\n     * @param {number} send - bps\n     * @param {number} recv - bps\n     * @param {number} [rtt] - s\n     * @param {number} [availableSend] - bps\n     */\n    function IceReport(send, recv, availableSend, rtt) {\n        Object.defineProperties(this, {\n            availableSend: {\n                enumerable: true,\n                value: availableSend\n            },\n            recv: {\n                enumerable: true,\n                value: recv\n            },\n            rtt: {\n                enumerable: true,\n                value: rtt\n            },\n            send: {\n                enumerable: true,\n                value: send\n            }\n        });\n    }\n    /**\n     * @param {RTCStats} olderStats\n     * @param {RTCStats} newerStats\n     * @returns {IceReport}\n     */\n    IceReport.of = function (olderStats, newerStats) {\n        var secondsElapsed = (newerStats.timestamp - olderStats.timestamp) / 1000;\n        var deltaBytesSent = newerStats.bytesSent - olderStats.bytesSent;\n        var deltaBytesReceived = newerStats.bytesReceived - olderStats.bytesReceived;\n        var send = secondsElapsed > 0\n            ? (deltaBytesSent / secondsElapsed) * 8\n            : 0;\n        var recv = secondsElapsed > 0\n            ? (deltaBytesReceived / secondsElapsed) * 8\n            : 0;\n        var availableSend = newerStats.availableOutgoingBitrate, rtt = newerStats.currentRoundTripTime;\n        return new IceReport(send, recv, availableSend, rtt);\n    };\n    return IceReport;\n}());\nmodule.exports = IceReport;\n//# sourceMappingURL=icereport.js.map"]},"metadata":{},"sourceType":"script"}