{"ast":null,"code":"'use strict';\n\nvar defaultCreateLocalTracks = require('./createlocaltracks');\n\nvar _a = require('./util/constants'),\n    DEFAULT_LOG_LEVEL = _a.DEFAULT_LOG_LEVEL,\n    DEFAULT_LOGGER_NAME = _a.DEFAULT_LOGGER_NAME;\n/**\n * Request a {@link LocalAudioTrack} or {@link LocalVideoTrack}.\n * @param {Track.Kind} kind - \"audio\" or \"video\"\n * @param {CreateLocalTrackOptions} [options]\n * @returns {Promise<LocalAudioTrack|LocalVideoTrack>}\n * @private\n */\n\n\nfunction createLocalTrack(kind, options) {\n  options = Object.assign({\n    createLocalTracks: defaultCreateLocalTracks,\n    loggerName: DEFAULT_LOGGER_NAME,\n    logLevel: DEFAULT_LOG_LEVEL\n  }, options);\n  var createOptions = {};\n  createOptions.loggerName = options.loggerName;\n  createOptions.logLevel = options.logLevel;\n  delete options.loggerName;\n  delete options.logLevel;\n  var createLocalTracks = options.createLocalTracks;\n  delete options.createLocalTracks;\n  createOptions[kind] = Object.keys(options).length > 0 ? options : true;\n  return createLocalTracks(createOptions).then(function (localTracks) {\n    return localTracks[0];\n  });\n}\n/**\n * Request a {@link LocalAudioTrack}.\n * @alias module:twilio-video.createLocalAudioTrack\n * @param {CreateLocalTrackOptions} [options] - Options for requesting a {@link LocalAudioTrack}\n * @returns {Promise<LocalAudioTrack>}\n * @example\n * var Video = require('twilio-video');\n *\n * // Connect to the Room with just video\n * Video.connect('my-token', {\n *   name: 'my-cool-room',\n *   video: true\n * }).then(function(room) {\n *   // Add audio after connecting to the Room\n *   Video.createLocalAudioTrack().then(function(localTrack) {\n *     room.localParticipant.publishTrack(localTrack);\n *   });\n * });\n * @example\n * var Video = require('twilio-video');\n *\n * // Request the default LocalAudioTrack with a custom name\n * Video.createLocalAudioTrack({ name: 'microphone' }).then(function(localTrack) {\n *   console.log(localTrack.name); // 'microphone'\n * });\n */\n\n\nfunction createLocalAudioTrack(options) {\n  return createLocalTrack('audio', options);\n}\n/**\n * Request a {@link LocalVideoTrack}. Note that on mobile browsers,\n * the camera can be reserved by only one {@link LocalVideoTrack} at any given\n * time. If you attempt to create a second {@link LocalVideoTrack}, video frames\n * will no longer be supplied to the first {@link LocalVideoTrack}.\n * @alias module:twilio-video.createLocalVideoTrack\n * @param {CreateLocalTrackOptions} [options] - Options for requesting a {@link LocalVideoTrack}\n * @returns {Promise<LocalVideoTrack>}\n * @example\n * var Video = require('twilio-video');\n *\n * // Connect to the Room with just audio\n * Video.connect('my-token', {\n *   name: 'my-cool-room',\n *   audio: true\n * }).then(function(room) {\n *   // Add video after connecting to the Room\n *   Video.createLocalVideoTrack().then(function(localTrack) {\n *     room.localParticipant.publishTrack(localTrack);\n *   });\n * });\n * @example\n * var Video = require('twilio-video');\n *\n * // Request the default LocalVideoTrack with a custom name\n * Video.createLocalVideoTrack({ name: 'camera' }).then(function(localTrack) {\n *   console.log(localTrack.name); // 'camera'\n * });\n */\n\n\nfunction createLocalVideoTrack(options) {\n  return createLocalTrack('video', options);\n}\n/**\n * Create {@link LocalTrack} options. Apart from the properties listed here, you can\n * also specify any of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints\" target=\"_blank\">MediaTrackConstraints</a>\n * properties.\n * @typedef {MediaTrackConstraints} CreateLocalTrackOptions\n * @property {LogLevel|LogLevels} [logLevel='warn'] - <code>(deprecated: use [Video.Logger](module-twilio-video.html) instead.\n *   See [examples](module-twilio-video.html#.connect) for details)</code>\n *   Set the default log verbosity\n *   of logging. Passing a {@link LogLevel} string will use the same\n *   level for all components. Pass a {@link LogLevels} to set specific log\n *   levels.\n * @property {string} [loggerName='twilio-video'] - The name of the logger. Use this name when accessing the logger used by the SDK.\n *   See [examples](module-twilio-video.html#.connect) for details.\n * @property {string} [name] - The {@link LocalTrack}'s name; by default,\n *   it is set to the {@link LocalTrack}'s ID.\n * @property {boolean} [workaroundWebKitBug180748=false] - Only valid for\n *   {@link LocalAudioTrack}s; setting this attempts to workaround WebKit Bug\n *   180748, where, in Safari, getUserMedia may return a silent audio\n *   MediaStreamTrack.\n */\n\n\nmodule.exports = {\n  audio: createLocalAudioTrack,\n  video: createLocalVideoTrack\n};","map":{"version":3,"sources":["../lib/createlocaltrack.js"],"names":[],"mappings":"AAAA;;AAEA,IAAM,wBAAwB,GAAG,OAAO,CAAC,qBAAD,CAAxC;;AACM,IAAA,EAAA,GAA6C,OAAO,CAAC,kBAAD,CAApD;AAAA,IAAE,iBAAiB,GAAA,EAAA,CAAA,iBAAnB;AAAA,IAAqB,mBAAmB,GAAA,EAAA,CAAA,mBAAxC;AAEN;;;;;;AAMG;;;AACH,SAAS,gBAAT,CAA0B,IAA1B,EAAgC,OAAhC,EAAuC;AACrC,EAAA,OAAO,GAAG,MAAM,CAAC,MAAP,CAAc;AACtB,IAAA,iBAAiB,EAAE,wBADG;AAEtB,IAAA,UAAU,EAAE,mBAFU;AAGtB,IAAA,QAAQ,EAAE;AAHY,GAAd,EAIP,OAJO,CAAV;AAMA,MAAM,aAAa,GAAG,EAAtB;AACA,EAAA,aAAa,CAAC,UAAd,GAA2B,OAAO,CAAC,UAAnC;AACA,EAAA,aAAa,CAAC,QAAd,GAAyB,OAAO,CAAC,QAAjC;AACA,SAAO,OAAO,CAAC,UAAf;AACA,SAAO,OAAO,CAAC,QAAf;AAEA,MAAM,iBAAiB,GAAG,OAAO,CAAC,iBAAlC;AACA,SAAO,OAAO,CAAC,iBAAf;AACA,EAAA,aAAa,CAAC,IAAD,CAAb,GAAsB,MAAM,CAAC,IAAP,CAAY,OAAZ,EAAqB,MAArB,GAA8B,CAA9B,GAAkC,OAAlC,GAA4C,IAAlE;AAEA,SAAO,iBAAiB,CAAC,aAAD,CAAjB,CAAiC,IAAjC,CAAsC,UAAA,WAAA,EAAW;AAAI,WAAA,WAAW,CAAX,CAAW,CAAX;AAAc,GAAnE,CAAP;AACD;AAED;;;;;;;;;;;;;;;;;;;;;;;;;AAyBG;;;AACH,SAAS,qBAAT,CAA+B,OAA/B,EAAsC;AACpC,SAAO,gBAAgB,CAAC,OAAD,EAAU,OAAV,CAAvB;AACD;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BG;;;AACH,SAAS,qBAAT,CAA+B,OAA/B,EAAsC;AACpC,SAAO,gBAAgB,CAAC,OAAD,EAAU,OAAV,CAAvB;AACD;AAED;;;;;;;;;;;;;;;;;;;AAmBG;;;AAEH,MAAM,CAAC,OAAP,GAAiB;AACf,EAAA,KAAK,EAAE,qBADQ;AAEf,EAAA,KAAK,EAAE;AAFQ,CAAjB","sourceRoot":"","sourcesContent":["'use strict';\nvar defaultCreateLocalTracks = require('./createlocaltracks');\nvar _a = require('./util/constants'), DEFAULT_LOG_LEVEL = _a.DEFAULT_LOG_LEVEL, DEFAULT_LOGGER_NAME = _a.DEFAULT_LOGGER_NAME;\n/**\n * Request a {@link LocalAudioTrack} or {@link LocalVideoTrack}.\n * @param {Track.Kind} kind - \"audio\" or \"video\"\n * @param {CreateLocalTrackOptions} [options]\n * @returns {Promise<LocalAudioTrack|LocalVideoTrack>}\n * @private\n */\nfunction createLocalTrack(kind, options) {\n    options = Object.assign({\n        createLocalTracks: defaultCreateLocalTracks,\n        loggerName: DEFAULT_LOGGER_NAME,\n        logLevel: DEFAULT_LOG_LEVEL,\n    }, options);\n    var createOptions = {};\n    createOptions.loggerName = options.loggerName;\n    createOptions.logLevel = options.logLevel;\n    delete options.loggerName;\n    delete options.logLevel;\n    var createLocalTracks = options.createLocalTracks;\n    delete options.createLocalTracks;\n    createOptions[kind] = Object.keys(options).length > 0 ? options : true;\n    return createLocalTracks(createOptions).then(function (localTracks) { return localTracks[0]; });\n}\n/**\n * Request a {@link LocalAudioTrack}.\n * @alias module:twilio-video.createLocalAudioTrack\n * @param {CreateLocalTrackOptions} [options] - Options for requesting a {@link LocalAudioTrack}\n * @returns {Promise<LocalAudioTrack>}\n * @example\n * var Video = require('twilio-video');\n *\n * // Connect to the Room with just video\n * Video.connect('my-token', {\n *   name: 'my-cool-room',\n *   video: true\n * }).then(function(room) {\n *   // Add audio after connecting to the Room\n *   Video.createLocalAudioTrack().then(function(localTrack) {\n *     room.localParticipant.publishTrack(localTrack);\n *   });\n * });\n * @example\n * var Video = require('twilio-video');\n *\n * // Request the default LocalAudioTrack with a custom name\n * Video.createLocalAudioTrack({ name: 'microphone' }).then(function(localTrack) {\n *   console.log(localTrack.name); // 'microphone'\n * });\n */\nfunction createLocalAudioTrack(options) {\n    return createLocalTrack('audio', options);\n}\n/**\n * Request a {@link LocalVideoTrack}. Note that on mobile browsers,\n * the camera can be reserved by only one {@link LocalVideoTrack} at any given\n * time. If you attempt to create a second {@link LocalVideoTrack}, video frames\n * will no longer be supplied to the first {@link LocalVideoTrack}.\n * @alias module:twilio-video.createLocalVideoTrack\n * @param {CreateLocalTrackOptions} [options] - Options for requesting a {@link LocalVideoTrack}\n * @returns {Promise<LocalVideoTrack>}\n * @example\n * var Video = require('twilio-video');\n *\n * // Connect to the Room with just audio\n * Video.connect('my-token', {\n *   name: 'my-cool-room',\n *   audio: true\n * }).then(function(room) {\n *   // Add video after connecting to the Room\n *   Video.createLocalVideoTrack().then(function(localTrack) {\n *     room.localParticipant.publishTrack(localTrack);\n *   });\n * });\n * @example\n * var Video = require('twilio-video');\n *\n * // Request the default LocalVideoTrack with a custom name\n * Video.createLocalVideoTrack({ name: 'camera' }).then(function(localTrack) {\n *   console.log(localTrack.name); // 'camera'\n * });\n */\nfunction createLocalVideoTrack(options) {\n    return createLocalTrack('video', options);\n}\n/**\n * Create {@link LocalTrack} options. Apart from the properties listed here, you can\n * also specify any of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints\" target=\"_blank\">MediaTrackConstraints</a>\n * properties.\n * @typedef {MediaTrackConstraints} CreateLocalTrackOptions\n * @property {LogLevel|LogLevels} [logLevel='warn'] - <code>(deprecated: use [Video.Logger](module-twilio-video.html) instead.\n *   See [examples](module-twilio-video.html#.connect) for details)</code>\n *   Set the default log verbosity\n *   of logging. Passing a {@link LogLevel} string will use the same\n *   level for all components. Pass a {@link LogLevels} to set specific log\n *   levels.\n * @property {string} [loggerName='twilio-video'] - The name of the logger. Use this name when accessing the logger used by the SDK.\n *   See [examples](module-twilio-video.html#.connect) for details.\n * @property {string} [name] - The {@link LocalTrack}'s name; by default,\n *   it is set to the {@link LocalTrack}'s ID.\n * @property {boolean} [workaroundWebKitBug180748=false] - Only valid for\n *   {@link LocalAudioTrack}s; setting this attempts to workaround WebKit Bug\n *   180748, where, in Safari, getUserMedia may return a silent audio\n *   MediaStreamTrack.\n */\nmodule.exports = {\n    audio: createLocalAudioTrack,\n    video: createLocalVideoTrack\n};\n//# sourceMappingURL=createlocaltrack.js.map"]},"metadata":{},"sourceType":"script"}