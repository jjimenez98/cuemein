{"ast":null,"code":"'use strict';\n\nvar _a = require('@twilio/webrtc/lib/util'),\n    guessBrowser = _a.guessBrowser,\n    isWebRTCSupported = _a.support;\n\nvar _b = require('./browserdetection'),\n    isAndroid = _b.isAndroid,\n    isMobile = _b.isMobile,\n    isNonChromiumEdge = _b.isNonChromiumEdge,\n    rebrandedChromeBrowser = _b.rebrandedChromeBrowser,\n    mobileWebKitBrowser = _b.mobileWebKitBrowser;\n\nvar SUPPORTED_CHROME_BASED_BROWSERS = ['crios', 'edg', 'edge', 'electron', 'headlesschrome'];\nvar SUPPORTED_ANDROID_BROWSERS = ['chrome', 'firefox'];\nvar SUPPORTED_IOS_BROWSERS = ['chrome', 'safari']; // Currently none. Add 'brave', 'edg', and 'edge' here once we start supporting them\n\nvar SUPPORTED_MOBILE_WEBKIT_BASED_BROWSERS = [];\n/**\n * Check if the current browser is officially supported by twilio-video.js.\n * @returns {boolean}\n */\n\nfunction isSupported() {\n  var browser = guessBrowser(); // NOTE (csantos): Return right away if there is no browser detected\n  // to prevent unnecessary checks which could lead to errors\n\n  if (!browser) {\n    return false;\n  }\n\n  var rebrandedChrome = rebrandedChromeBrowser(browser);\n  var mobileWebKit = mobileWebKitBrowser(browser);\n  var supportedMobileBrowsers = isAndroid() ? SUPPORTED_ANDROID_BROWSERS : SUPPORTED_IOS_BROWSERS;\n  return !!browser && isWebRTCSupported() && (!rebrandedChrome || SUPPORTED_CHROME_BASED_BROWSERS.includes(rebrandedChrome)) && !isNonChromiumEdge(browser) && (!mobileWebKit || SUPPORTED_MOBILE_WEBKIT_BASED_BROWSERS.includes(mobileWebKit)) && (!isMobile() || supportedMobileBrowsers.includes(browser));\n}\n\nmodule.exports = isSupported;","map":{"version":3,"sources":["../../lib/util/support.js"],"names":[],"mappings":"AAAA;;AAEM,IAAA,EAAA,GAA+C,OAAO,CAAC,yBAAD,CAAtD;AAAA,IAAE,YAAY,GAAA,EAAA,CAAA,YAAd;AAAA,IAAyB,iBAAiB,GAAA,EAAA,CAAA,OAA1C;;AACA,IAAA,EAAA,GAA0F,OAAO,CAAC,oBAAD,CAAjG;AAAA,IAAE,SAAS,GAAA,EAAA,CAAA,SAAX;AAAA,IAAa,QAAQ,GAAA,EAAA,CAAA,QAArB;AAAA,IAAuB,iBAAiB,GAAA,EAAA,CAAA,iBAAxC;AAAA,IAA0C,sBAAsB,GAAA,EAAA,CAAA,sBAAhE;AAAA,IAAkE,mBAAmB,GAAA,EAAA,CAAA,mBAArF;;AAEN,IAAM,+BAA+B,GAAG,CACtC,OADsC,EAEtC,KAFsC,EAGtC,MAHsC,EAItC,UAJsC,EAKtC,gBALsC,CAAxC;AAOA,IAAM,0BAA0B,GAAG,CACjC,QADiC,EAEjC,SAFiC,CAAnC;AAIA,IAAM,sBAAsB,GAAG,CAC7B,QAD6B,EAE7B,QAF6B,CAA/B,C,CAIA;;AACA,IAAM,sCAAsC,GAAG,EAA/C;AAEA;;;AAGG;;AACH,SAAS,WAAT,GAAoB;AAClB,MAAM,OAAO,GAAG,YAAY,EAA5B,CADkB,CAGlB;AACA;;AACA,MAAI,CAAC,OAAL,EAAc;AACZ,WAAO,KAAP;AACD;;AAED,MAAM,eAAe,GAAG,sBAAsB,CAAC,OAAD,CAA9C;AACA,MAAM,YAAY,GAAG,mBAAmB,CAAC,OAAD,CAAxC;AACA,MAAM,uBAAuB,GAAG,SAAS,KACvC,0BADuC,GACV,sBAD/B;AAGA,SAAO,CAAC,CAAC,OAAF,IACF,iBAAiB,EADf,KAED,CAAC,eAAD,IAAoB,+BAA+B,CAAC,QAAhC,CAAyC,eAAzC,CAFnB,KAGF,CAAC,iBAAiB,CAAC,OAAD,CAHhB,KAID,CAAC,YAAD,IAAiB,sCAAsC,CAAC,QAAvC,CAAgD,YAAhD,CAJhB,MAKD,CAAC,QAAQ,EAAT,IAAe,uBAAuB,CAAC,QAAxB,CAAiC,OAAjC,CALd,CAAP;AAMD;;AAED,MAAM,CAAC,OAAP,GAAiB,WAAjB","sourceRoot":"","sourcesContent":["'use strict';\nvar _a = require('@twilio/webrtc/lib/util'), guessBrowser = _a.guessBrowser, isWebRTCSupported = _a.support;\nvar _b = require('./browserdetection'), isAndroid = _b.isAndroid, isMobile = _b.isMobile, isNonChromiumEdge = _b.isNonChromiumEdge, rebrandedChromeBrowser = _b.rebrandedChromeBrowser, mobileWebKitBrowser = _b.mobileWebKitBrowser;\nvar SUPPORTED_CHROME_BASED_BROWSERS = [\n    'crios',\n    'edg',\n    'edge',\n    'electron',\n    'headlesschrome'\n];\nvar SUPPORTED_ANDROID_BROWSERS = [\n    'chrome',\n    'firefox'\n];\nvar SUPPORTED_IOS_BROWSERS = [\n    'chrome',\n    'safari'\n];\n// Currently none. Add 'brave', 'edg', and 'edge' here once we start supporting them\nvar SUPPORTED_MOBILE_WEBKIT_BASED_BROWSERS = [];\n/**\n * Check if the current browser is officially supported by twilio-video.js.\n * @returns {boolean}\n */\nfunction isSupported() {\n    var browser = guessBrowser();\n    // NOTE (csantos): Return right away if there is no browser detected\n    // to prevent unnecessary checks which could lead to errors\n    if (!browser) {\n        return false;\n    }\n    var rebrandedChrome = rebrandedChromeBrowser(browser);\n    var mobileWebKit = mobileWebKitBrowser(browser);\n    var supportedMobileBrowsers = isAndroid() ?\n        SUPPORTED_ANDROID_BROWSERS : SUPPORTED_IOS_BROWSERS;\n    return !!browser\n        && isWebRTCSupported()\n        && (!rebrandedChrome || SUPPORTED_CHROME_BASED_BROWSERS.includes(rebrandedChrome))\n        && !isNonChromiumEdge(browser)\n        && (!mobileWebKit || SUPPORTED_MOBILE_WEBKIT_BASED_BROWSERS.includes(mobileWebKit))\n        && (!isMobile() || supportedMobileBrowsers.includes(browser));\n}\nmodule.exports = isSupported;\n//# sourceMappingURL=support.js.map"]},"metadata":{},"sourceType":"script"}