{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\n    to[j] = from[i];\n  }\n\n  return to;\n};\n\nvar Participant = require('./participant');\n/**\n * A {@link RemoteParticipant} represents a remote {@link Participant} in a\n * {@link Room}.\n * @extends Participant\n * @property {Map<Track.SID, RemoteAudioTrackPublication>} audioTracks -\n *    The {@link Participant}'s {@link RemoteAudioTrackPublication}s\n * @property {Map<Track.SID, RemoteDataTrackPublication>} dataTracks -\n *    The {@link Participant}'s {@link RemoteDataTrackPublication}s\n * @property {Map<Track.SID, RemoteTrackPublication>} tracks -\n *    The {@link Participant}'s {@link RemoteTrackPublication}s\n * @property {Map<Track.SID, RemoteVideoTrackPublication>} videoTracks -\n *    The {@link Participant}'s {@link RemoteVideoTrackPublication}s\n * @emits RemoteParticipant#reconnected\n * @emits RemoteParticipant#reconnecting\n * @emits RemoteParticipant#trackDimensionsChanged\n * @emits RemoteParticipant#trackDisabled\n * @emits RemoteParticipant#trackEnabled\n * @emits RemoteParticipant#trackMessage\n * @emits RemoteParticipant#trackPublished\n * @emits RemoteParticipant#trackPublishPriorityChanged\n * @emits RemoteParticipant#trackStarted\n * @emits RemoteParticipant#trackSubscribed\n * @emits RemoteParticipant#trackSubscriptionFailed\n * @emits RemoteParticipant#trackSwitchedOff\n * @emits RemoteParticipant#trackSwitchedOn\n * @emits RemoteParticipant#trackUnpublished\n * @emits RemoteParticipant#trackUnsubscribed\n */\n\n\nvar RemoteParticipant = function (_super) {\n  __extends(RemoteParticipant, _super);\n  /**\n   * Construct a {@link RemoteParticipant}.\n   * @param {ParticipantSignaling} signaling\n   * @param {object} [options]\n   */\n\n\n  function RemoteParticipant(signaling, options) {\n    var _this = _super.call(this, signaling, options) || this;\n\n    _this._handleTrackSignalingEvents();\n\n    _this.once('disconnected', _this._unsubscribeTracks.bind(_this));\n\n    return _this;\n  }\n\n  RemoteParticipant.prototype.toString = function () {\n    return \"[RemoteParticipant #\" + this._instanceId + (this.sid ? \": \" + this.sid : '') + \"]\";\n  };\n  /**\n   * @private\n   * @param {RemoteTrack} remoteTrack\n   * @param {RemoteTrackPublication} publication\n   * @param {Track.ID} id\n   * @returns {?RemoteTrack}\n   */\n\n\n  RemoteParticipant.prototype._addTrack = function (remoteTrack, publication, id) {\n    if (!_super.prototype._addTrack.call(this, remoteTrack, id)) {\n      return null;\n    }\n\n    publication._subscribed(remoteTrack);\n\n    this.emit('trackSubscribed', remoteTrack, publication);\n    return remoteTrack;\n  };\n  /**\n   * @private\n   * @param {RemoteTrackPublication} publication\n   * @returns {?RemoteTrackPublication}\n   */\n\n\n  RemoteParticipant.prototype._addTrackPublication = function (publication) {\n    var addedPublication = _super.prototype._addTrackPublication.call(this, publication);\n\n    if (!addedPublication) {\n      return null;\n    }\n\n    this.emit('trackPublished', addedPublication);\n    return addedPublication;\n  };\n  /**\n   * @private\n   */\n\n\n  RemoteParticipant.prototype._getTrackPublicationEvents = function () {\n    return __spreadArray(__spreadArray([], __read(_super.prototype._getTrackPublicationEvents.call(this))), [['subscriptionFailed', 'trackSubscriptionFailed'], ['trackDisabled', 'trackDisabled'], ['trackEnabled', 'trackEnabled'], ['publishPriorityChanged', 'trackPublishPriorityChanged'], ['trackSwitchedOff', 'trackSwitchedOff'], ['trackSwitchedOn', 'trackSwitchedOn']]);\n  };\n  /**\n   * @private\n   */\n\n\n  RemoteParticipant.prototype._unsubscribeTracks = function () {\n    var _this = this;\n\n    this.tracks.forEach(function (publication) {\n      if (publication.isSubscribed) {\n        var track = publication.track;\n\n        publication._unsubscribe();\n\n        _this.emit('trackUnsubscribed', track, publication);\n      }\n    });\n  };\n  /**\n   * @private\n   * @param {RemoteTrack} remoteTrack\n   * @param {RemoteTrackPublication} publication\n   * @param {Track.ID} id\n   * @returns {?RemoteTrack}\n   */\n\n\n  RemoteParticipant.prototype._removeTrack = function (remoteTrack, publication, id) {\n    var unsubscribedTrack = this._tracks.get(id);\n\n    if (!unsubscribedTrack) {\n      return null;\n    }\n\n    _super.prototype._removeTrack.call(this, unsubscribedTrack, id);\n\n    publication._unsubscribe();\n\n    this.emit('trackUnsubscribed', unsubscribedTrack, publication);\n    return unsubscribedTrack;\n  };\n  /**\n   * @private\n   * @param {RemoteTrackPublication} publication\n   * @returns {?RemoteTrackPublication}\n   */\n\n\n  RemoteParticipant.prototype._removeTrackPublication = function (publication) {\n    this._signaling.clearTrackHint(publication.trackSid);\n\n    var removedPublication = _super.prototype._removeTrackPublication.call(this, publication);\n\n    if (!removedPublication) {\n      return null;\n    }\n\n    this.emit('trackUnpublished', removedPublication);\n    return removedPublication;\n  };\n\n  return RemoteParticipant;\n}(Participant);\n/**\n * The {@link RemoteParticipant} has reconnected to the {@link Room} after a signaling connection disruption.\n * @event RemoteParticipant#reconnected\n */\n\n/**\n * The {@link RemoteParticipant} is reconnecting to the {@link Room} after a signaling connection disruption.\n * @event RemoteParticipant#reconnecting\n */\n\n/**\n * One of the {@link RemoteParticipant}'s {@link RemoteVideoTrack}'s dimensions changed.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} whose dimensions changed\n * @event RemoteParticipant#trackDimensionsChanged\n */\n\n/**\n * A {@link RemoteTrack} was disabled by the {@link RemoteParticipant}.\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication} associated with the disabled {@link RemoteTrack}\n * @event RemoteParticipant#trackDisabled\n */\n\n/**\n * A {@link RemoteTrack} was enabled by the {@link RemoteParticipant}.\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication} associated with the enabled {@link RemoteTrack}\n * @event RemoteParticipant#trackEnabled\n */\n\n/**\n * A message was received over one of the {@link RemoteParticipant}'s\n * {@link RemoteDataTrack}s.\n * @event RemoteParticipant#trackMessage\n * @param {string|ArrayBuffer} data\n * @param {RemoteDataTrack} track - The {@link RemoteDataTrack} over which the\n *   message was received\n */\n\n/**\n * A {@link RemoteTrack} was published by the {@link RemoteParticipant} after\n * connecting to the {@link Room}. This event is not emitted for\n * {@link RemoteTrack}s that were published while the {@link RemoteParticipant}\n * was connecting to the {@link Room}.\n * @event RemoteParticipant#trackPublished\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   which represents the published {@link RemoteTrack}\n * @example\n * function trackPublished(publication) {\n *   console.log(`Track ${publication.trackSid} was published`);\n * }\n *\n * room.on('participantConnected', participant => {\n *   // Handle RemoteTracks published while connecting to the Room.\n *   participant.trackPublications.forEach(trackPublished);\n *\n *   // Handle RemoteTracks published after connecting to the Room.\n *   participant.on('trackPublished', trackPublished);\n * });\n */\n\n/**\n * One of the {@link RemoteParticipant}'s {@link RemoteTrack}s started.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that started\n * @event RemoteParticipant#trackStarted\n */\n\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} was subscribed to.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that was subscribed to\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   for the {@link RemoteTrack} that was subscribed to\n * @event RemoteParticipant#trackSubscribed\n */\n\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} could not be subscribed to.\n * @param {TwilioError} error - The reason the {@link RemoteTrack} could not be\n *   subscribed to\n * @param {RemoteTrackPublication} publication - The\n *   {@link RemoteTrackPublication} for the {@link RemoteTrack} that could not\n *   be subscribed to\n * @event RemoteParticipant#trackSubscriptionFailed\n */\n\n/**\n * The {@link RemoteTrackPublication}'s publish {@link Track.Priority} was changed by the\n * {@link RemoteParticipant}.\n * @param {Track.Priority} priority - the {@link RemoteTrack}'s new publish\n *   {@link Track.Priority};\n * @param {RemoteTrackPublication} publication - The\n *   {@link RemoteTrackPublication} for the {@link RemoteTrack} that changed priority\n * @event RemoteParticipant#trackPublishPriorityChanged\n */\n\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} was subscribed to.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that was switched off\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   for the {@link RemoteTrack} that was switched off\n * @event RemoteParticipant#trackSwitchedOff\n */\n\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} was switched on.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that was switched on.\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   for the {@link RemoteTrack} that was switched on\n * @event RemoteParticipant#trackSwitchedOn\n */\n\n/**\n * A {@link RemoteTrack} was unpublished by the {@link RemoteParticipant}.\n * @event RemoteParticipant#trackUnpublished\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   which represents the unpublished {@link RemoteTrack}\n */\n\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} was unsubscribed from.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that was unsubscribed from\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   for the {@link RemoteTrack} that was unsubscribed from\n * @event RemoteParticipant#trackUnsubscribed\n */\n\n\nmodule.exports = RemoteParticipant;","map":{"version":3,"sources":["../lib/remoteparticipant.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nvar Participant = require('./participant');\n/**\n * A {@link RemoteParticipant} represents a remote {@link Participant} in a\n * {@link Room}.\n * @extends Participant\n * @property {Map<Track.SID, RemoteAudioTrackPublication>} audioTracks -\n *    The {@link Participant}'s {@link RemoteAudioTrackPublication}s\n * @property {Map<Track.SID, RemoteDataTrackPublication>} dataTracks -\n *    The {@link Participant}'s {@link RemoteDataTrackPublication}s\n * @property {Map<Track.SID, RemoteTrackPublication>} tracks -\n *    The {@link Participant}'s {@link RemoteTrackPublication}s\n * @property {Map<Track.SID, RemoteVideoTrackPublication>} videoTracks -\n *    The {@link Participant}'s {@link RemoteVideoTrackPublication}s\n * @emits RemoteParticipant#reconnected\n * @emits RemoteParticipant#reconnecting\n * @emits RemoteParticipant#trackDimensionsChanged\n * @emits RemoteParticipant#trackDisabled\n * @emits RemoteParticipant#trackEnabled\n * @emits RemoteParticipant#trackMessage\n * @emits RemoteParticipant#trackPublished\n * @emits RemoteParticipant#trackPublishPriorityChanged\n * @emits RemoteParticipant#trackStarted\n * @emits RemoteParticipant#trackSubscribed\n * @emits RemoteParticipant#trackSubscriptionFailed\n * @emits RemoteParticipant#trackSwitchedOff\n * @emits RemoteParticipant#trackSwitchedOn\n * @emits RemoteParticipant#trackUnpublished\n * @emits RemoteParticipant#trackUnsubscribed\n */\nvar RemoteParticipant = /** @class */ (function (_super) {\n    __extends(RemoteParticipant, _super);\n    /**\n     * Construct a {@link RemoteParticipant}.\n     * @param {ParticipantSignaling} signaling\n     * @param {object} [options]\n     */\n    function RemoteParticipant(signaling, options) {\n        var _this = _super.call(this, signaling, options) || this;\n        _this._handleTrackSignalingEvents();\n        _this.once('disconnected', _this._unsubscribeTracks.bind(_this));\n        return _this;\n    }\n    RemoteParticipant.prototype.toString = function () {\n        return \"[RemoteParticipant #\" + this._instanceId + (this.sid ? \": \" + this.sid : '') + \"]\";\n    };\n    /**\n     * @private\n     * @param {RemoteTrack} remoteTrack\n     * @param {RemoteTrackPublication} publication\n     * @param {Track.ID} id\n     * @returns {?RemoteTrack}\n     */\n    RemoteParticipant.prototype._addTrack = function (remoteTrack, publication, id) {\n        if (!_super.prototype._addTrack.call(this, remoteTrack, id)) {\n            return null;\n        }\n        publication._subscribed(remoteTrack);\n        this.emit('trackSubscribed', remoteTrack, publication);\n        return remoteTrack;\n    };\n    /**\n     * @private\n     * @param {RemoteTrackPublication} publication\n     * @returns {?RemoteTrackPublication}\n     */\n    RemoteParticipant.prototype._addTrackPublication = function (publication) {\n        var addedPublication = _super.prototype._addTrackPublication.call(this, publication);\n        if (!addedPublication) {\n            return null;\n        }\n        this.emit('trackPublished', addedPublication);\n        return addedPublication;\n    };\n    /**\n     * @private\n     */\n    RemoteParticipant.prototype._getTrackPublicationEvents = function () {\n        return __spreadArray(__spreadArray([], __read(_super.prototype._getTrackPublicationEvents.call(this))), [\n            ['subscriptionFailed', 'trackSubscriptionFailed'],\n            ['trackDisabled', 'trackDisabled'],\n            ['trackEnabled', 'trackEnabled'],\n            ['publishPriorityChanged', 'trackPublishPriorityChanged'],\n            ['trackSwitchedOff', 'trackSwitchedOff'],\n            ['trackSwitchedOn', 'trackSwitchedOn']\n        ]);\n    };\n    /**\n     * @private\n     */\n    RemoteParticipant.prototype._unsubscribeTracks = function () {\n        var _this = this;\n        this.tracks.forEach(function (publication) {\n            if (publication.isSubscribed) {\n                var track = publication.track;\n                publication._unsubscribe();\n                _this.emit('trackUnsubscribed', track, publication);\n            }\n        });\n    };\n    /**\n     * @private\n     * @param {RemoteTrack} remoteTrack\n     * @param {RemoteTrackPublication} publication\n     * @param {Track.ID} id\n     * @returns {?RemoteTrack}\n     */\n    RemoteParticipant.prototype._removeTrack = function (remoteTrack, publication, id) {\n        var unsubscribedTrack = this._tracks.get(id);\n        if (!unsubscribedTrack) {\n            return null;\n        }\n        _super.prototype._removeTrack.call(this, unsubscribedTrack, id);\n        publication._unsubscribe();\n        this.emit('trackUnsubscribed', unsubscribedTrack, publication);\n        return unsubscribedTrack;\n    };\n    /**\n     * @private\n     * @param {RemoteTrackPublication} publication\n     * @returns {?RemoteTrackPublication}\n     */\n    RemoteParticipant.prototype._removeTrackPublication = function (publication) {\n        this._signaling.clearTrackHint(publication.trackSid);\n        var removedPublication = _super.prototype._removeTrackPublication.call(this, publication);\n        if (!removedPublication) {\n            return null;\n        }\n        this.emit('trackUnpublished', removedPublication);\n        return removedPublication;\n    };\n    return RemoteParticipant;\n}(Participant));\n/**\n * The {@link RemoteParticipant} has reconnected to the {@link Room} after a signaling connection disruption.\n * @event RemoteParticipant#reconnected\n */\n/**\n * The {@link RemoteParticipant} is reconnecting to the {@link Room} after a signaling connection disruption.\n * @event RemoteParticipant#reconnecting\n */\n/**\n * One of the {@link RemoteParticipant}'s {@link RemoteVideoTrack}'s dimensions changed.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} whose dimensions changed\n * @event RemoteParticipant#trackDimensionsChanged\n */\n/**\n * A {@link RemoteTrack} was disabled by the {@link RemoteParticipant}.\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication} associated with the disabled {@link RemoteTrack}\n * @event RemoteParticipant#trackDisabled\n */\n/**\n * A {@link RemoteTrack} was enabled by the {@link RemoteParticipant}.\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication} associated with the enabled {@link RemoteTrack}\n * @event RemoteParticipant#trackEnabled\n */\n/**\n * A message was received over one of the {@link RemoteParticipant}'s\n * {@link RemoteDataTrack}s.\n * @event RemoteParticipant#trackMessage\n * @param {string|ArrayBuffer} data\n * @param {RemoteDataTrack} track - The {@link RemoteDataTrack} over which the\n *   message was received\n */\n/**\n * A {@link RemoteTrack} was published by the {@link RemoteParticipant} after\n * connecting to the {@link Room}. This event is not emitted for\n * {@link RemoteTrack}s that were published while the {@link RemoteParticipant}\n * was connecting to the {@link Room}.\n * @event RemoteParticipant#trackPublished\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   which represents the published {@link RemoteTrack}\n * @example\n * function trackPublished(publication) {\n *   console.log(`Track ${publication.trackSid} was published`);\n * }\n *\n * room.on('participantConnected', participant => {\n *   // Handle RemoteTracks published while connecting to the Room.\n *   participant.trackPublications.forEach(trackPublished);\n *\n *   // Handle RemoteTracks published after connecting to the Room.\n *   participant.on('trackPublished', trackPublished);\n * });\n */\n/**\n * One of the {@link RemoteParticipant}'s {@link RemoteTrack}s started.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that started\n * @event RemoteParticipant#trackStarted\n */\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} was subscribed to.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that was subscribed to\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   for the {@link RemoteTrack} that was subscribed to\n * @event RemoteParticipant#trackSubscribed\n */\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} could not be subscribed to.\n * @param {TwilioError} error - The reason the {@link RemoteTrack} could not be\n *   subscribed to\n * @param {RemoteTrackPublication} publication - The\n *   {@link RemoteTrackPublication} for the {@link RemoteTrack} that could not\n *   be subscribed to\n * @event RemoteParticipant#trackSubscriptionFailed\n */\n/**\n * The {@link RemoteTrackPublication}'s publish {@link Track.Priority} was changed by the\n * {@link RemoteParticipant}.\n * @param {Track.Priority} priority - the {@link RemoteTrack}'s new publish\n *   {@link Track.Priority};\n * @param {RemoteTrackPublication} publication - The\n *   {@link RemoteTrackPublication} for the {@link RemoteTrack} that changed priority\n * @event RemoteParticipant#trackPublishPriorityChanged\n */\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} was subscribed to.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that was switched off\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   for the {@link RemoteTrack} that was switched off\n * @event RemoteParticipant#trackSwitchedOff\n */\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} was switched on.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that was switched on.\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   for the {@link RemoteTrack} that was switched on\n * @event RemoteParticipant#trackSwitchedOn\n */\n/**\n * A {@link RemoteTrack} was unpublished by the {@link RemoteParticipant}.\n * @event RemoteParticipant#trackUnpublished\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   which represents the unpublished {@link RemoteTrack}\n */\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} was unsubscribed from.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that was unsubscribed from\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   for the {@link RemoteTrack} that was unsubscribed from\n * @event RemoteParticipant#trackUnsubscribed\n */\nmodule.exports = RemoteParticipant;\n//# sourceMappingURL=remoteparticipant.js.map"]},"metadata":{},"sourceType":"script"}