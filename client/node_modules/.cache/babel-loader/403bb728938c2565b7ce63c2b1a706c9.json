{"ast":null,"code":"'use strict';\n/**\n * Statistics for a {@link Track}.\n * @property {Track.ID} trackId - The {@link Track} ID\n * @property {Track.SID} trackSid - The {@link Track}'s SID when published in\n *  in a {@link Room}\n * @property {number} timestamp - A Unix timestamp in milliseconds indicating\n *   when the {@link TrackStats} were gathered\n * @property {string} ssrc - The {@link Track}'s SSRC when transmitted over the\n *   RTCPeerConnection\n * @property {?number} packetsLost - The number of packets lost\n * @property {?string} codec - The name of the codec used to encode the\n *   {@link Track}'s media\n */\n\nvar TrackStats = function () {\n  /**\n   * @param {string} trackId - {@link Track} ID\n   * @param {StandardizedTrackStatsReport} statsReport\n   */\n  function TrackStats(trackId, statsReport) {\n    if (typeof trackId !== 'string') {\n      throw new Error('Track id must be a string');\n    }\n\n    Object.defineProperties(this, {\n      trackId: {\n        value: trackId,\n        enumerable: true\n      },\n      trackSid: {\n        value: statsReport.trackSid,\n        enumerable: true\n      },\n      timestamp: {\n        value: statsReport.timestamp,\n        enumerable: true\n      },\n      ssrc: {\n        value: statsReport.ssrc,\n        enumerable: true\n      },\n      packetsLost: {\n        value: typeof statsReport.packetsLost === 'number' ? statsReport.packetsLost : null,\n        enumerable: true\n      },\n      codec: {\n        value: typeof statsReport.codecName === 'string' ? statsReport.codecName : null,\n        enumerable: true\n      }\n    });\n  }\n\n  return TrackStats;\n}();\n\nmodule.exports = TrackStats;","map":{"version":3,"sources":["../../lib/stats/trackstats.js"],"names":[],"mappings":"AAAA;AAEA;;;;;;;;;;;;AAYG;;AACH,IAAA,UAAA,GAAA,YAAA;AACE;;;AAGG;AACH,WAAA,UAAA,CAAY,OAAZ,EAAqB,WAArB,EAAgC;AAC9B,QAAI,OAAO,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,YAAM,IAAI,KAAJ,CAAU,2BAAV,CAAN;AACD;;AAED,IAAA,MAAM,CAAC,gBAAP,CAAwB,IAAxB,EAA8B;AAC5B,MAAA,OAAO,EAAE;AACP,QAAA,KAAK,EAAE,OADA;AAEP,QAAA,UAAU,EAAE;AAFL,OADmB;AAK5B,MAAA,QAAQ,EAAE;AACR,QAAA,KAAK,EAAE,WAAW,CAAC,QADX;AAER,QAAA,UAAU,EAAE;AAFJ,OALkB;AAS5B,MAAA,SAAS,EAAE;AACT,QAAA,KAAK,EAAE,WAAW,CAAC,SADV;AAET,QAAA,UAAU,EAAE;AAFH,OATiB;AAa5B,MAAA,IAAI,EAAE;AACJ,QAAA,KAAK,EAAE,WAAW,CAAC,IADf;AAEJ,QAAA,UAAU,EAAE;AAFR,OAbsB;AAiB5B,MAAA,WAAW,EAAE;AACX,QAAA,KAAK,EAAE,OAAO,WAAW,CAAC,WAAnB,KAAmC,QAAnC,GACH,WAAW,CAAC,WADT,GAEH,IAHO;AAIX,QAAA,UAAU,EAAE;AAJD,OAjBe;AAuB5B,MAAA,KAAK,EAAE;AACL,QAAA,KAAK,EAAE,OAAO,WAAW,CAAC,SAAnB,KAAiC,QAAjC,GACH,WAAW,CAAC,SADT,GAEH,IAHC;AAIL,QAAA,UAAU,EAAE;AAJP;AAvBqB,KAA9B;AA8BD;;AACH,SAAA,UAAA;AAAC,CAzCD,EAAA;;AA2CA,MAAM,CAAC,OAAP,GAAiB,UAAjB","sourceRoot":"","sourcesContent":["'use strict';\n/**\n * Statistics for a {@link Track}.\n * @property {Track.ID} trackId - The {@link Track} ID\n * @property {Track.SID} trackSid - The {@link Track}'s SID when published in\n *  in a {@link Room}\n * @property {number} timestamp - A Unix timestamp in milliseconds indicating\n *   when the {@link TrackStats} were gathered\n * @property {string} ssrc - The {@link Track}'s SSRC when transmitted over the\n *   RTCPeerConnection\n * @property {?number} packetsLost - The number of packets lost\n * @property {?string} codec - The name of the codec used to encode the\n *   {@link Track}'s media\n */\nvar TrackStats = /** @class */ (function () {\n    /**\n     * @param {string} trackId - {@link Track} ID\n     * @param {StandardizedTrackStatsReport} statsReport\n     */\n    function TrackStats(trackId, statsReport) {\n        if (typeof trackId !== 'string') {\n            throw new Error('Track id must be a string');\n        }\n        Object.defineProperties(this, {\n            trackId: {\n                value: trackId,\n                enumerable: true\n            },\n            trackSid: {\n                value: statsReport.trackSid,\n                enumerable: true\n            },\n            timestamp: {\n                value: statsReport.timestamp,\n                enumerable: true\n            },\n            ssrc: {\n                value: statsReport.ssrc,\n                enumerable: true\n            },\n            packetsLost: {\n                value: typeof statsReport.packetsLost === 'number'\n                    ? statsReport.packetsLost\n                    : null,\n                enumerable: true\n            },\n            codec: {\n                value: typeof statsReport.codecName === 'string'\n                    ? statsReport.codecName\n                    : null,\n                enumerable: true\n            }\n        });\n    }\n    return TrackStats;\n}());\nmodule.exports = TrackStats;\n//# sourceMappingURL=trackstats.js.map"]},"metadata":{},"sourceType":"script"}