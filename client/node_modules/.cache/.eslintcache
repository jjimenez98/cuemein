[{"/Users/javierjimenez/cuemeinDeploy/capstone/client/src/index.js":"1","/Users/javierjimenez/cuemeinDeploy/capstone/client/src/App.js":"2","/Users/javierjimenez/cuemeinDeploy/capstone/client/src/components/Meeting.js":"3","/Users/javierjimenez/cuemeinDeploy/capstone/client/src/components/Room.js":"4","/Users/javierjimenez/cuemeinDeploy/capstone/client/src/components/ControlPanel.js":"5","/Users/javierjimenez/cuemeinDeploy/capstone/client/src/components/User.js":"6","/Users/javierjimenez/cuemeinDeploy/capstone/client/src/components/helpers.js":"7","/Users/javierjimenez/cuemeinDeploy/capstone/client/src/components/DominantUser.js":"8"},{"size":767,"mtime":1632373330151,"results":"9","hashOfConfig":"10"},{"size":242,"mtime":1632370461387,"results":"11","hashOfConfig":"10"},{"size":1407,"mtime":1632370499131,"results":"12","hashOfConfig":"10"},{"size":15043,"mtime":1632370499133,"results":"13","hashOfConfig":"10"},{"size":1958,"mtime":1632370499130,"results":"14","hashOfConfig":"10"},{"size":6475,"mtime":1632370499133,"results":"15","hashOfConfig":"10"},{"size":2278,"mtime":1632370499134,"results":"16","hashOfConfig":"10"},{"size":12038,"mtime":1632370499131,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2u7m41",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"/Users/javierjimenez/cuemeinDeploy/capstone/client/src/index.js",[],"/Users/javierjimenez/cuemeinDeploy/capstone/client/src/App.js",[],"/Users/javierjimenez/cuemeinDeploy/capstone/client/src/components/Meeting.js",[],"/Users/javierjimenez/cuemeinDeploy/capstone/client/src/components/Room.js",["38","39","40","41","42","43","44","45","46","47","48","49","50","51"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport Video from \"twilio-video\";\nimport User from \"./User\";\nimport DominantUser from \"./DominantUser\";\nimport { Container, Row, Col, Button, Navbar, Nav } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTimes,\n  faVideoSlash,\n  faMicrophoneSlash,\n  faMicrophone,\n  faDesktop,\n  faVideo,\n  faThumbsUp,\n  faHeadphones,\n  faRssSquare,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Room = ({ meetingname, token, emotion, logout, test }) => {\n  const [room, setRoom] = useState(null);\n  const [user, setUser] = useState([]);\n  //create user array here\n  //implement\n  const [newDomName, setNewDomName] = useState(\"\");\n  const [mute, setMute] = useState(false);\n  const [videomute, setVideomute] = useState(false);\n  const [deafenmute, setDeafenmute] = useState(false);\n  var intervalID;\n  var sentiment_intervalID;\n\n  // const reaction = require(\"./reaction\");\n  // const activateEmojiButtons = reaction.activateEmojiButtons;\n  // const addLocalData = reaction.addLocalData;\n  // activateEmojiButtons();\n  // addLocalData();\n  // const dataTrack = reaction.dataTrack;\n\n  const helpers = require(\"./helpers\");\n  const muteYourAudio = helpers.muteYourAudio;\n  const unmuteYourAudio = helpers.unmuteYourAudio;\n\n  const { LocalDataTrack } = require(`twilio-video`);\n\n  console.log(\"Room.js render\");\n\n  const takeSnapshot = (room, users) => {\n    if (!room.localParticipant.videoTracks.entries().next()) {\n      var videoElement = room.localParticipant.videoTracks.entries().next()\n        .value[1].track.mediaStreamTrack;\n      var imageCapture = new ImageCapture(videoElement);\n      imageCapture\n        .grabFrame()\n        .then((bitmap) => {\n          console.log(\"bitmap :\", bitmap);\n          let canvas = document.createElement(\"canvas\");\n          canvas.width = bitmap.width;\n          canvas.height = bitmap.height;\n          let context = canvas.getContext(\"2d\");\n\n          context.drawImage(bitmap, 0, 0);\n          canvas.toBlob(function (blob) {\n            // console.log(blob);\n            var reader = new FileReader();\n            reader.addEventListener(\"loadend\", () => {\n              fetch(reader.result)\n                .then((res) => res.blob())\n                .then((blob) => {\n                  // console.log(\"here is your binary: \", blob);\n                  fetch(\n                    \"/video/snapShot?identity=\" +\n                      room.localParticipant.identity +\n                      \"&room=\" +\n                      room.name,\n                    {\n                      method: \"POST\",\n                      body: blob,\n                      headers: {\n                        \"Content-Type\": \"application/octet-stream\",\n                      },\n                    }\n                  );\n                });\n            });\n            reader.readAsDataURL(blob);\n          }, \"image/jpeg\");\n        })\n        .catch(function (error) {\n          console.log(\"takePhoto() error: \", error);\n        });\n    }\n  };\n\n  //passing array here\n  //user state = array for rendering\n  const updateUserSentiments = (users) => {\n    console.log(users);\n    users.forEach((u) => {\n      fetch(\"/video/emotion?identity=\" + u.identity + \"&room=\" + room.name, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }).then((res) => {\n        u.emotion = res.body.emotion;\n      });\n    });\n  };\n\n  const restartSentiment = (user) => {\n    if (sentiment_intervalID) {\n      window.clearInterval(sentiment_intervalID);\n    }\n    sentiment_intervalID = window.setInterval(\n      updateUserSentiments,\n      10000,\n      user\n    );\n  };\n\n  useEffect(() => {\n    console.log(\"dominant speacjer Room.js effect\");\n\n    const participantConnected = (new_user) => {\n      console.log(\"Room.js - particiapnt connected\", new_user);\n      //add user to array\n      setUser((prevusers) => [...prevusers, new_user]);\n\n      restartSentiment(user);\n    };\n\n    const participantDisconnected = (gone_user) => {\n      console.log(\"Room.js - particiapnt disconnected\", gone_user, user);\n\n      //remove user from array\n      setUser((prevusers) => prevusers.filter((p) => p !== gone_user));\n      // setUser((prevusers) => prevusers.splice(prevusers.indexOf(gone_user), 1));\n      restartSentiment(user);\n      console.log(user);\n    };\n\n    const ParticipantNewDominantSpeaker = (user) => {\n      if (user !== null) {\n        // console.log(\"new dominant speaker Room.js\");\n        setNewDomName(user.identity);\n      } else if (user === null) {\n        setNewDomName(null);\n      }\n    };\n\n    const participantRemoteVideoMuted = (track, user) => {\n      // console.log(\"Room.js - Track disable\", track, user);\n    };\n\n    const participantRemotedAudioMuted = (track, user) => {};\n\n    let dataTrack; // add this at the top with the other variable declarations\n\n    function addToLocalDataLabel(newText) {\n      let localDataLabel = document.getElementById(\"datalocal\");\n      localDataLabel.innerHTML = newText;\n      animateDataLabel(localDataLabel, \"appear\");\n    }\n\n    function sendDataToRoom(data, id, identity) {\n      dataTrack.send(\n        JSON.stringify({\n          emojiData: data,\n          user: id,\n          identity: identity,\n        })\n      );\n    }\n\n    function emojiButtonHandler(event) {\n      let emojiButton = event.target;\n      let emojiText = emojiButton.innerHTML;\n      addToLocalDataLabel(emojiText);\n\n      setRoom((currentRoom) => {\n        console.log(\"id\", currentRoom);\n        sendDataToRoom(\n          emojiText,\n          currentRoom.localParticipant.sid,\n          currentRoom.identity\n        );\n        return currentRoom;\n      });\n      console.log(\"id\", room, \"fdsafsadas\");\n    }\n\n    function activateEmojiButtons() {\n      let emojiButtonGroup = document.getElementsByClassName(\"emojibuttons\");\n      let emojiButton;\n      for (let i = 0; i < emojiButtonGroup.length; i++) {\n        emojiButton = emojiButtonGroup[i];\n        emojiButton.addEventListener(\"click\", emojiButtonHandler);\n      }\n    }\n\n    activateEmojiButtons();\n\n    function addLocalData() {\n      // Creates a Local Data Track\n      var localDataTrack = new LocalDataTrack();\n      dataTrack = localDataTrack;\n    }\n    addLocalData();\n\n    function animateDataLabel(div, startClass) {\n      setTimeout(function () {\n        div.classList.remove(startClass);\n      }, 1000);\n      div.classList.add(startClass);\n    }\n\n    Video.connect(token, {\n      name: meetingname,\n      dominantSpeaker: true,\n      audio: true,\n      video: true,\n    }).then((room) => {\n      console.log(\"Room.js - line 59 - video.connect\", room);\n      setRoom(room);\n      // Publishing the local Data Track to the Room\n      // room.localParticipant.publishTrack(dataTrack);\n      //intervalID = window.setInterval(takeSnapshot, 10000, room,user);\n      room.on(\"participantConnected\", participantConnected);\n      room.on(\"participantDisconnected\", participantDisconnected);\n      room.on(\"dominantSpeakerChanged\", ParticipantNewDominantSpeaker);\n      room.on(\"trackDisabled\", participantRemoteVideoMuted);\n      room.localParticipant.publishTrack(dataTrack);\n      room.participants.forEach(participantConnected);\n      intervalID = window.setInterval(takeSnapshot, 50000, room, user);\n    });\n\n    return () => {\n      if (intervalID) {\n        window.clearInterval(intervalID);\n      }\n      setRoom((currentRoom) => {\n        if (currentRoom && currentRoom.localParticipant.state === \"connected\") {\n          currentRoom.localParticipant.tracks.forEach(function (\n            trackPublication\n          ) {\n            trackPublication.track.stop();\n          });\n          console.log(\"disconnect!!!!!!\");\n          currentRoom.disconnect();\n          return null;\n        } else {\n          return currentRoom;\n        }\n      });\n    };\n  }, [meetingname, token]);\n\n  const mutecallback = useCallback(() => {\n    console.log(\"called mutecallback, button pressed\");\n    if (mute === false && room !== null) {\n      helpers.muteYourAudio(room);\n      setMute(true);\n    } else if (mute === true && room !== null) {\n      helpers.unmuteYourAudio(room);\n      setMute(false);\n    }\n  }, [mute, room]);\n\n  const mutevideocallback = useCallback(() => {\n    console.log(\"called mutevideocallback, button pressed\");\n    if (videomute === false && room !== null) {\n      helpers.muteYourVideo(room);\n      setVideomute(true);\n    } else if (videomute === true && room !== null) {\n      helpers.unmuteYourVideo(room);\n      setVideomute(false);\n    }\n  }, [videomute, room]);\n\n  const defeancallback = useCallback(() => {\n    console.log(\"called deafencallback, button pressed\");\n    if (deafenmute === false && room !== null) {\n      muteYourAudio(room);\n      setDeafenmute(true);\n    } else if (deafenmute === true && room != null) {\n      unmuteYourAudio(room);\n      setDeafenmute(false);\n    }\n  }, [room, deafenmute]);\n\n  const logoutcallback = useCallback(() => {\n    console.log(\"testing - line 125!!!!!!\", room);\n    if (room && room.localParticipant.state === \"connected\") {\n      room.localParticipant.tracks.forEach(function (trackPublication) {\n        if (\n          trackPublication.track.kind == \"video\" ||\n          trackPublication.track.kind == \"audio\"\n        ) {\n          trackPublication.track.stop();\n        }\n      });\n      //debugger;\n      room.disconnect();\n    }\n    logout();\n  }, [room]);\n\n  const remoteParticipants = user.map((user, index) => (\n    <User key={index} user={user} mute={deafenmute} />\n  ));\n\n  return (\n    <div className=\"room\">\n      <Container className=\"cameras\" fluid=\"true\">\n        <Row className=\"cameras-row\">\n          <Col sm={2} className=\"local-participant\">\n            {room ? (\n              <div className=\"local-participant-camera\">\n                <User\n                  key={room.localParticipant.sid}\n                  user={room.localParticipant}\n                  mute={deafenmute}\n                  local={\"i\"}\n                />\n                <div id=\"datalocal\" className=\"emoji\"></div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div className=\"remote-participants\">{remoteParticipants}</div>\n          </Col>\n          <Col sm={10} className=\"dominant\">\n            <DominantUser\n              className=\"dominant-user\"\n              key={\"dominant\"}\n              room={room}\n            />\n            <div className=\"dominant-header-bg\">\n              <div className=\"dominant-header\">\n                <div className=\"dominant-header-room\">\n                  Room Name: {meetingname}\n                </div>\n                <div className=\"dominant-header-speaker\">\n                  Talking: {newDomName}\n                </div>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n      <Container fluid=\"true\">\n        <div className=\"toolbar\">\n          <div className=\"toolbar-items\">\n            <div className=\"logoutbutton\">\n              <button\n                className=\"logoutbutton-btn danger\"\n                onClick={logoutcallback}\n              >\n                LOG OUT\n              </button>\n            </div>\n            <div className=\"btns-toolbar\">\n              <div className=\"col-audio\">\n                {mute ? (\n                  <button className=\"btn1 info\" onClick={mutecallback}>\n                    <span className=\"btn2\">Mute</span>\n                    <FontAwesomeIcon\n                      className=\"btnsize\"\n                      icon={faMicrophoneSlash}\n                    />\n                  </button>\n                ) : (\n                  <button className=\"btn1 info\" onClick={mutecallback}>\n                    <span className=\"btn2\">Mute</span>\n                    <FontAwesomeIcon className=\"btnsize\" icon={faMicrophone} />\n                  </button>\n                )}\n              </div>\n              <div className=\"col-video\">\n                {videomute ? (\n                  <button className=\"btn1 info\" onClick={mutevideocallback}>\n                    <span className=\"btn2\">Camera</span>\n                    <FontAwesomeIcon className=\"btnsize\" icon={faVideoSlash} />\n                  </button>\n                ) : (\n                  <button className=\"btn1 info\" onClick={mutevideocallback}>\n                    <span className=\"btn2\">Camera</span>\n                    <FontAwesomeIcon className=\"btnsize\" icon={faVideo} />\n                  </button>\n                )}\n              </div>\n              <div className=\"col-silence\">\n                {deafenmute ? (\n                  <button className=\"btn1 info\" onClick={defeancallback}>\n                    <span className=\"btn2\">Silence</span>\n                    <FontAwesomeIcon className=\"btnsize\" icon={faTimes} />\n                  </button>\n                ) : (\n                  <button className=\"btn1 info\" onClick={defeancallback}>\n                    <span className=\"btn2\">Silence</span>\n                    <FontAwesomeIcon className=\"btnsize\" icon={faHeadphones} />\n                  </button>\n                )}\n              </div>\n            </div>\n            <div className=\"col-emoji\">\n              <div\n                className=\"emojiPanel\"\n                style={{\n                  padding: \"1rem\",\n                }}\n              >\n                <div className=\"reaction-container\">\n                  <span className=\"reaction-label-like\">Like</span>\n                  <button\n                    id=\"emoji-wink\"\n                    className=\"btn3 warning emojibuttons\"\n                    style={{\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    <span className=\"reaction-entity\">&#128077;</span>\n                  </button>\n                </div>\n\n                <div className=\"reaction-container\">\n                  <span className=\"reaction-label-dislike\">Dislike</span>\n                  <button\n                    id=\"emoji-eyes\"\n                    className=\"btn3 warning emojibuttons\"\n                    style={{\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    <span className=\"reaction-entity\">&#128078;</span>\n                  </button>\n                </div>\n\n                <div className=\"reaction-container\">\n                  <span className=\"reaction-label-love\">Love</span>\n                  <button\n                    id=\"emoji-heart\"\n                    className=\"btn3 warning emojibuttons\"\n                    style={{\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    <span className=\"reaction-entity\">&#10084;</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default Room;\n","/Users/javierjimenez/cuemeinDeploy/capstone/client/src/components/ControlPanel.js",["52"],"import React from 'react';\nimport {Container, Row, Form, Button} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst ControlPanel = ({\n  username,\n  handleUsernameChange,\n  roomName,\n  handleRoomNameChange,\n  handleSubmit\n}) => {\n  return (\n    <Container className=\"controlpanel\" fluid>\n      <Row className=\"cmilogo\">\n        <img src= \"/cuemeinlogo.png\" width=\"400\" height=\"400\"></img>\n      </Row> \n      <Row className=\"control\">\n          <Form onSubmit={handleSubmit}>\n            <Form.Label className=\"meeting\">Join a Meeting</Form.Label>\n\n            <Form.Group>\n            <Form.Label className=\"name\">Name:</Form.Label>\n            <Form.Control className=\"inputname\" size=\"lg\" type=\"name\" value={username}  onChange={handleUsernameChange} placeholder=\"User ID\" />\n            </Form.Group>\n\n            <Form.Group>\n            <Form.Label className=\"meetingname\">Meeting name:</Form.Label>\n            <Form.Control className=\"inputmeetingname\" size=\"lg\" type=\"meetingname\"  value={roomName}  onChange={handleRoomNameChange} placeholder=\"Room Name\" />\n            </Form.Group>\n\n            <Button variant=\"success\" type=\"submit\" >JOIN</Button>\n          </Form>\n        {/* <form onSubmit={handleSubmit}>\n          <h1>Enter a Meeting</h1>\n          <div>\n            <label htmlFor=\"name\">Name:</label>\n            <input\n              type=\"text\"\n              id=\"field\"\n              value={username}\n              onChange={handleUsernameChange}\n              required\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"room\">Meeting name:</label>\n            <input\n              type=\"text\"\n              id=\"room\"\n              value={roomName}\n              onChange={handleRoomNameChange}\n              required\n            />\n          </div>\n          <button type=\"submit\">Submit</button>\n        </form> */}\n      </Row>\n    </Container>\n  );\n};\n\nexport default ControlPanel;","/Users/javierjimenez/cuemeinDeploy/capstone/client/src/components/User.js",["53","54","55","56","57","58","59"],"import React, { useState, useEffect, useRef } from \"react\";\n// import {Container, Row, Col, Button} from 'react-bootstrap'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMicrophoneSlash, faCamera } from \"@fortawesome/free-solid-svg-icons\";\n\nconst helpers = require(\"./helpers\");\nconst muteYourAudio = helpers.muteYourAudio;\nconst unmuteYourAudio = helpers.unmuteYourAudio;\n\nconst User = ({ user, mute, local = \"\" }) => {\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n  const [muted, setMute] = useState(false);\n  const [vmute, setVmute] = useState(false);\n  const [reaction, setReaction] = useState(\"\");\n  // const [emotion, setEmotion] = useState(null);\n  // const [emotion_style, setEmotion_Style] = useState(\"participant-video\");\n\n  const videoref = useRef();\n  const audioref = useRef();\n  let locals = \"black-box\";\n\n  console.log(\"User.js\", user.identity);\n\n  const toggleMute = (muted) => {\n    setMute(muted);\n    console.log(\"toggle mute\", muted);\n  };\n\n  const toggleVmute = (muted) => {\n    console.log(\"toggleVmute\", muted);\n    setVmute(muted);\n  };\n\n  const trackpubsToTracks = (trackMap) =>\n    Array.from(trackMap.values())\n      .map((publication) => publication.track)\n      .filter((track) => track !== null);\n\n  function attachRemoteDataTrack(div, track) {\n    console.log(div);\n    let d = document.getElementById(div);\n    console.log(d, \"user.id DIV\");\n    let dataDiv = document.createElement(\"div\");\n    dataDiv.setAttribute(\"id\", track.sid);\n    dataDiv.setAttribute(\"class\", \"emoji\");\n    d.appendChild(dataDiv);\n  }\n  function animateDataLabel(div, startClass) {\n    setTimeout(function () {\n      div.classList.remove(startClass);\n    }, 5000);\n    div.classList.add(startClass);\n  }\n\n  function addToRemoteDataLabel(newText, dataTrackSID) {\n    let remoteDataLabel = document.getElementById(dataTrackSID);\n    remoteDataLabel.innerHTML = newText;\n    animateDataLabel(remoteDataLabel, \"appear\");\n  }\n\n  useEffect(() => {\n    setVideoTracks(trackpubsToTracks(user.videoTracks));\n    setAudioTracks(trackpubsToTracks(user.audioTracks));\n\n    user.videoTracks.forEach((track) => {\n      track.on(\"trackEnabled\", toggleVmute.bind(this, false));\n      track.on(\"trackDisabled\", toggleVmute.bind(this, true));\n    });\n\n    user.audioTracks.forEach((track) => {\n      track.on(\"trackEnabled\", toggleMute.bind(this, false));\n      track.on(\"trackDisabled\", toggleMute.bind(this, true));\n    });\n\n    const trackSubscribed = (track) => {\n      console.log(track, \"track subs\");\n      if (track.kind === \"video\") {\n        setVmute(!track.isEnabled);\n        setVideoTracks((videoTracks) => [...videoTracks, track]);\n      } else if (track.kind === \"audio\") {\n        setMute(!track.isEnabled);\n        setAudioTracks((audioTracks) => [...audioTracks, track]);\n      } else if (track.kind == \"data\") {\n        // Registering addToRemoteDataLabel(...) event handler Remote Data Track receive\n        track.on(\"message\", (data) => {\n          console.log(\"DATA REACTION\");\n          console.log(JSON.parse(data).emojiData, track.sid);\n          console.log(JSON.parse(data).user, \"reaction id\");\n          // setReaction(JSON.parse(data).emojiData);\n          attachRemoteDataTrack(JSON.parse(data).user, track);\n          addToRemoteDataLabel(JSON.parse(data).emojiData, track.sid);\n        });\n        // Attaching the data track to a display label\n        //attachRemoteDataTrack(JSON.parse(data).id, track);\n        console.log(\"TRACK\");\n        console.log(\"TRACK\", track);\n      }\n    };\n\n    const trackUnsubscribed = (track) => {\n      if (track.kind === \"video\") {\n        setVideoTracks((videoTracks) => videoTracks.filter((v) => v !== track));\n      } else if (track.kind === \"audio\") {\n        setAudioTracks((audioTracks) => audioTracks.filter((a) => a !== track));\n      }\n      // else if (track.kind === \"data\") {\n      //   document.getElementById(track.sid).remove();\n      // }\n    };\n\n    user.on(\"trackSubscribed\", trackSubscribed);\n    user.on(\"trackUnsubscribed\", trackUnsubscribed);\n\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      user.removeAllListeners();\n    };\n  }, [user]);\n\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n    if (videoTrack) {\n      console.log(\"User.js attach()\", user.identity);\n      videoTrack.attach(videoref.current);\n      return () => {\n        console.log(\"User.js detach()\", user.identity);\n        videoTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n\n  useEffect(() => {\n    const audioTrack = audioTracks[0];\n    if (audioTrack) {\n      audioTrack.attach(audioref.current);\n      return () => {\n        audioTrack.detach();\n      };\n    }\n  }, [audioTracks]);\n\n  if (local === \"i\") {\n    locals = \"participant-video-emptyi\";\n  } else {\n    locals = \"participant-video-empty\";\n  }\n\n  return (\n    <div className=\"user-camera\">\n      <div id={user.sid} className=\"user-camera-reaction\"></div>\n\n      <div className=\"user-camera-box\">\n        {vmute ? (\n          <div className=\"black-box\">fds</div>\n        ) : (\n          // <video className={\"participant-video-empty\"} height=\"120\"></video>\n          \"\"\n        )}\n        {vmute ? (\n          <FontAwesomeIcon\n            className={\"empty-icon-video\"}\n            icon={faCamera}\n            size=\"2x\"\n          />\n        ) : (\n          // <video className={\"participant-video-empty\"} height=\"120\"></video>\n          \"\"\n        )}\n\n        {vmute ? (\n          <video className={locals} width=\"100%\" ref={videoref} />\n        ) : (\n          // <video className={\"participant-video-empty\"} height=\"120\"></video>\n          <video\n            className={\"participant-video\"}\n            width=\"100%\"\n            ref={videoref}\n            autoPlay={true}\n          />\n        )}\n      </div>\n\n      <div className=\"participant-border\">\n        <div className=\"participant-border-name\">{user.identity}</div>\n\n        {muted ? (\n          <div className=\"muted-bg\">\n            <FontAwesomeIcon\n              className={\"muted\"}\n              icon={faMicrophoneSlash}\n              size=\"1x\"\n            />\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      {mute ? (\n        <audio ref={audioref} autoPlay={true} muted />\n      ) : (\n        <audio ref={audioref} autoPlay={true} muted />\n      )}\n    </div>\n  );\n};\n\nexport default User;\n","/Users/javierjimenez/cuemeinDeploy/capstone/client/src/components/helpers.js",[],"/Users/javierjimenez/cuemeinDeploy/capstone/client/src/components/DominantUser.js",["60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"],"import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMehBlank,\n  faGrinStars,\n  faMeh,\n  faTired,\n  faFrownOpen,\n  faSadTear,\n  faLaughBeam,\n  faAngry,\n  faUsers,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst DominantUser = ({ room }) => {\n  const [videoTrackss, setVideoTrackss] = useState([]);\n  const [audioTrackss, setAudioTrackss] = useState([]);\n  const [emotion, setEmotion] = useState(\"-\");\n  const [emotion_style, setEmotion_Style] = useState(\"participant-video\");\n  const [dominant, setDominant] = useState(null);\n\n  const videoref = useRef();\n  const audioref = useRef();\n\n  function attachRemoteDataTrack(div, track) {\n    console.log(div);\n    let d = document.getElementById(div);\n    console.log(d, \"user.id DIV\");\n    let dataDiv = document.createElement(\"div\");\n    dataDiv.setAttribute(\"id\", track.sid);\n    dataDiv.setAttribute(\"class\", \"emoji\");\n    d.appendChild(dataDiv);\n  }\n\n  function addToRemoteDataLabel(newText, dataTrackSID) {\n    let remoteDataLabel = document.getElementById(dataTrackSID);\n    remoteDataLabel.innerHTML = newText;\n    // animateDataLabel(remoteDataLabel, \"appear\");\n  }\n\n  useEffect(() => {\n    const ParticipantDominantSpeaker = (user) => {\n      setDominant(user);\n      console.log(\"new dominant speaker Dominant.js\");\n    };\n    if (room !== null) {\n      room.on(\"dominantSpeakerChanged\", ParticipantDominantSpeaker);\n    }\n  }, [room]);\n\n  const trackpubsToTracks = (trackMap) =>\n    Array.from(trackMap.values())\n      .map((publication) => publication.track)\n      .filter((track) => track !== null);\n\n  useEffect(() => {\n    if (dominant != null) {\n      setVideoTrackss(trackpubsToTracks(dominant.videoTracks));\n      setAudioTrackss(trackpubsToTracks(dominant.audioTracks));\n\n      const trackSubscribed = (track) => {\n        if (track.kind === \"video\") {\n          setVideoTrackss((videoTracks) => [...videoTracks, track]);\n        } else if (track.kind === \"audio\") {\n          setAudioTrackss((audioTracks) => [...audioTracks, track]);\n        } else if (track.kind == \"data\") {\n          track.on(\"message\", (data) => {\n            // attachRemoteDataTrack(JSON.parse(data).user, track);\n            // addToRemoteDataLabel(JSON.parse(data).emojiData, track.sid);\n            console.log(\n              JSON.parse(data).user,\n              JSON.parse(data).emojiData,\n              JSON.parse(data).identity,\n              \"Dominant-REACTION\"\n            );\n          });\n        }\n      };\n\n      const trackUnsubscribed = (track) => {\n        if (track.kind === \"video\") {\n          setVideoTrackss((videoTracks) =>\n            videoTracks.filter((v) => v !== track)\n          );\n        } else if (track.kind === \"audio\") {\n          setAudioTrackss((audioTracks) =>\n            audioTracks.filter((v) => v !== track)\n          );\n        }\n      };\n\n      dominant.on(\"trackSubscribed\", trackSubscribed);\n      dominant.on(\"trackUnsubscribed\", trackUnsubscribed);\n\n      return () => {\n        setVideoTrackss([]);\n        setAudioTrackss([]);\n        dominant.removeAllListeners();\n      };\n    }\n  }, [dominant]);\n\n  const takeSnapshot = (videoElement) => {\n    var imageCapture = new ImageCapture(videoElement);\n    imageCapture\n      .grabFrame()\n      .then((bitmap) => {\n        let canvas = document.createElement(\"canvas\");\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        let context = canvas.getContext(\"2d\");\n\n        context.drawImage(bitmap, 0, 0);\n        canvas.toBlob(function (blob) {\n          var reader = new FileReader();\n          reader.addEventListener(\"loadend\", () => {\n            fetch(reader.result)\n              .then((res) => res.blob())\n              .then((blob) => {\n                const fetchUrl =\n                  \"/video/snapShot?identity=\" +\n                  dominant.identity +\n                  \"&room=\" +\n                  room.name;\n                fetch(fetchUrl, {\n                  method: \"POST\",\n                  body: blob,\n                  headers: {\n                    \"Content-Type\": \"application/octet-stream\",\n                  },\n                }).then(() => {\n                  //Update the UI Sentiment to display the most up-to-date sentiment, according to backend\n                  fetchSentiment();\n                });\n              });\n          });\n          reader.readAsDataURL(blob);\n        }, \"image/jpeg\");\n      })\n      .catch(function (error) {\n        console.log(\"takePhoto() error: \", error);\n      });\n  };\n\n  const fetchSentiment = async () => {\n    const getUrl =\n      \"/emotion?identity=\" + dominant.identity + \"&room=\" + room.name;\n    const data = await fetch(getUrl, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => res.json());\n\n    setEmotion(data);\n  };\n\n  const startRecording = (audioElement, lengthInMS) => {\n    let recorder = new MediaRecorder(audioElement);\n    let data = [];\n\n    recorder.ondataavailable = (event) => data.push(event.data);\n    recorder.start();\n    // console.log(recorder.state + \" for \" + lengthInMS / 1000 + \" seconds...\");\n\n    let stopped = new Promise((resolve, reject) => {\n      recorder.onstop = resolve;\n      recorder.onerror = (event) => reject(event.name);\n    });\n\n    let recorded = wait(lengthInMS).then(\n      () => recorder.state == \"recording\" && recorder.stop()\n    );\n\n    return Promise.all([stopped, recorded]).then(() => data);\n  };\n\n  const recordAudio = (audioElement, lengthInMS) => {\n    const MediaStreamer = new MediaStream();\n    MediaStreamer.addTrack(audioElement);\n    const recorder = new MediaRecorder(MediaStreamer);\n    navigator.mediaDevices\n      .getUserMedia({\n        audio: true,\n      })\n      .then(() => startRecording(MediaStreamer, lengthInMS))\n      .then((recordedChunks) => {\n        let recordedBlob = new Blob(recordedChunks, {\n          type: \"application/octet-stream\",\n        });\n        var reader = new FileReader();\n        reader.addEventListener(\"loadend\", () => {\n          fetch(reader.result)\n            .then((res) => res.blob())\n            .then((recordedBlob) => {\n              const fetchUrl =\n                \"/audio/snapShot?identity=\" +\n                dominant.identity +\n                \"&room=\" +\n                room.name;\n              fetch(fetchUrl, {\n                method: \"POST\",\n                body: recordedBlob,\n                headers: {\n                  \"Content-Type\": \"application/octet-stream\",\n                },\n              }).then(() => {\n                //Update the UI Sentiment to display the most up-to-date sentiment, according to backend\n                fetchSentiment();\n              });\n            });\n        });\n        reader.readAsDataURL(recordedBlob);\n      });\n  };\n\n  function wait(delayInMS) {\n    return new Promise((resolve) => setTimeout(resolve, delayInMS));\n  }\n\n  function stop(stream) {\n    stream.getTracks().forEach((track) => track.stop());\n    console.log(\"Recording stopped\");\n  }\n\n  useEffect(() => {\n    if (dominant != null) {\n      const videoTrack = videoTrackss[0];\n      if (videoTrack) {\n        videoTrack.attach(videoref.current);\n      }\n      // return () => {\n      //   console.log(\"User.js detach()\");\n      //   videoTrack.detach();\n      // };\n    }\n  }, [videoTrackss]);\n\n  //Takes a snapshot, which calls to backend API to update emotion, every time there is a change in who the Dominant User is AND every 2 seconds\n  useEffect(() => {\n    const videoSnapshotInterval = setInterval(() => {\n      if (dominant != null && videoTrackss[0].isEnabled) {\n        const videoTrack = videoTrackss[0];\n        if (videoTrack) {\n          takeSnapshot(videoTrack.mediaStreamTrack);\n        }\n      }\n    }, 2000);\n    return () => {\n      clearInterval(videoSnapshotInterval);\n    }\n  }, [videoTrackss]);\n\n  //Start a new audio recording interval and stop the old one for parsing every 6 seconds\n  useEffect(() => {\n    const intervalInMS = 10000;\n    const audioSnapshotInterval = setInterval(() => {\n      console.log(\"New function called\");\n      if (dominant != null && !videoTrackss[0].isEnabled) {\n        const audioTrack = audioTrackss[0];\n        if (audioTrack) {\n          // audioTrack.attach(audioref.current);\n          recordAudio(audioTrack.mediaStreamTrack, intervalInMS);\n        }\n      }\n    }, intervalInMS);\n    return () => {\n      clearInterval(audioSnapshotInterval);\n      //TODO: Place something here that stops the recordAudio function for the previous dominant user\n      //when the dominant user changes. This will allow the interval to restart for the new\n      //dominant user right when the change happens, giving us more accurate audio (hopefully)\n    };\n  }, [audioTrackss]);\n\n  let emoji;\n  let emotiontext;\n  if (emotion.emotion === \"happiness\") {\n    emoji = (\n      // <img\n      //   className=\"dominant-emotion-happy-img\"\n      //   src=\"https://img.icons8.com/color/48/000000/happy--v1.png\"\n      // />\n\n      <FontAwesomeIcon\n        className={\"dominant-emotion-happy emotion\"}\n        icon={faLaughBeam}\n        size=\"2x\"\n      />\n    );\n\n    emotiontext = \"HAPPY\";\n  } else if (emotion.emotion === \"anger\") {\n    emoji = (\n      <FontAwesomeIcon\n        className={\"dominant-emotion-angry emotion\"}\n        icon={faAngry}\n        size=\"2x\"\n      />\n    );\n    emotiontext = \"ANGRY\";\n  } else if (emotion.emotion === \"sadness\") {\n    emoji = (\n      <FontAwesomeIcon\n        className={\"dominant-emotion-sadness emotion\"}\n        icon={faSadTear}\n        size=\"2x\"\n      />\n    );\n    emotiontext = \"SADNESS\";\n  } else if (emotion.emotion === \"fear\") {\n    emoji = (\n      <FontAwesomeIcon\n        className={\"dominant-emotion-fear emotion\"}\n        icon={faFrownOpen}\n        size=\"2x\"\n      />\n    );\n    emotiontext = \"FEAR\";\n  } else if (emotion.emotion === \"disgust\") {\n    emoji = (\n      <FontAwesomeIcon\n        className={\"dominant-emotion-disgust emotion\"}\n        icon={faTired}\n        size=\"2x\"\n      />\n    );\n    emotiontext = \"DISGUST\";\n  } else if (emotion.emotion === \"neutral\") {\n    emoji = (\n      <FontAwesomeIcon\n        className={\"dominant-emotion-neutral emotion\"}\n        icon={faMeh}\n        size=\"2x\"\n      />\n    );\n    emotiontext = \"NEUTRAL\";\n  } else if (emotion.emotion === \"surprise\") {\n    emoji = (\n      <FontAwesomeIcon\n        className={\"dominant-emotion-surprised emotion\"}\n        icon={faGrinStars}\n        size=\"2x\"\n      />\n    );\n    emotiontext = \"SURPRISE\";\n  } else if (emotion.emotion === \"-\") {\n    emoji = (\n      <FontAwesomeIcon\n        className={\"dominant-emotion-undefined emotion\"}\n        icon={faMehBlank}\n        size=\"2x\"\n      />\n    );\n    emotiontext = \"UNDEFINED\";\n  }\n\n  return (\n    <Row className=\"dominant-camera\">\n      <div id={\"das\"} className=\"dominant-camera-reaction\"></div>\n\n      {dominant ? (\n        <video\n          className={\"participant-video-dominant\"}\n          width=\"100%\"\n          height=\"100%\"\n          ref={videoref}\n          autoPlay={true}\n        />\n      ) : (\n        <div className={\"default-video-dominant\"}>\n          <FontAwesomeIcon\n            className={\"dominant-camera-default\"}\n            icon={faUsers}\n            size=\"2x\"\n          />\n        </div>\n      )}\n\n      <div className=\"dominant-border-emotion-icon\">\n        <h3 className=\"dominant-border-emotion-header\">Emotion</h3>\n        <div className=\"dominant-icon\">{emoji}</div>\n      </div>\n\n      <div className=\"dominant-border\">\n        {dominant ? (\n          <div className=\"dominant-border-name\">{dominant.identity}</div>\n        ) : (\n          \"\"\n        )}\n        <div className=\"dominant-border-emotion-background\">\n          <div className=\"dominant-border-emotion-text\">{emotiontext}</div>\n        </div>\n      </div>\n    </Row>\n  );\n};\n\nexport default DominantUser;\n",{"ruleId":"76","severity":1,"message":"77","line":5,"column":31,"nodeType":"78","messageId":"79","endLine":5,"endColumn":37},{"ruleId":"76","severity":1,"message":"80","line":5,"column":39,"nodeType":"78","messageId":"79","endLine":5,"endColumn":45},{"ruleId":"76","severity":1,"message":"81","line":5,"column":47,"nodeType":"78","messageId":"79","endLine":5,"endColumn":50},{"ruleId":"76","severity":1,"message":"82","line":13,"column":3,"nodeType":"78","messageId":"79","endLine":13,"endColumn":12},{"ruleId":"76","severity":1,"message":"83","line":15,"column":3,"nodeType":"78","messageId":"79","endLine":15,"endColumn":13},{"ruleId":"76","severity":1,"message":"84","line":17,"column":3,"nodeType":"78","messageId":"79","endLine":17,"endColumn":14},{"ruleId":"76","severity":1,"message":"85","line":155,"column":11,"nodeType":"78","messageId":"79","endLine":155,"endColumn":39},{"ruleId":"86","severity":1,"message":"87","line":234,"column":20,"nodeType":"88","endLine":234,"endColumn":71},{"ruleId":"86","severity":1,"message":"89","line":267,"column":6,"nodeType":"90","endLine":267,"endColumn":18,"suggestions":"91"},{"ruleId":"86","severity":1,"message":"89","line":278,"column":6,"nodeType":"90","endLine":278,"endColumn":23,"suggestions":"92"},{"ruleId":"86","severity":1,"message":"93","line":289,"column":6,"nodeType":"90","endLine":289,"endColumn":24,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":296,"column":39,"nodeType":"97","messageId":"98","endLine":296,"endColumn":41},{"ruleId":"95","severity":1,"message":"96","line":297,"column":39,"nodeType":"97","messageId":"98","endLine":297,"endColumn":41},{"ruleId":"86","severity":1,"message":"99","line":306,"column":6,"nodeType":"90","endLine":306,"endColumn":12,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":15,"column":9,"nodeType":"103","endLine":15,"endColumn":63},{"ruleId":"76","severity":1,"message":"104","line":8,"column":7,"nodeType":"78","messageId":"79","endLine":8,"endColumn":20},{"ruleId":"76","severity":1,"message":"105","line":9,"column":7,"nodeType":"78","messageId":"79","endLine":9,"endColumn":22},{"ruleId":"76","severity":1,"message":"106","line":16,"column":10,"nodeType":"78","messageId":"79","endLine":16,"endColumn":18},{"ruleId":"76","severity":1,"message":"107","line":16,"column":20,"nodeType":"78","messageId":"79","endLine":16,"endColumn":31},{"ruleId":"95","severity":1,"message":"96","line":85,"column":29,"nodeType":"97","messageId":"98","endLine":85,"endColumn":31},{"ruleId":"86","severity":1,"message":"108","line":121,"column":6,"nodeType":"90","endLine":121,"endColumn":12,"suggestions":"109"},{"ruleId":"86","severity":1,"message":"110","line":133,"column":6,"nodeType":"90","endLine":133,"endColumn":19,"suggestions":"111"},{"ruleId":"76","severity":1,"message":"112","line":1,"column":46,"nodeType":"78","messageId":"79","endLine":1,"endColumn":57},{"ruleId":"76","severity":1,"message":"113","line":2,"column":15,"nodeType":"78","messageId":"79","endLine":2,"endColumn":18},{"ruleId":"76","severity":1,"message":"77","line":2,"column":20,"nodeType":"78","messageId":"79","endLine":2,"endColumn":26},{"ruleId":"76","severity":1,"message":"114","line":2,"column":28,"nodeType":"78","messageId":"79","endLine":2,"endColumn":37},{"ruleId":"76","severity":1,"message":"115","line":21,"column":10,"nodeType":"78","messageId":"79","endLine":21,"endColumn":23},{"ruleId":"76","severity":1,"message":"116","line":21,"column":25,"nodeType":"78","messageId":"79","endLine":21,"endColumn":41},{"ruleId":"76","severity":1,"message":"117","line":25,"column":9,"nodeType":"78","messageId":"79","endLine":25,"endColumn":17},{"ruleId":"76","severity":1,"message":"118","line":27,"column":12,"nodeType":"78","messageId":"79","endLine":27,"endColumn":33},{"ruleId":"76","severity":1,"message":"119","line":37,"column":12,"nodeType":"78","messageId":"79","endLine":37,"endColumn":32},{"ruleId":"95","severity":1,"message":"96","line":68,"column":31,"nodeType":"97","messageId":"98","endLine":68,"endColumn":33},{"ruleId":"95","severity":1,"message":"96","line":174,"column":28,"nodeType":"97","messageId":"98","endLine":174,"endColumn":30},{"ruleId":"76","severity":1,"message":"120","line":183,"column":11,"nodeType":"78","messageId":"79","endLine":183,"endColumn":19},{"ruleId":"76","severity":1,"message":"121","line":223,"column":12,"nodeType":"78","messageId":"79","endLine":223,"endColumn":16},{"ruleId":"86","severity":1,"message":"122","line":239,"column":6,"nodeType":"90","endLine":239,"endColumn":20,"suggestions":"123"},{"ruleId":"86","severity":1,"message":"124","line":254,"column":6,"nodeType":"90","endLine":254,"endColumn":20,"suggestions":"125"},{"ruleId":"86","severity":1,"message":"126","line":275,"column":6,"nodeType":"90","endLine":275,"endColumn":20,"suggestions":"127"},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Nav' is defined but never used.","'faDesktop' is defined but never used.","'faThumbsUp' is defined but never used.","'faRssSquare' is defined but never used.","'participantRemotedAudioMuted' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'intervalID' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useCallback has a missing dependency: 'helpers'. Either include it or remove the dependency array.","ArrayExpression",["128"],["129"],"React Hook useCallback has missing dependencies: 'muteYourAudio' and 'unmuteYourAudio'. Either include them or remove the dependency array.",["130"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useCallback has a missing dependency: 'logout'. Either include it or remove the dependency array. If 'logout' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["131"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'muteYourAudio' is assigned a value but never used.","'unmuteYourAudio' is assigned a value but never used.","'reaction' is assigned a value but never used.","'setReaction' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'addToRemoteDataLabel'. Either include it or remove the dependency array.",["132"],"React Hook useEffect has a missing dependency: 'user.identity'. Either include it or remove the dependency array.",["133"],"'useCallback' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'emotion_style' is assigned a value but never used.","'setEmotion_Style' is assigned a value but never used.","'audioref' is assigned a value but never used.","'attachRemoteDataTrack' is defined but never used.","'addToRemoteDataLabel' is defined but never used.","'recorder' is assigned a value but never used.","'stop' is defined but never used.","React Hook useEffect has a missing dependency: 'dominant'. Either include it or remove the dependency array.",["134"],"React Hook useEffect has missing dependencies: 'dominant' and 'takeSnapshot'. Either include them or remove the dependency array.",["135"],"React Hook useEffect has missing dependencies: 'dominant', 'recordAudio', and 'videoTrackss'. Either include them or remove the dependency array.",["136"],{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [helpers, mute, room]",{"range":"155","text":"156"},"Update the dependencies array to be: [videomute, room, helpers]",{"range":"157","text":"158"},"Update the dependencies array to be: [deafenmute, room, muteYourAudio, unmuteYourAudio]",{"range":"159","text":"160"},"Update the dependencies array to be: [logout, room]",{"range":"161","text":"162"},"Update the dependencies array to be: [addToRemoteDataLabel, user]",{"range":"163","text":"164"},"Update the dependencies array to be: [user.identity, videoTracks]",{"range":"165","text":"166"},"Update the dependencies array to be: [dominant, videoTrackss]",{"range":"167","text":"168"},"Update the dependencies array to be: [dominant, takeSnapshot, videoTrackss]",{"range":"169","text":"170"},"Update the dependencies array to be: [audioTrackss, dominant, recordAudio, videoTrackss]",{"range":"171","text":"172"},[8319,8331],"[helpers, mute, room]",[8682,8699],"[videomute, room, helpers]",[9031,9049],"[deafenmute, room, muteYourAudio, unmuteYourAudio]",[9540,9546],"[logout, room]",[4280,4286],"[addToRemoteDataLabel, user]",[4594,4607],"[user.identity, videoTracks]",[7505,7519],"[dominant, videoTrackss]",[8030,8044],"[dominant, takeSnapshot, videoTrackss]",[8936,8950],"[audioTrackss, dominant, recordAudio, videoTrackss]"]